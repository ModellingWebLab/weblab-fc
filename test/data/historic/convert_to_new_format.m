% This script converts output from r12588 (as per the paper)
% to the new comma separated format.

% Get a list of all the ICaL protocols available
files = {'aslanidi_Purkinje_model_2009';...
'beeler_reuter_model_1977';...
'bondarenko_szigeti_bett_kim_rasmusson_2004_apical';...
'bondarenko_szigeti_bett_kim_rasmusson_2004_septal';...
'corrias_purkinje_2011';...
'courtemanche_ramirez_nattel_1998';...
'decker_2009';...
'earm_noble_model_1990';...
'espinosa_model_1998_normal';...
'faber_rudy_2000';...
'fink_noble_giles_model_2008';...
'fox_mcharg_gilmour_2002';...
'grandi_pasqualini_bers_2010_ss';...
'grandi_pasqualini_bers_2010_ss_endo';...
'hilgemann_noble_model_1987';...
'hund_rudy_2004';...
'iribe_model_2006';...
'iyer_2004';...
'iyer_model_2007';...
'jafri_rice_winslow_model_1998';...
'li_mouse_2010';...
'lindblad_model_1996';...
'livshitz_rudy_2007';...
'luo_rudy_1991';...
'mahajan_shiferaw_2008';...
'maleckar_model_2009';...
'matsuoka_model_2003';...
'noble_model_1991';...
'noble_model_1998';...
'nygren_atrial_model_1998';...
'pandit_clark_giles_demir_2001_endocardial_cell';...
'pandit_clark_giles_demir_2001_epicardial_cell';...
'pasek_simurda_orchard_christe_2008';...
'priebe_beuckelmann_1998';...
'sakmann_model_2000_epi';...
'shannon_wang_puglisi_weber_bers_2004';...
'ten_tusscher_model_2004_endo';...
'ten_tusscher_model_2004_epi';...
'ten_tusscher_model_2004_M';...
'ten_tusscher_model_2006_endo';...
'ten_tusscher_model_2006_epi';...
'ten_tusscher_model_2006_M';...
'winslow_model_1999'};

for i=1:length(files)
    i
    
    % FIRST DO ICaL
    file_name1 = [files{i} filesep 'ICaL' filesep 'outputs_final_membrane_voltage.dat'];
    file_name2 = [files{i} filesep 'ICaL' filesep 'outputs_min_LCC.dat'];
    try
        % If the file exists load it, otherwise skip
        d = importdata(file_name1);
        d2 = importdata(file_name2);
        % Create an output directory if results are present
        mkdir(['rejigged' filesep files{i} filesep 'ICaL']);        
    catch
        continue
    end
    assert(length(d.data)==26)
    assert(length(d2.data)==26)
    
    % Open a file for writing and discard existing contents
    [fid message] = fopen(['rejigged' filesep file_name1],'wt');
    fprintf(fid,'# Test potential');
    for j=1:length(d.data)
        fprintf(fid,'\n%g,%g,%g,',d.data(j,1),d.data(j,2),d.data(j,3));
    end
    fclose(fid);
    
    % Open a file for writing and discard existing contents
    [fid message] = fopen(['rejigged' filesep file_name2],'wt');
    fprintf(fid,'# Minimum current');
    for j=1:length(d2.data)
        fprintf(fid,'\n%g,%g,%g,',d2.data(j,1),d2.data(j,2),d2.data(j,3));
    end
    fclose(fid);
    clear d d2
end

for i=1:length(files)
    i
    % NOW DO S1-S2
    file_name1 = [files{i} filesep 'S1S2' filesep 'outputs_Apd90.dat'];
    file_name2 = [files{i} filesep 'S1S2' filesep 'outputs_DI.dat'];
    try
        % If the file exists load it, otherwise skip
        d = importdata(file_name1);
        d2 = importdata(file_name2);
        % Create an output directory if results are present
        mkdir(['rejigged' filesep files{i} filesep 'S1S2']);        
    catch
        continue
    end
    assert(length(d.data)==length(d2.data))
    
    % Open a file for writing and discard existing contents
    [fid message] = fopen(['rejigged' filesep files{i} filesep 'S1S2' filesep 'outputs_APD90.dat'],'wt');
    fprintf(fid,'# Action Potential Duration (at 90%%)');
    fprintf(fid,'\n%i,%i',1,length(d.data));
    for j=1:length(d.data)
        fprintf(fid,'\n%g',d.data(j));
    end
    fclose(fid);
    
    % Open a file for writing and discard existing contents
    [fid message] = fopen(['rejigged' filesep file_name2],'wt');
    fprintf(fid,'# Diastolic Interval');
    fprintf(fid,'\n%i,%i',1,length(d2.data));
    for j=1:length(d2.data)
        fprintf(fid,'\n%g',d2.data(j));
    end
    fclose(fid);
    
end



