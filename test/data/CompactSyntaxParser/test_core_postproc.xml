<?xml version='1.0' encoding='ASCII'?>
<protocol xmlns="https://chaste.cs.ox.ac.uk/nss/protocol/0.1#" xmlns:ns0="https://chaste.cs.ox.ac.uk/nss/protocol/0.1#" ns0:loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:1:1&#9;# Compact version of the test_core_postproc protocol">
  <inputs loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:3:1&#9;inputs {">
    <ns0:apply xmlns:ns0="http://www.w3.org/1998/Math/MathML" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:4:1&#9;    example_input = 0">
      <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/statementList" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:4:1&#9;    example_input = 0"/>
      <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:4:5&#9;    example_input = 0">
        <ns0:eq/>
        <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:4:5&#9;    example_input = 0">example_input</ns0:ci>
        <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:4:21&#9;    example_input = 0">0</ns0:cn>
      </ns0:apply>
    </ns0:apply>
  </inputs>
  <import source="../../../src/proto/library/BasicLibrary.xml" mergeDefinitions="true" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:7:1&#9;import &quot;../../../src/proto/library/BasicLibrary.xml&quot;"/>
  <post-processing loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:9:1&#9;post-processing {">
    <ns0:apply xmlns:ns0="http://www.w3.org/1998/Math/MathML" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:9:1&#9;post-processing {">
      <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/statementList" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:9:1&#9;post-processing {"/>
      <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:10:5&#9;    def sum(a, dim=default) {">
        <ns0:eq/>
        <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:10:9&#9;    def sum(a, dim=default) {">sum</ns0:ci>
        <ns0:lambda loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:10:5&#9;    def sum(a, dim=default) {">
          <ns0:bvar>
            <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:10:13&#9;    def sum(a, dim=default) {">a</ns0:ci>
          </ns0:bvar>
          <ns0:semantics>
            <ns0:bvar>
              <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:10:16&#9;    def sum(a, dim=default) {">dim</ns0:ci>
            </ns0:bvar>
            <ns0:annotation-xml>
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/defaultParameter" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:10:20&#9;    def sum(a, dim=default) {"/>
            </ns0:annotation-xml>
          </ns0:semantics>
          <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:11:9&#9;        return fold(@2:+, a, 0, dim)">
            <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/statementList" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:11:9&#9;        return fold(@2:+, a, 0, dim)"/>
            <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:11:9&#9;        return fold(@2:+, a, 0, dim)">
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/return" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:11:9&#9;        return fold(@2:+, a, 0, dim)"/>
              <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:11:16&#9;        return fold(@2:+, a, 0, dim)">
                <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/fold" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:11:16&#9;        return fold(@2:+, a, 0, dim)"/>
                <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/wrap/2" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:11:21&#9;        return fold(@2:+, a, 0, dim)">plus</ns0:csymbol>
                <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:11:27&#9;        return fold(@2:+, a, 0, dim)">a</ns0:ci>
                <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:11:30&#9;        return fold(@2:+, a, 0, dim)">0</ns0:cn>
                <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:11:33&#9;        return fold(@2:+, a, 0, dim)">dim</ns0:ci>
              </ns0:apply>
            </ns0:apply>
          </ns0:apply>
        </ns0:lambda>
      </ns0:apply>
      <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:13:5&#9;    max = lambda a, dim: fold(@2:MathML:max, a, default, dim)">
        <ns0:eq/>
        <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:13:5&#9;    max = lambda a, dim: fold(@2:MathML:max, a, default, dim)">max</ns0:ci>
        <ns0:lambda loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:13:11&#9;    max = lambda a, dim: fold(@2:MathML:max, a, default, dim)">
          <ns0:bvar>
            <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:13:18&#9;    max = lambda a, dim: fold(@2:MathML:max, a, default, dim)">a</ns0:ci>
          </ns0:bvar>
          <ns0:bvar>
            <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:13:21&#9;    max = lambda a, dim: fold(@2:MathML:max, a, default, dim)">dim</ns0:ci>
          </ns0:bvar>
          <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:13:26&#9;    max = lambda a, dim: fold(@2:MathML:max, a, default, dim)">
            <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/fold" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:13:26&#9;    max = lambda a, dim: fold(@2:MathML:max, a, default, dim)"/>
            <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/wrap/2" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:13:31&#9;    max = lambda a, dim: fold(@2:MathML:max, a, default, dim)">max</ns0:csymbol>
            <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:13:46&#9;    max = lambda a, dim: fold(@2:MathML:max, a, default, dim)">a</ns0:ci>
            <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/defaultParameter" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:13:49&#9;    max = lambda a, dim: fold(@2:MathML:max, a, default, dim)"/>
            <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:13:58&#9;    max = lambda a, dim: fold(@2:MathML:max, a, default, dim)">dim</ns0:ci>
          </ns0:apply>
        </ns0:lambda>
      </ns0:apply>
      <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:15:5&#9;    input = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ]">
        <ns0:eq/>
        <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:15:5&#9;    input = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ]">input</ns0:ci>
        <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:15:13&#9;    input = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ]">
          <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
          <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:15:15&#9;    input = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ]">1</ns0:cn>
          <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:15:18&#9;    input = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ]">2</ns0:cn>
          <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:15:21&#9;    input = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ]">3</ns0:cn>
          <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:15:24&#9;    input = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ]">4</ns0:cn>
          <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:15:27&#9;    input = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ]">5</ns0:cn>
          <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:15:30&#9;    input = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ]">6</ns0:cn>
          <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:15:33&#9;    input = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ]">7</ns0:cn>
          <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:15:36&#9;    input = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ]">8</ns0:cn>
          <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:15:39&#9;    input = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ]">9</ns0:cn>
          <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:15:42&#9;    input = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ]">10</ns0:cn>
        </ns0:apply>
      </ns0:apply>
      <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:16:5&#9;    input_sum = sum(input)">
        <ns0:eq/>
        <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:16:5&#9;    input_sum = sum(input)">input_sum</ns0:ci>
        <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:16:17&#9;    input_sum = sum(input)">
          <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:16:17&#9;    input_sum = sum(input)">sum</ns0:ci>
          <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:16:21&#9;    input_sum = sum(input)">input</ns0:ci>
        </ns0:apply>
      </ns0:apply>
      <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:17:5&#9;    input2d = [ [1,3,5], [6,4,2] ]">
        <ns0:eq/>
        <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:17:5&#9;    input2d = [ [1,3,5], [6,4,2] ]">input2d</ns0:ci>
        <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:17:15&#9;    input2d = [ [1,3,5], [6,4,2] ]">
          <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
          <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:17:17&#9;    input2d = [ [1,3,5], [6,4,2] ]">
            <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
            <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:17:18&#9;    input2d = [ [1,3,5], [6,4,2] ]">1</ns0:cn>
            <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:17:20&#9;    input2d = [ [1,3,5], [6,4,2] ]">3</ns0:cn>
            <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:17:22&#9;    input2d = [ [1,3,5], [6,4,2] ]">5</ns0:cn>
          </ns0:apply>
          <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:17:26&#9;    input2d = [ [1,3,5], [6,4,2] ]">
            <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
            <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:17:27&#9;    input2d = [ [1,3,5], [6,4,2] ]">6</ns0:cn>
            <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:17:29&#9;    input2d = [ [1,3,5], [6,4,2] ]">4</ns0:cn>
            <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:17:31&#9;    input2d = [ [1,3,5], [6,4,2] ]">2</ns0:cn>
          </ns0:apply>
        </ns0:apply>
      </ns0:apply>
      <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:18:5&#9;    input2d_max = max(input2d, 0)">
        <ns0:eq/>
        <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:18:5&#9;    input2d_max = max(input2d, 0)">input2d_max</ns0:ci>
        <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:18:19&#9;    input2d_max = max(input2d, 0)">
          <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:18:19&#9;    input2d_max = max(input2d, 0)">max</ns0:ci>
          <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:18:23&#9;    input2d_max = max(input2d, 0)">input2d</ns0:ci>
          <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:18:32&#9;    input2d_max = max(input2d, 0)">0</ns0:cn>
        </ns0:apply>
      </ns0:apply>
      <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:19:5&#9;    input2d_slice = input2d[1$1:2] # [*$:] added implicitly">
        <ns0:eq/>
        <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:19:5&#9;    input2d_slice = input2d[1$1:2] # [*$:] added implicitly">input2d_slice</ns0:ci>
        <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:19:21&#9;    input2d_slice = input2d[1$1:2] # [*$:] added implicitly">
          <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/view" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:19:21&#9;    input2d_slice = input2d[1$1:2] # [*$:] added implicitly"/>
          <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:19:21&#9;    input2d_slice = input2d[1$1:2] # [*$:] added implicitly">input2d</ns0:ci>
          <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:19:21&#9;    input2d_slice = input2d[1$1:2] # [*$:] added implicitly">
            <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
            <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:19:29&#9;    input2d_slice = input2d[1$1:2] # [*$:] added implicitly">1</ns0:cn>
            <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:19:31&#9;    input2d_slice = input2d[1$1:2] # [*$:] added implicitly">1</ns0:cn>
            <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:19:21&#9;    input2d_slice = input2d[1$1:2] # [*$:] added implicitly">1</ns0:cn>
            <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:19:33&#9;    input2d_slice = input2d[1$1:2] # [*$:] added implicitly">2</ns0:cn>
          </ns0:apply>
          <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:19:21&#9;    input2d_slice = input2d[1$1:2] # [*$:] added implicitly">
            <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
            <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:19:21&#9;    input2d_slice = input2d[1$1:2] # [*$:] added implicitly"/>
            <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:19:21&#9;    input2d_slice = input2d[1$1:2] # [*$:] added implicitly"/>
            <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:19:21&#9;    input2d_slice = input2d[1$1:2] # [*$:] added implicitly">1</ns0:cn>
            <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:19:21&#9;    input2d_slice = input2d[1$1:2] # [*$:] added implicitly"/>
          </ns0:apply>
        </ns0:apply>
      </ns0:apply>
      <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:20:5&#9;    input2 = [ 1, 2, 3 ]">
        <ns0:eq/>
        <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:20:5&#9;    input2 = [ 1, 2, 3 ]">input2</ns0:ci>
        <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:20:14&#9;    input2 = [ 1, 2, 3 ]">
          <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
          <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:20:16&#9;    input2 = [ 1, 2, 3 ]">1</ns0:cn>
          <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:20:19&#9;    input2 = [ 1, 2, 3 ]">2</ns0:cn>
          <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:20:22&#9;    input2 = [ 1, 2, 3 ]">3</ns0:cn>
        </ns0:apply>
      </ns0:apply>
      <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:21:5&#9;    map_result = map(@2:+, input2d_max[0][:], input2)">
        <ns0:eq/>
        <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:21:5&#9;    map_result = map(@2:+, input2d_max[0][:], input2)">map_result</ns0:ci>
        <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:21:18&#9;    map_result = map(@2:+, input2d_max[0][:], input2)">
          <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/map" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:21:18&#9;    map_result = map(@2:+, input2d_max[0][:], input2)"/>
          <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/wrap/2" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:21:22&#9;    map_result = map(@2:+, input2d_max[0][:], input2)">plus</ns0:csymbol>
          <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:21:28&#9;    map_result = map(@2:+, input2d_max[0][:], input2)">
            <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/view" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:21:28&#9;    map_result = map(@2:+, input2d_max[0][:], input2)"/>
            <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:21:28&#9;    map_result = map(@2:+, input2d_max[0][:], input2)">input2d_max</ns0:ci>
            <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:21:28&#9;    map_result = map(@2:+, input2d_max[0][:], input2)">
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:21:40&#9;    map_result = map(@2:+, input2d_max[0][:], input2)">0</ns0:cn>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:21:28&#9;    map_result = map(@2:+, input2d_max[0][:], input2)">0</ns0:cn>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:21:40&#9;    map_result = map(@2:+, input2d_max[0][:], input2)">0</ns0:cn>
            </ns0:apply>
            <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:21:28&#9;    map_result = map(@2:+, input2d_max[0][:], input2)">
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:21:28&#9;    map_result = map(@2:+, input2d_max[0][:], input2)"/>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:21:28&#9;    map_result = map(@2:+, input2d_max[0][:], input2)">1</ns0:cn>
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:21:28&#9;    map_result = map(@2:+, input2d_max[0][:], input2)"/>
            </ns0:apply>
            <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:21:28&#9;    map_result = map(@2:+, input2d_max[0][:], input2)">
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:21:28&#9;    map_result = map(@2:+, input2d_max[0][:], input2)"/>
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:21:28&#9;    map_result = map(@2:+, input2d_max[0][:], input2)"/>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:21:28&#9;    map_result = map(@2:+, input2d_max[0][:], input2)">1</ns0:cn>
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:21:28&#9;    map_result = map(@2:+, input2d_max[0][:], input2)"/>
            </ns0:apply>
          </ns0:apply>
          <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:21:47&#9;    map_result = map(@2:+, input2d_max[0][:], input2)">input2</ns0:ci>
        </ns0:apply>
      </ns0:apply>
      <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:23:5&#9;    adder = lambda input: map(@2:+, input, input2)">
        <ns0:eq/>
        <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:23:5&#9;    adder = lambda input: map(@2:+, input, input2)">adder</ns0:ci>
        <ns0:lambda loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:23:13&#9;    adder = lambda input: map(@2:+, input, input2)">
          <ns0:bvar>
            <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:23:20&#9;    adder = lambda input: map(@2:+, input, input2)">input</ns0:ci>
          </ns0:bvar>
          <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:23:27&#9;    adder = lambda input: map(@2:+, input, input2)">
            <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/map" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:23:27&#9;    adder = lambda input: map(@2:+, input, input2)"/>
            <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/wrap/2" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:23:31&#9;    adder = lambda input: map(@2:+, input, input2)">plus</ns0:csymbol>
            <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:23:37&#9;    adder = lambda input: map(@2:+, input, input2)">input</ns0:ci>
            <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:23:44&#9;    adder = lambda input: map(@2:+, input, input2)">input2</ns0:ci>
          </ns0:apply>
        </ns0:lambda>
      </ns0:apply>
      <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:24:5&#9;    double_input2 = adder(input2)">
        <ns0:eq/>
        <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:24:5&#9;    double_input2 = adder(input2)">double_input2</ns0:ci>
        <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:24:21&#9;    double_input2 = adder(input2)">
          <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:24:21&#9;    double_input2 = adder(input2)">adder</ns0:ci>
          <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:24:27&#9;    double_input2 = adder(input2)">input2</ns0:ci>
        </ns0:apply>
      </ns0:apply>
      <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:27:5&#9;    assert (if 1 then 2 else 3) == 2">
        <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:27:5&#9;    assert (if 1 then 2 else 3) == 2"/>
        <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:27:12&#9;    assert (if 1 then 2 else 3) == 2">
          <ns0:eq/>
          <ns0:piecewise loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:27:13&#9;    assert (if 1 then 2 else 3) == 2">
            <ns0:piece>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:27:23&#9;    assert (if 1 then 2 else 3) == 2">2</ns0:cn>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:27:16&#9;    assert (if 1 then 2 else 3) == 2">1</ns0:cn>
            </ns0:piece>
            <ns0:otherwise>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:27:30&#9;    assert (if 1 then 2 else 3) == 2">3</ns0:cn>
            </ns0:otherwise>
          </ns0:piecewise>
          <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:27:36&#9;    assert (if 1 then 2 else 3) == 2">2</ns0:cn>
        </ns0:apply>
      </ns0:apply>
      <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:28:5&#9;    assert (if 0 then 2 else 3) == 3">
        <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:28:5&#9;    assert (if 0 then 2 else 3) == 3"/>
        <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:28:12&#9;    assert (if 0 then 2 else 3) == 3">
          <ns0:eq/>
          <ns0:piecewise loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:28:13&#9;    assert (if 0 then 2 else 3) == 3">
            <ns0:piece>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:28:23&#9;    assert (if 0 then 2 else 3) == 3">2</ns0:cn>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:28:16&#9;    assert (if 0 then 2 else 3) == 3">0</ns0:cn>
            </ns0:piece>
            <ns0:otherwise>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:28:30&#9;    assert (if 0 then 2 else 3) == 3">3</ns0:cn>
            </ns0:otherwise>
          </ns0:piecewise>
          <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:28:36&#9;    assert (if 0 then 2 else 3) == 3">3</ns0:cn>
        </ns0:apply>
      </ns0:apply>
      <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:32:5&#9;    counting1d = [ i for 0$i in 0:10 ]">
        <ns0:eq/>
        <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:32:5&#9;    counting1d = [ i for 0$i in 0:10 ]">counting1d</ns0:ci>
        <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:32:18&#9;    counting1d = [ i for 0$i in 0:10 ]">
          <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
          <ns0:domainofapplication>
            <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:32:22&#9;    counting1d = [ i for 0$i in 0:10 ]">
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:32:26&#9;    counting1d = [ i for 0$i in 0:10 ]">0</ns0:cn>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:32:33&#9;    counting1d = [ i for 0$i in 0:10 ]">0</ns0:cn>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:32:22&#9;    counting1d = [ i for 0$i in 0:10 ]">1</ns0:cn>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:32:35&#9;    counting1d = [ i for 0$i in 0:10 ]">10</ns0:cn>
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/string" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:32:22&#9;    counting1d = [ i for 0$i in 0:10 ]">i</ns0:csymbol>
            </ns0:apply>
          </ns0:domainofapplication>
          <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:32:20&#9;    counting1d = [ i for 0$i in 0:10 ]">i</ns0:ci>
        </ns0:apply>
      </ns0:apply>
      <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:33:5&#9;    assert counting1d.NUM_DIMS == 1">
        <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:33:5&#9;    assert counting1d.NUM_DIMS == 1"/>
        <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:33:12&#9;    assert counting1d.NUM_DIMS == 1">
          <ns0:eq/>
          <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:33:12&#9;    assert counting1d.NUM_DIMS == 1">
            <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/accessor" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:33:12&#9;    assert counting1d.NUM_DIMS == 1">NUM_DIMS</ns0:csymbol>
            <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:33:12&#9;    assert counting1d.NUM_DIMS == 1">counting1d</ns0:ci>
          </ns0:apply>
          <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:33:35&#9;    assert counting1d.NUM_DIMS == 1">1</ns0:cn>
        </ns0:apply>
      </ns0:apply>
      <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:34:5&#9;    assert counting1d.SHAPE[0] == 10">
        <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:34:5&#9;    assert counting1d.SHAPE[0] == 10"/>
        <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:34:12&#9;    assert counting1d.SHAPE[0] == 10">
          <ns0:eq/>
          <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:34:12&#9;    assert counting1d.SHAPE[0] == 10">
            <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/view" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:34:12&#9;    assert counting1d.SHAPE[0] == 10"/>
            <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:34:12&#9;    assert counting1d.SHAPE[0] == 10">
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/accessor" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:34:12&#9;    assert counting1d.SHAPE[0] == 10">SHAPE</ns0:csymbol>
              <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:34:12&#9;    assert counting1d.SHAPE[0] == 10">counting1d</ns0:ci>
            </ns0:apply>
            <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:34:12&#9;    assert counting1d.SHAPE[0] == 10">
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:34:29&#9;    assert counting1d.SHAPE[0] == 10">0</ns0:cn>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:34:12&#9;    assert counting1d.SHAPE[0] == 10">0</ns0:cn>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:34:29&#9;    assert counting1d.SHAPE[0] == 10">0</ns0:cn>
            </ns0:apply>
            <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:34:12&#9;    assert counting1d.SHAPE[0] == 10">
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:34:12&#9;    assert counting1d.SHAPE[0] == 10"/>
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:34:12&#9;    assert counting1d.SHAPE[0] == 10"/>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:34:12&#9;    assert counting1d.SHAPE[0] == 10">1</ns0:cn>
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:34:12&#9;    assert counting1d.SHAPE[0] == 10"/>
            </ns0:apply>
          </ns0:apply>
          <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:34:35&#9;    assert counting1d.SHAPE[0] == 10">10</ns0:cn>
        </ns0:apply>
      </ns0:apply>
      <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:36:5&#9;    counting2d = [ i*3 + j for 0$i in 1:3 for 1$j in 0:3 ]">
        <ns0:eq/>
        <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:36:5&#9;    counting2d = [ i*3 + j for 0$i in 1:3 for 1$j in 0:3 ]">counting2d</ns0:ci>
        <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:36:18&#9;    counting2d = [ i*3 + j for 0$i in 1:3 for 1$j in 0:3 ]">
          <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
          <ns0:domainofapplication>
            <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:36:28&#9;    counting2d = [ i*3 + j for 0$i in 1:3 for 1$j in 0:3 ]">
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:36:32&#9;    counting2d = [ i*3 + j for 0$i in 1:3 for 1$j in 0:3 ]">0</ns0:cn>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:36:39&#9;    counting2d = [ i*3 + j for 0$i in 1:3 for 1$j in 0:3 ]">1</ns0:cn>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:36:28&#9;    counting2d = [ i*3 + j for 0$i in 1:3 for 1$j in 0:3 ]">1</ns0:cn>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:36:41&#9;    counting2d = [ i*3 + j for 0$i in 1:3 for 1$j in 0:3 ]">3</ns0:cn>
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/string" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:36:28&#9;    counting2d = [ i*3 + j for 0$i in 1:3 for 1$j in 0:3 ]">i</ns0:csymbol>
            </ns0:apply>
            <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:36:43&#9;    counting2d = [ i*3 + j for 0$i in 1:3 for 1$j in 0:3 ]">
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:36:47&#9;    counting2d = [ i*3 + j for 0$i in 1:3 for 1$j in 0:3 ]">1</ns0:cn>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:36:54&#9;    counting2d = [ i*3 + j for 0$i in 1:3 for 1$j in 0:3 ]">0</ns0:cn>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:36:43&#9;    counting2d = [ i*3 + j for 0$i in 1:3 for 1$j in 0:3 ]">1</ns0:cn>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:36:56&#9;    counting2d = [ i*3 + j for 0$i in 1:3 for 1$j in 0:3 ]">3</ns0:cn>
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/string" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:36:43&#9;    counting2d = [ i*3 + j for 0$i in 1:3 for 1$j in 0:3 ]">j</ns0:csymbol>
            </ns0:apply>
          </ns0:domainofapplication>
          <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:36:20&#9;    counting2d = [ i*3 + j for 0$i in 1:3 for 1$j in 0:3 ]">
            <ns0:plus/>
            <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:36:20&#9;    counting2d = [ i*3 + j for 0$i in 1:3 for 1$j in 0:3 ]">
              <ns0:times/>
              <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:36:20&#9;    counting2d = [ i*3 + j for 0$i in 1:3 for 1$j in 0:3 ]">i</ns0:ci>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:36:22&#9;    counting2d = [ i*3 + j for 0$i in 1:3 for 1$j in 0:3 ]">3</ns0:cn>
            </ns0:apply>
            <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:36:26&#9;    counting2d = [ i*3 + j for 0$i in 1:3 for 1$j in 0:3 ]">j</ns0:ci>
          </ns0:apply>
        </ns0:apply>
      </ns0:apply>
      <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:37:5&#9;    assert counting2d.NUM_DIMS == 2">
        <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:37:5&#9;    assert counting2d.NUM_DIMS == 2"/>
        <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:37:12&#9;    assert counting2d.NUM_DIMS == 2">
          <ns0:eq/>
          <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:37:12&#9;    assert counting2d.NUM_DIMS == 2">
            <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/accessor" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:37:12&#9;    assert counting2d.NUM_DIMS == 2">NUM_DIMS</ns0:csymbol>
            <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:37:12&#9;    assert counting2d.NUM_DIMS == 2">counting2d</ns0:ci>
          </ns0:apply>
          <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:37:35&#9;    assert counting2d.NUM_DIMS == 2">2</ns0:cn>
        </ns0:apply>
      </ns0:apply>
      <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:38:5&#9;    assert counting2d.NUM_ELEMENTS == 6">
        <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:38:5&#9;    assert counting2d.NUM_ELEMENTS == 6"/>
        <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:38:12&#9;    assert counting2d.NUM_ELEMENTS == 6">
          <ns0:eq/>
          <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:38:12&#9;    assert counting2d.NUM_ELEMENTS == 6">
            <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/accessor" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:38:12&#9;    assert counting2d.NUM_ELEMENTS == 6">NUM_ELEMENTS</ns0:csymbol>
            <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:38:12&#9;    assert counting2d.NUM_ELEMENTS == 6">counting2d</ns0:ci>
          </ns0:apply>
          <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:38:39&#9;    assert counting2d.NUM_ELEMENTS == 6">6</ns0:cn>
        </ns0:apply>
      </ns0:apply>
      <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:39:5&#9;    assert counting2d.SHAPE[0] == 2">
        <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:39:5&#9;    assert counting2d.SHAPE[0] == 2"/>
        <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:39:12&#9;    assert counting2d.SHAPE[0] == 2">
          <ns0:eq/>
          <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:39:12&#9;    assert counting2d.SHAPE[0] == 2">
            <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/view" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:39:12&#9;    assert counting2d.SHAPE[0] == 2"/>
            <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:39:12&#9;    assert counting2d.SHAPE[0] == 2">
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/accessor" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:39:12&#9;    assert counting2d.SHAPE[0] == 2">SHAPE</ns0:csymbol>
              <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:39:12&#9;    assert counting2d.SHAPE[0] == 2">counting2d</ns0:ci>
            </ns0:apply>
            <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:39:12&#9;    assert counting2d.SHAPE[0] == 2">
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:39:29&#9;    assert counting2d.SHAPE[0] == 2">0</ns0:cn>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:39:12&#9;    assert counting2d.SHAPE[0] == 2">0</ns0:cn>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:39:29&#9;    assert counting2d.SHAPE[0] == 2">0</ns0:cn>
            </ns0:apply>
            <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:39:12&#9;    assert counting2d.SHAPE[0] == 2">
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:39:12&#9;    assert counting2d.SHAPE[0] == 2"/>
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:39:12&#9;    assert counting2d.SHAPE[0] == 2"/>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:39:12&#9;    assert counting2d.SHAPE[0] == 2">1</ns0:cn>
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:39:12&#9;    assert counting2d.SHAPE[0] == 2"/>
            </ns0:apply>
          </ns0:apply>
          <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:39:35&#9;    assert counting2d.SHAPE[0] == 2">2</ns0:cn>
        </ns0:apply>
      </ns0:apply>
      <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:41:5&#9;    blocks = [ [[-10+j,j],[10+j,20+j]] for 1$j in 0:2 ]">
        <ns0:eq/>
        <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:41:5&#9;    blocks = [ [[-10+j,j],[10+j,20+j]] for 1$j in 0:2 ]">blocks</ns0:ci>
        <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:41:14&#9;    blocks = [ [[-10+j,j],[10+j,20+j]] for 1$j in 0:2 ]">
          <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
          <ns0:domainofapplication>
            <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:41:40&#9;    blocks = [ [[-10+j,j],[10+j,20+j]] for 1$j in 0:2 ]">
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:41:44&#9;    blocks = [ [[-10+j,j],[10+j,20+j]] for 1$j in 0:2 ]">1</ns0:cn>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:41:51&#9;    blocks = [ [[-10+j,j],[10+j,20+j]] for 1$j in 0:2 ]">0</ns0:cn>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:41:40&#9;    blocks = [ [[-10+j,j],[10+j,20+j]] for 1$j in 0:2 ]">1</ns0:cn>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:41:53&#9;    blocks = [ [[-10+j,j],[10+j,20+j]] for 1$j in 0:2 ]">2</ns0:cn>
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/string" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:41:40&#9;    blocks = [ [[-10+j,j],[10+j,20+j]] for 1$j in 0:2 ]">j</ns0:csymbol>
            </ns0:apply>
          </ns0:domainofapplication>
          <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:41:16&#9;    blocks = [ [[-10+j,j],[10+j,20+j]] for 1$j in 0:2 ]">
            <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
            <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:41:17&#9;    blocks = [ [[-10+j,j],[10+j,20+j]] for 1$j in 0:2 ]">
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
              <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:41:18&#9;    blocks = [ [[-10+j,j],[10+j,20+j]] for 1$j in 0:2 ]">
                <ns0:plus/>
                <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:41:18&#9;    blocks = [ [[-10+j,j],[10+j,20+j]] for 1$j in 0:2 ]">
                  <ns0:minus/>
                  <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:41:19&#9;    blocks = [ [[-10+j,j],[10+j,20+j]] for 1$j in 0:2 ]">10</ns0:cn>
                </ns0:apply>
                <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:41:22&#9;    blocks = [ [[-10+j,j],[10+j,20+j]] for 1$j in 0:2 ]">j</ns0:ci>
              </ns0:apply>
              <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:41:24&#9;    blocks = [ [[-10+j,j],[10+j,20+j]] for 1$j in 0:2 ]">j</ns0:ci>
            </ns0:apply>
            <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:41:27&#9;    blocks = [ [[-10+j,j],[10+j,20+j]] for 1$j in 0:2 ]">
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
              <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:41:28&#9;    blocks = [ [[-10+j,j],[10+j,20+j]] for 1$j in 0:2 ]">
                <ns0:plus/>
                <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:41:28&#9;    blocks = [ [[-10+j,j],[10+j,20+j]] for 1$j in 0:2 ]">10</ns0:cn>
                <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:41:31&#9;    blocks = [ [[-10+j,j],[10+j,20+j]] for 1$j in 0:2 ]">j</ns0:ci>
              </ns0:apply>
              <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:41:33&#9;    blocks = [ [[-10+j,j],[10+j,20+j]] for 1$j in 0:2 ]">
                <ns0:plus/>
                <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:41:33&#9;    blocks = [ [[-10+j,j],[10+j,20+j]] for 1$j in 0:2 ]">20</ns0:cn>
                <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:41:36&#9;    blocks = [ [[-10+j,j],[10+j,20+j]] for 1$j in 0:2 ]">j</ns0:ci>
              </ns0:apply>
            </ns0:apply>
          </ns0:apply>
        </ns0:apply>
      </ns0:apply>
      <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:42:5&#9;    assert blocks.NUM_DIMS == 3">
        <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:42:5&#9;    assert blocks.NUM_DIMS == 3"/>
        <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:42:12&#9;    assert blocks.NUM_DIMS == 3">
          <ns0:eq/>
          <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:42:12&#9;    assert blocks.NUM_DIMS == 3">
            <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/accessor" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:42:12&#9;    assert blocks.NUM_DIMS == 3">NUM_DIMS</ns0:csymbol>
            <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:42:12&#9;    assert blocks.NUM_DIMS == 3">blocks</ns0:ci>
          </ns0:apply>
          <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:42:31&#9;    assert blocks.NUM_DIMS == 3">3</ns0:cn>
        </ns0:apply>
      </ns0:apply>
      <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:43:5&#9;    assert blocks.NUM_ELEMENTS == 8">
        <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:43:5&#9;    assert blocks.NUM_ELEMENTS == 8"/>
        <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:43:12&#9;    assert blocks.NUM_ELEMENTS == 8">
          <ns0:eq/>
          <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:43:12&#9;    assert blocks.NUM_ELEMENTS == 8">
            <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/accessor" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:43:12&#9;    assert blocks.NUM_ELEMENTS == 8">NUM_ELEMENTS</ns0:csymbol>
            <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:43:12&#9;    assert blocks.NUM_ELEMENTS == 8">blocks</ns0:ci>
          </ns0:apply>
          <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:43:35&#9;    assert blocks.NUM_ELEMENTS == 8">8</ns0:cn>
        </ns0:apply>
      </ns0:apply>
      <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:44:5&#9;    assert blocks.SHAPE[0] == 2">
        <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:44:5&#9;    assert blocks.SHAPE[0] == 2"/>
        <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:44:12&#9;    assert blocks.SHAPE[0] == 2">
          <ns0:eq/>
          <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:44:12&#9;    assert blocks.SHAPE[0] == 2">
            <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/view" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:44:12&#9;    assert blocks.SHAPE[0] == 2"/>
            <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:44:12&#9;    assert blocks.SHAPE[0] == 2">
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/accessor" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:44:12&#9;    assert blocks.SHAPE[0] == 2">SHAPE</ns0:csymbol>
              <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:44:12&#9;    assert blocks.SHAPE[0] == 2">blocks</ns0:ci>
            </ns0:apply>
            <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:44:12&#9;    assert blocks.SHAPE[0] == 2">
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:44:25&#9;    assert blocks.SHAPE[0] == 2">0</ns0:cn>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:44:12&#9;    assert blocks.SHAPE[0] == 2">0</ns0:cn>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:44:25&#9;    assert blocks.SHAPE[0] == 2">0</ns0:cn>
            </ns0:apply>
            <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:44:12&#9;    assert blocks.SHAPE[0] == 2">
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:44:12&#9;    assert blocks.SHAPE[0] == 2"/>
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:44:12&#9;    assert blocks.SHAPE[0] == 2"/>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:44:12&#9;    assert blocks.SHAPE[0] == 2">1</ns0:cn>
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:44:12&#9;    assert blocks.SHAPE[0] == 2"/>
            </ns0:apply>
          </ns0:apply>
          <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:44:31&#9;    assert blocks.SHAPE[0] == 2">2</ns0:cn>
        </ns0:apply>
      </ns0:apply>
      <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:45:5&#9;    assert blocks.SHAPE[1] == 2">
        <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:45:5&#9;    assert blocks.SHAPE[1] == 2"/>
        <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:45:12&#9;    assert blocks.SHAPE[1] == 2">
          <ns0:eq/>
          <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:45:12&#9;    assert blocks.SHAPE[1] == 2">
            <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/view" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:45:12&#9;    assert blocks.SHAPE[1] == 2"/>
            <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:45:12&#9;    assert blocks.SHAPE[1] == 2">
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/accessor" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:45:12&#9;    assert blocks.SHAPE[1] == 2">SHAPE</ns0:csymbol>
              <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:45:12&#9;    assert blocks.SHAPE[1] == 2">blocks</ns0:ci>
            </ns0:apply>
            <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:45:12&#9;    assert blocks.SHAPE[1] == 2">
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:45:25&#9;    assert blocks.SHAPE[1] == 2">1</ns0:cn>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:45:12&#9;    assert blocks.SHAPE[1] == 2">0</ns0:cn>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:45:25&#9;    assert blocks.SHAPE[1] == 2">1</ns0:cn>
            </ns0:apply>
            <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:45:12&#9;    assert blocks.SHAPE[1] == 2">
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:45:12&#9;    assert blocks.SHAPE[1] == 2"/>
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:45:12&#9;    assert blocks.SHAPE[1] == 2"/>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:45:12&#9;    assert blocks.SHAPE[1] == 2">1</ns0:cn>
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:45:12&#9;    assert blocks.SHAPE[1] == 2"/>
            </ns0:apply>
          </ns0:apply>
          <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:45:31&#9;    assert blocks.SHAPE[1] == 2">2</ns0:cn>
        </ns0:apply>
      </ns0:apply>
      <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:48:5&#9;    assert ArrayEq(input[:-1:], [ 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 ])">
        <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:48:5&#9;    assert ArrayEq(input[:-1:], [ 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 ])"/>
        <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:48:12&#9;    assert ArrayEq(input[:-1:], [ 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 ])">
          <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:48:12&#9;    assert ArrayEq(input[:-1:], [ 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 ])">ArrayEq</ns0:ci>
          <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:48:20&#9;    assert ArrayEq(input[:-1:], [ 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 ])">
            <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/view" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:48:20&#9;    assert ArrayEq(input[:-1:], [ 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 ])"/>
            <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:48:20&#9;    assert ArrayEq(input[:-1:], [ 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 ])">input</ns0:ci>
            <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:48:20&#9;    assert ArrayEq(input[:-1:], [ 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 ])">
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:48:20&#9;    assert ArrayEq(input[:-1:], [ 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 ])"/>
              <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:48:27&#9;    assert ArrayEq(input[:-1:], [ 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 ])">
                <ns0:minus/>
                <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:48:28&#9;    assert ArrayEq(input[:-1:], [ 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 ])">1</ns0:cn>
              </ns0:apply>
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:48:20&#9;    assert ArrayEq(input[:-1:], [ 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 ])"/>
            </ns0:apply>
            <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:48:20&#9;    assert ArrayEq(input[:-1:], [ 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 ])">
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:48:20&#9;    assert ArrayEq(input[:-1:], [ 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 ])"/>
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:48:20&#9;    assert ArrayEq(input[:-1:], [ 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 ])"/>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:48:20&#9;    assert ArrayEq(input[:-1:], [ 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 ])">1</ns0:cn>
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:48:20&#9;    assert ArrayEq(input[:-1:], [ 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 ])"/>
            </ns0:apply>
          </ns0:apply>
          <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:48:33&#9;    assert ArrayEq(input[:-1:], [ 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 ])">
            <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
            <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:48:35&#9;    assert ArrayEq(input[:-1:], [ 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 ])">10</ns0:cn>
            <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:48:39&#9;    assert ArrayEq(input[:-1:], [ 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 ])">9</ns0:cn>
            <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:48:42&#9;    assert ArrayEq(input[:-1:], [ 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 ])">8</ns0:cn>
            <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:48:45&#9;    assert ArrayEq(input[:-1:], [ 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 ])">7</ns0:cn>
            <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:48:48&#9;    assert ArrayEq(input[:-1:], [ 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 ])">6</ns0:cn>
            <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:48:51&#9;    assert ArrayEq(input[:-1:], [ 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 ])">5</ns0:cn>
            <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:48:54&#9;    assert ArrayEq(input[:-1:], [ 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 ])">4</ns0:cn>
            <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:48:57&#9;    assert ArrayEq(input[:-1:], [ 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 ])">3</ns0:cn>
            <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:48:60&#9;    assert ArrayEq(input[:-1:], [ 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 ])">2</ns0:cn>
            <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:48:63&#9;    assert ArrayEq(input[:-1:], [ 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 ])">1</ns0:cn>
          </ns0:apply>
        </ns0:apply>
      </ns0:apply>
      <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:51:5&#9;    swap = lambda a, b { return b, a }">
        <ns0:eq/>
        <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:51:5&#9;    swap = lambda a, b { return b, a }">swap</ns0:ci>
        <ns0:lambda loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:51:12&#9;    swap = lambda a, b { return b, a }">
          <ns0:bvar>
            <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:51:19&#9;    swap = lambda a, b { return b, a }">a</ns0:ci>
          </ns0:bvar>
          <ns0:bvar>
            <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:51:22&#9;    swap = lambda a, b { return b, a }">b</ns0:ci>
          </ns0:bvar>
          <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:51:26&#9;    swap = lambda a, b { return b, a }">
            <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/statementList" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:51:26&#9;    swap = lambda a, b { return b, a }"/>
            <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:51:26&#9;    swap = lambda a, b { return b, a }">
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/return" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:51:26&#9;    swap = lambda a, b { return b, a }"/>
              <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:51:33&#9;    swap = lambda a, b { return b, a }">b</ns0:ci>
              <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:51:36&#9;    swap = lambda a, b { return b, a }">a</ns0:ci>
            </ns0:apply>
          </ns0:apply>
        </ns0:lambda>
      </ns0:apply>
      <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:52:5&#9;    one, two = swap(2, 1)">
        <ns0:eq/>
        <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:52:5&#9;    one, two = swap(2, 1)">
          <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
          <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:52:5&#9;    one, two = swap(2, 1)">one</ns0:ci>
          <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:52:10&#9;    one, two = swap(2, 1)">two</ns0:ci>
        </ns0:apply>
        <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:52:16&#9;    one, two = swap(2, 1)">
          <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:52:16&#9;    one, two = swap(2, 1)">swap</ns0:ci>
          <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:52:21&#9;    one, two = swap(2, 1)">2</ns0:cn>
          <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:52:24&#9;    one, two = swap(2, 1)">1</ns0:cn>
        </ns0:apply>
      </ns0:apply>
      <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:53:5&#9;    assert swap.IS_FUNCTION">
        <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:53:5&#9;    assert swap.IS_FUNCTION"/>
        <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:53:12&#9;    assert swap.IS_FUNCTION">
          <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/accessor" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:53:12&#9;    assert swap.IS_FUNCTION">IS_FUNCTION</ns0:csymbol>
          <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:53:12&#9;    assert swap.IS_FUNCTION">swap</ns0:ci>
        </ns0:apply>
      </ns0:apply>
      <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:54:5&#9;    assert one == 1">
        <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:54:5&#9;    assert one == 1"/>
        <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:54:12&#9;    assert one == 1">
          <ns0:eq/>
          <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:54:12&#9;    assert one == 1">one</ns0:ci>
          <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:54:19&#9;    assert one == 1">1</ns0:cn>
        </ns0:apply>
      </ns0:apply>
      <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:55:5&#9;    assert two == 2">
        <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:55:5&#9;    assert two == 2"/>
        <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:55:12&#9;    assert two == 2">
          <ns0:eq/>
          <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:55:12&#9;    assert two == 2">two</ns0:ci>
          <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:55:19&#9;    assert two == 2">2</ns0:cn>
        </ns0:apply>
      </ns0:apply>
      <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:58:5&#9;    nested_scopes = lambda {">
        <ns0:eq/>
        <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:58:5&#9;    nested_scopes = lambda {">nested_scopes</ns0:ci>
        <ns0:lambda loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:58:21&#9;    nested_scopes = lambda {">
          <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:60:9&#9;        nested_fn = lambda input: input + outer_var">
            <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/statementList" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:60:9&#9;        nested_fn = lambda input: input + outer_var"/>
            <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:60:9&#9;        nested_fn = lambda input: input + outer_var">
              <ns0:eq/>
              <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:60:9&#9;        nested_fn = lambda input: input + outer_var">nested_fn</ns0:ci>
              <ns0:lambda loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:60:21&#9;        nested_fn = lambda input: input + outer_var">
                <ns0:bvar>
                  <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:60:28&#9;        nested_fn = lambda input: input + outer_var">input</ns0:ci>
                </ns0:bvar>
                <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:60:35&#9;        nested_fn = lambda input: input + outer_var">
                  <ns0:plus/>
                  <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:60:35&#9;        nested_fn = lambda input: input + outer_var">input</ns0:ci>
                  <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:60:43&#9;        nested_fn = lambda input: input + outer_var">outer_var</ns0:ci>
                </ns0:apply>
              </ns0:lambda>
            </ns0:apply>
            <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:62:9&#9;        outer_var = 1">
              <ns0:eq/>
              <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:62:9&#9;        outer_var = 1">outer_var</ns0:ci>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:62:21&#9;        outer_var = 1">1</ns0:cn>
            </ns0:apply>
            <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:64:9&#9;        assert nested_fn(1) == 2">
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:64:9&#9;        assert nested_fn(1) == 2"/>
              <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:64:16&#9;        assert nested_fn(1) == 2">
                <ns0:eq/>
                <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:64:16&#9;        assert nested_fn(1) == 2">
                  <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:64:16&#9;        assert nested_fn(1) == 2">nested_fn</ns0:ci>
                  <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:64:26&#9;        assert nested_fn(1) == 2">1</ns0:cn>
                </ns0:apply>
                <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:64:32&#9;        assert nested_fn(1) == 2">2</ns0:cn>
              </ns0:apply>
            </ns0:apply>
          </ns0:apply>
        </ns0:lambda>
      </ns0:apply>
      <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:68:5&#9;    assert Count(input, lambda elt: elt &lt; 5) == 4">
        <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:68:5&#9;    assert Count(input, lambda elt: elt &lt; 5) == 4"/>
        <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:68:12&#9;    assert Count(input, lambda elt: elt &lt; 5) == 4">
          <ns0:eq/>
          <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:68:12&#9;    assert Count(input, lambda elt: elt &lt; 5) == 4">
            <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:68:12&#9;    assert Count(input, lambda elt: elt &lt; 5) == 4">Count</ns0:ci>
            <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:68:18&#9;    assert Count(input, lambda elt: elt &lt; 5) == 4">input</ns0:ci>
            <ns0:lambda loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:68:25&#9;    assert Count(input, lambda elt: elt &lt; 5) == 4">
              <ns0:bvar>
                <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:68:32&#9;    assert Count(input, lambda elt: elt &lt; 5) == 4">elt</ns0:ci>
              </ns0:bvar>
              <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:68:37&#9;    assert Count(input, lambda elt: elt &lt; 5) == 4">
                <ns0:lt/>
                <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:68:37&#9;    assert Count(input, lambda elt: elt &lt; 5) == 4">elt</ns0:ci>
                <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:68:43&#9;    assert Count(input, lambda elt: elt &lt; 5) == 4">5</ns0:cn>
              </ns0:apply>
            </ns0:lambda>
          </ns0:apply>
          <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:68:49&#9;    assert Count(input, lambda elt: elt &lt; 5) == 4">4</ns0:cn>
        </ns0:apply>
      </ns0:apply>
      <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:71:5&#9;    assert ArrayEq(Filter(input, lambda elt: elt &lt; 5), [1,2,3,4])">
        <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:71:5&#9;    assert ArrayEq(Filter(input, lambda elt: elt &lt; 5), [1,2,3,4])"/>
        <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:71:12&#9;    assert ArrayEq(Filter(input, lambda elt: elt &lt; 5), [1,2,3,4])">
          <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:71:12&#9;    assert ArrayEq(Filter(input, lambda elt: elt &lt; 5), [1,2,3,4])">ArrayEq</ns0:ci>
          <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:71:20&#9;    assert ArrayEq(Filter(input, lambda elt: elt &lt; 5), [1,2,3,4])">
            <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:71:20&#9;    assert ArrayEq(Filter(input, lambda elt: elt &lt; 5), [1,2,3,4])">Filter</ns0:ci>
            <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:71:27&#9;    assert ArrayEq(Filter(input, lambda elt: elt &lt; 5), [1,2,3,4])">input</ns0:ci>
            <ns0:lambda loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:71:34&#9;    assert ArrayEq(Filter(input, lambda elt: elt &lt; 5), [1,2,3,4])">
              <ns0:bvar>
                <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:71:41&#9;    assert ArrayEq(Filter(input, lambda elt: elt &lt; 5), [1,2,3,4])">elt</ns0:ci>
              </ns0:bvar>
              <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:71:46&#9;    assert ArrayEq(Filter(input, lambda elt: elt &lt; 5), [1,2,3,4])">
                <ns0:lt/>
                <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:71:46&#9;    assert ArrayEq(Filter(input, lambda elt: elt &lt; 5), [1,2,3,4])">elt</ns0:ci>
                <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:71:52&#9;    assert ArrayEq(Filter(input, lambda elt: elt &lt; 5), [1,2,3,4])">5</ns0:cn>
              </ns0:apply>
            </ns0:lambda>
          </ns0:apply>
          <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:71:56&#9;    assert ArrayEq(Filter(input, lambda elt: elt &lt; 5), [1,2,3,4])">
            <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
            <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:71:57&#9;    assert ArrayEq(Filter(input, lambda elt: elt &lt; 5), [1,2,3,4])">1</ns0:cn>
            <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:71:59&#9;    assert ArrayEq(Filter(input, lambda elt: elt &lt; 5), [1,2,3,4])">2</ns0:cn>
            <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:71:61&#9;    assert ArrayEq(Filter(input, lambda elt: elt &lt; 5), [1,2,3,4])">3</ns0:cn>
            <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:71:63&#9;    assert ArrayEq(Filter(input, lambda elt: elt &lt; 5), [1,2,3,4])">4</ns0:cn>
          </ns0:apply>
        </ns0:apply>
      </ns0:apply>
      <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:74:5&#9;    assert ArrayEq(Permute(input, [9,8,7,6,5,4,3,2,1,0]), input[:-1:])">
        <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:74:5&#9;    assert ArrayEq(Permute(input, [9,8,7,6,5,4,3,2,1,0]), input[:-1:])"/>
        <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:74:12&#9;    assert ArrayEq(Permute(input, [9,8,7,6,5,4,3,2,1,0]), input[:-1:])">
          <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:74:12&#9;    assert ArrayEq(Permute(input, [9,8,7,6,5,4,3,2,1,0]), input[:-1:])">ArrayEq</ns0:ci>
          <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:74:20&#9;    assert ArrayEq(Permute(input, [9,8,7,6,5,4,3,2,1,0]), input[:-1:])">
            <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:74:20&#9;    assert ArrayEq(Permute(input, [9,8,7,6,5,4,3,2,1,0]), input[:-1:])">Permute</ns0:ci>
            <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:74:28&#9;    assert ArrayEq(Permute(input, [9,8,7,6,5,4,3,2,1,0]), input[:-1:])">input</ns0:ci>
            <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:74:35&#9;    assert ArrayEq(Permute(input, [9,8,7,6,5,4,3,2,1,0]), input[:-1:])">
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:74:36&#9;    assert ArrayEq(Permute(input, [9,8,7,6,5,4,3,2,1,0]), input[:-1:])">9</ns0:cn>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:74:38&#9;    assert ArrayEq(Permute(input, [9,8,7,6,5,4,3,2,1,0]), input[:-1:])">8</ns0:cn>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:74:40&#9;    assert ArrayEq(Permute(input, [9,8,7,6,5,4,3,2,1,0]), input[:-1:])">7</ns0:cn>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:74:42&#9;    assert ArrayEq(Permute(input, [9,8,7,6,5,4,3,2,1,0]), input[:-1:])">6</ns0:cn>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:74:44&#9;    assert ArrayEq(Permute(input, [9,8,7,6,5,4,3,2,1,0]), input[:-1:])">5</ns0:cn>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:74:46&#9;    assert ArrayEq(Permute(input, [9,8,7,6,5,4,3,2,1,0]), input[:-1:])">4</ns0:cn>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:74:48&#9;    assert ArrayEq(Permute(input, [9,8,7,6,5,4,3,2,1,0]), input[:-1:])">3</ns0:cn>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:74:50&#9;    assert ArrayEq(Permute(input, [9,8,7,6,5,4,3,2,1,0]), input[:-1:])">2</ns0:cn>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:74:52&#9;    assert ArrayEq(Permute(input, [9,8,7,6,5,4,3,2,1,0]), input[:-1:])">1</ns0:cn>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:74:54&#9;    assert ArrayEq(Permute(input, [9,8,7,6,5,4,3,2,1,0]), input[:-1:])">0</ns0:cn>
            </ns0:apply>
          </ns0:apply>
          <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:74:59&#9;    assert ArrayEq(Permute(input, [9,8,7,6,5,4,3,2,1,0]), input[:-1:])">
            <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/view" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:74:59&#9;    assert ArrayEq(Permute(input, [9,8,7,6,5,4,3,2,1,0]), input[:-1:])"/>
            <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:74:59&#9;    assert ArrayEq(Permute(input, [9,8,7,6,5,4,3,2,1,0]), input[:-1:])">input</ns0:ci>
            <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:74:59&#9;    assert ArrayEq(Permute(input, [9,8,7,6,5,4,3,2,1,0]), input[:-1:])">
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:74:59&#9;    assert ArrayEq(Permute(input, [9,8,7,6,5,4,3,2,1,0]), input[:-1:])"/>
              <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:74:66&#9;    assert ArrayEq(Permute(input, [9,8,7,6,5,4,3,2,1,0]), input[:-1:])">
                <ns0:minus/>
                <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:74:67&#9;    assert ArrayEq(Permute(input, [9,8,7,6,5,4,3,2,1,0]), input[:-1:])">1</ns0:cn>
              </ns0:apply>
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:74:59&#9;    assert ArrayEq(Permute(input, [9,8,7,6,5,4,3,2,1,0]), input[:-1:])"/>
            </ns0:apply>
            <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:74:59&#9;    assert ArrayEq(Permute(input, [9,8,7,6,5,4,3,2,1,0]), input[:-1:])">
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:74:59&#9;    assert ArrayEq(Permute(input, [9,8,7,6,5,4,3,2,1,0]), input[:-1:])"/>
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:74:59&#9;    assert ArrayEq(Permute(input, [9,8,7,6,5,4,3,2,1,0]), input[:-1:])"/>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:74:59&#9;    assert ArrayEq(Permute(input, [9,8,7,6,5,4,3,2,1,0]), input[:-1:])">1</ns0:cn>
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:74:59&#9;    assert ArrayEq(Permute(input, [9,8,7,6,5,4,3,2,1,0]), input[:-1:])"/>
            </ns0:apply>
          </ns0:apply>
        </ns0:apply>
      </ns0:apply>
      <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:75:5&#9;    assert ArrayEq(Permute(input2d, [1,2,0]), [[3,5,1], [4,2,6]])">
        <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:75:5&#9;    assert ArrayEq(Permute(input2d, [1,2,0]), [[3,5,1], [4,2,6]])"/>
        <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:75:12&#9;    assert ArrayEq(Permute(input2d, [1,2,0]), [[3,5,1], [4,2,6]])">
          <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:75:12&#9;    assert ArrayEq(Permute(input2d, [1,2,0]), [[3,5,1], [4,2,6]])">ArrayEq</ns0:ci>
          <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:75:20&#9;    assert ArrayEq(Permute(input2d, [1,2,0]), [[3,5,1], [4,2,6]])">
            <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:75:20&#9;    assert ArrayEq(Permute(input2d, [1,2,0]), [[3,5,1], [4,2,6]])">Permute</ns0:ci>
            <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:75:28&#9;    assert ArrayEq(Permute(input2d, [1,2,0]), [[3,5,1], [4,2,6]])">input2d</ns0:ci>
            <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:75:37&#9;    assert ArrayEq(Permute(input2d, [1,2,0]), [[3,5,1], [4,2,6]])">
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:75:38&#9;    assert ArrayEq(Permute(input2d, [1,2,0]), [[3,5,1], [4,2,6]])">1</ns0:cn>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:75:40&#9;    assert ArrayEq(Permute(input2d, [1,2,0]), [[3,5,1], [4,2,6]])">2</ns0:cn>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:75:42&#9;    assert ArrayEq(Permute(input2d, [1,2,0]), [[3,5,1], [4,2,6]])">0</ns0:cn>
            </ns0:apply>
          </ns0:apply>
          <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:75:47&#9;    assert ArrayEq(Permute(input2d, [1,2,0]), [[3,5,1], [4,2,6]])">
            <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
            <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:75:48&#9;    assert ArrayEq(Permute(input2d, [1,2,0]), [[3,5,1], [4,2,6]])">
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:75:49&#9;    assert ArrayEq(Permute(input2d, [1,2,0]), [[3,5,1], [4,2,6]])">3</ns0:cn>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:75:51&#9;    assert ArrayEq(Permute(input2d, [1,2,0]), [[3,5,1], [4,2,6]])">5</ns0:cn>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:75:53&#9;    assert ArrayEq(Permute(input2d, [1,2,0]), [[3,5,1], [4,2,6]])">1</ns0:cn>
            </ns0:apply>
            <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:75:57&#9;    assert ArrayEq(Permute(input2d, [1,2,0]), [[3,5,1], [4,2,6]])">
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:75:58&#9;    assert ArrayEq(Permute(input2d, [1,2,0]), [[3,5,1], [4,2,6]])">4</ns0:cn>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:75:60&#9;    assert ArrayEq(Permute(input2d, [1,2,0]), [[3,5,1], [4,2,6]])">2</ns0:cn>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:75:62&#9;    assert ArrayEq(Permute(input2d, [1,2,0]), [[3,5,1], [4,2,6]])">6</ns0:cn>
            </ns0:apply>
          </ns0:apply>
        </ns0:apply>
      </ns0:apply>
      <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:77:5&#9;    assert ArrayEq(Sort([3,7,5,2,9]), [2,3,5,7,9])">
        <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:77:5&#9;    assert ArrayEq(Sort([3,7,5,2,9]), [2,3,5,7,9])"/>
        <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:77:12&#9;    assert ArrayEq(Sort([3,7,5,2,9]), [2,3,5,7,9])">
          <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:77:12&#9;    assert ArrayEq(Sort([3,7,5,2,9]), [2,3,5,7,9])">ArrayEq</ns0:ci>
          <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:77:20&#9;    assert ArrayEq(Sort([3,7,5,2,9]), [2,3,5,7,9])">
            <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:77:20&#9;    assert ArrayEq(Sort([3,7,5,2,9]), [2,3,5,7,9])">Sort</ns0:ci>
            <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:77:25&#9;    assert ArrayEq(Sort([3,7,5,2,9]), [2,3,5,7,9])">
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:77:26&#9;    assert ArrayEq(Sort([3,7,5,2,9]), [2,3,5,7,9])">3</ns0:cn>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:77:28&#9;    assert ArrayEq(Sort([3,7,5,2,9]), [2,3,5,7,9])">7</ns0:cn>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:77:30&#9;    assert ArrayEq(Sort([3,7,5,2,9]), [2,3,5,7,9])">5</ns0:cn>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:77:32&#9;    assert ArrayEq(Sort([3,7,5,2,9]), [2,3,5,7,9])">2</ns0:cn>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:77:34&#9;    assert ArrayEq(Sort([3,7,5,2,9]), [2,3,5,7,9])">9</ns0:cn>
            </ns0:apply>
          </ns0:apply>
          <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:77:39&#9;    assert ArrayEq(Sort([3,7,5,2,9]), [2,3,5,7,9])">
            <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
            <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:77:40&#9;    assert ArrayEq(Sort([3,7,5,2,9]), [2,3,5,7,9])">2</ns0:cn>
            <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:77:42&#9;    assert ArrayEq(Sort([3,7,5,2,9]), [2,3,5,7,9])">3</ns0:cn>
            <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:77:44&#9;    assert ArrayEq(Sort([3,7,5,2,9]), [2,3,5,7,9])">5</ns0:cn>
            <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:77:46&#9;    assert ArrayEq(Sort([3,7,5,2,9]), [2,3,5,7,9])">7</ns0:cn>
            <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:77:48&#9;    assert ArrayEq(Sort([3,7,5,2,9]), [2,3,5,7,9])">9</ns0:cn>
          </ns0:apply>
        </ns0:apply>
      </ns0:apply>
      <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:78:5&#9;    assert ArrayEq(Sort([3,7,11,2,9]), [2,3,7,9,11])">
        <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:78:5&#9;    assert ArrayEq(Sort([3,7,11,2,9]), [2,3,7,9,11])"/>
        <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:78:12&#9;    assert ArrayEq(Sort([3,7,11,2,9]), [2,3,7,9,11])">
          <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:78:12&#9;    assert ArrayEq(Sort([3,7,11,2,9]), [2,3,7,9,11])">ArrayEq</ns0:ci>
          <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:78:20&#9;    assert ArrayEq(Sort([3,7,11,2,9]), [2,3,7,9,11])">
            <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:78:20&#9;    assert ArrayEq(Sort([3,7,11,2,9]), [2,3,7,9,11])">Sort</ns0:ci>
            <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:78:25&#9;    assert ArrayEq(Sort([3,7,11,2,9]), [2,3,7,9,11])">
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:78:26&#9;    assert ArrayEq(Sort([3,7,11,2,9]), [2,3,7,9,11])">3</ns0:cn>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:78:28&#9;    assert ArrayEq(Sort([3,7,11,2,9]), [2,3,7,9,11])">7</ns0:cn>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:78:30&#9;    assert ArrayEq(Sort([3,7,11,2,9]), [2,3,7,9,11])">11</ns0:cn>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:78:33&#9;    assert ArrayEq(Sort([3,7,11,2,9]), [2,3,7,9,11])">2</ns0:cn>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:78:35&#9;    assert ArrayEq(Sort([3,7,11,2,9]), [2,3,7,9,11])">9</ns0:cn>
            </ns0:apply>
          </ns0:apply>
          <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:78:40&#9;    assert ArrayEq(Sort([3,7,11,2,9]), [2,3,7,9,11])">
            <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
            <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:78:41&#9;    assert ArrayEq(Sort([3,7,11,2,9]), [2,3,7,9,11])">2</ns0:cn>
            <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:78:43&#9;    assert ArrayEq(Sort([3,7,11,2,9]), [2,3,7,9,11])">3</ns0:cn>
            <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:78:45&#9;    assert ArrayEq(Sort([3,7,11,2,9]), [2,3,7,9,11])">7</ns0:cn>
            <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:78:47&#9;    assert ArrayEq(Sort([3,7,11,2,9]), [2,3,7,9,11])">9</ns0:cn>
            <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:78:49&#9;    assert ArrayEq(Sort([3,7,11,2,9]), [2,3,7,9,11])">11</ns0:cn>
          </ns0:apply>
        </ns0:apply>
      </ns0:apply>
      <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:79:5&#9;    assert ArrayEq(Sort(input), input)">
        <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:79:5&#9;    assert ArrayEq(Sort(input), input)"/>
        <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:79:12&#9;    assert ArrayEq(Sort(input), input)">
          <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:79:12&#9;    assert ArrayEq(Sort(input), input)">ArrayEq</ns0:ci>
          <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:79:20&#9;    assert ArrayEq(Sort(input), input)">
            <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:79:20&#9;    assert ArrayEq(Sort(input), input)">Sort</ns0:ci>
            <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:79:25&#9;    assert ArrayEq(Sort(input), input)">input</ns0:ci>
          </ns0:apply>
          <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:79:33&#9;    assert ArrayEq(Sort(input), input)">input</ns0:ci>
        </ns0:apply>
      </ns0:apply>
      <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:81:5&#9;    assert ArrayEq(SortBy(input2d, [3,1,2]), [ [3,5,1], [4,2,6] ])">
        <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert" loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:81:5&#9;    assert ArrayEq(SortBy(input2d, [3,1,2]), [ [3,5,1], [4,2,6] ])"/>
        <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:81:12&#9;    assert ArrayEq(SortBy(input2d, [3,1,2]), [ [3,5,1], [4,2,6] ])">
          <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:81:12&#9;    assert ArrayEq(SortBy(input2d, [3,1,2]), [ [3,5,1], [4,2,6] ])">ArrayEq</ns0:ci>
          <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:81:20&#9;    assert ArrayEq(SortBy(input2d, [3,1,2]), [ [3,5,1], [4,2,6] ])">
            <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:81:20&#9;    assert ArrayEq(SortBy(input2d, [3,1,2]), [ [3,5,1], [4,2,6] ])">SortBy</ns0:ci>
            <ns0:ci loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:81:27&#9;    assert ArrayEq(SortBy(input2d, [3,1,2]), [ [3,5,1], [4,2,6] ])">input2d</ns0:ci>
            <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:81:36&#9;    assert ArrayEq(SortBy(input2d, [3,1,2]), [ [3,5,1], [4,2,6] ])">
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:81:37&#9;    assert ArrayEq(SortBy(input2d, [3,1,2]), [ [3,5,1], [4,2,6] ])">3</ns0:cn>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:81:39&#9;    assert ArrayEq(SortBy(input2d, [3,1,2]), [ [3,5,1], [4,2,6] ])">1</ns0:cn>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:81:41&#9;    assert ArrayEq(SortBy(input2d, [3,1,2]), [ [3,5,1], [4,2,6] ])">2</ns0:cn>
            </ns0:apply>
          </ns0:apply>
          <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:81:46&#9;    assert ArrayEq(SortBy(input2d, [3,1,2]), [ [3,5,1], [4,2,6] ])">
            <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
            <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:81:48&#9;    assert ArrayEq(SortBy(input2d, [3,1,2]), [ [3,5,1], [4,2,6] ])">
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:81:49&#9;    assert ArrayEq(SortBy(input2d, [3,1,2]), [ [3,5,1], [4,2,6] ])">3</ns0:cn>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:81:51&#9;    assert ArrayEq(SortBy(input2d, [3,1,2]), [ [3,5,1], [4,2,6] ])">5</ns0:cn>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:81:53&#9;    assert ArrayEq(SortBy(input2d, [3,1,2]), [ [3,5,1], [4,2,6] ])">1</ns0:cn>
            </ns0:apply>
            <ns0:apply loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:81:57&#9;    assert ArrayEq(SortBy(input2d, [3,1,2]), [ [3,5,1], [4,2,6] ])">
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:81:58&#9;    assert ArrayEq(SortBy(input2d, [3,1,2]), [ [3,5,1], [4,2,6] ])">4</ns0:cn>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:81:60&#9;    assert ArrayEq(SortBy(input2d, [3,1,2]), [ [3,5,1], [4,2,6] ])">2</ns0:cn>
              <ns0:cn loc="projects/FunctionalCuration/test/protocols/compact/test_core_postproc.txt:81:62&#9;    assert ArrayEq(SortBy(input2d, [3,1,2]), [ [3,5,1], [4,2,6] ])">6</ns0:cn>
            </ns0:apply>
          </ns0:apply>
        </ns0:apply>
      </ns0:apply>
    </ns0:apply>
  </post-processing>
</protocol>
