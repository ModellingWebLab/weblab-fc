<?xml version='1.0' encoding='ASCII'?>
<proto:protocol xmlns:oxmeta="https://chaste.comlab.ox.ac.uk/cellml/ns/oxford-metadata#" xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:proto="https://chaste.cs.ox.ac.uk/nss/protocol/0.1#" proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:1:1&#9;# Compact syntax version of the S1S2 protocol" xml:base="projects/FunctionalCuration/test/protocols/compact/S1S2.txt">
  <proto:inputs proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:33:1&#9;inputs {">
    <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:34:1&#9;    s1_interval = 1000">
      <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/statementList" proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:34:1&#9;    s1_interval = 1000"/>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:34:5&#9;    s1_interval = 1000">
        <m:eq/>
        <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:34:5&#9;    s1_interval = 1000">s1_interval</m:ci>
        <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:34:19&#9;    s1_interval = 1000">1000</m:cn>
      </m:apply>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:35:5&#9;    steady_state_beats = 1000">
        <m:eq/>
        <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:35:5&#9;    steady_state_beats = 1000">steady_state_beats</m:ci>
        <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:35:26&#9;    steady_state_beats = 1000">1000</m:cn>
      </m:apply>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:36:5&#9;    timecourse_duration = 3000">
        <m:eq/>
        <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:36:5&#9;    timecourse_duration = 3000">timecourse_duration</m:ci>
        <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:36:27&#9;    timecourse_duration = 3000">3000</m:cn>
      </m:apply>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:37:5&#9;    s2_intervals = [2000, 1950, 1900, 1850, 1800, 1750, 1700, 1650, 1600, 1550,">
        <m:eq/>
        <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:37:5&#9;    s2_intervals = [2000, 1950, 1900, 1850, 1800, 1750, 1700, 1650, 1600, 1550,">s2_intervals</m:ci>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:37:20&#9;    s2_intervals = [2000, 1950, 1900, 1850, 1800, 1750, 1700, 1650, 1600, 1550,">
          <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:37:21&#9;    s2_intervals = [2000, 1950, 1900, 1850, 1800, 1750, 1700, 1650, 1600, 1550,">2000</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:37:27&#9;    s2_intervals = [2000, 1950, 1900, 1850, 1800, 1750, 1700, 1650, 1600, 1550,">1950</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:37:33&#9;    s2_intervals = [2000, 1950, 1900, 1850, 1800, 1750, 1700, 1650, 1600, 1550,">1900</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:37:39&#9;    s2_intervals = [2000, 1950, 1900, 1850, 1800, 1750, 1700, 1650, 1600, 1550,">1850</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:37:45&#9;    s2_intervals = [2000, 1950, 1900, 1850, 1800, 1750, 1700, 1650, 1600, 1550,">1800</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:37:51&#9;    s2_intervals = [2000, 1950, 1900, 1850, 1800, 1750, 1700, 1650, 1600, 1550,">1750</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:37:57&#9;    s2_intervals = [2000, 1950, 1900, 1850, 1800, 1750, 1700, 1650, 1600, 1550,">1700</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:37:63&#9;    s2_intervals = [2000, 1950, 1900, 1850, 1800, 1750, 1700, 1650, 1600, 1550,">1650</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:37:69&#9;    s2_intervals = [2000, 1950, 1900, 1850, 1800, 1750, 1700, 1650, 1600, 1550,">1600</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:37:75&#9;    s2_intervals = [2000, 1950, 1900, 1850, 1800, 1750, 1700, 1650, 1600, 1550,">1550</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:38:21&#9;                    1500, 1450, 1400, 1350, 1300, 1250, 1200, 1150, 1100, 1050, 1000, ">1500</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:38:27&#9;                    1500, 1450, 1400, 1350, 1300, 1250, 1200, 1150, 1100, 1050, 1000, ">1450</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:38:33&#9;                    1500, 1450, 1400, 1350, 1300, 1250, 1200, 1150, 1100, 1050, 1000, ">1400</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:38:39&#9;                    1500, 1450, 1400, 1350, 1300, 1250, 1200, 1150, 1100, 1050, 1000, ">1350</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:38:45&#9;                    1500, 1450, 1400, 1350, 1300, 1250, 1200, 1150, 1100, 1050, 1000, ">1300</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:38:51&#9;                    1500, 1450, 1400, 1350, 1300, 1250, 1200, 1150, 1100, 1050, 1000, ">1250</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:38:57&#9;                    1500, 1450, 1400, 1350, 1300, 1250, 1200, 1150, 1100, 1050, 1000, ">1200</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:38:63&#9;                    1500, 1450, 1400, 1350, 1300, 1250, 1200, 1150, 1100, 1050, 1000, ">1150</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:38:69&#9;                    1500, 1450, 1400, 1350, 1300, 1250, 1200, 1150, 1100, 1050, 1000, ">1100</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:38:75&#9;                    1500, 1450, 1400, 1350, 1300, 1250, 1200, 1150, 1100, 1050, 1000, ">1050</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:38:81&#9;                    1500, 1450, 1400, 1350, 1300, 1250, 1200, 1150, 1100, 1050, 1000, ">1000</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:39:21&#9;                    975, 950, 925, 900, 875, 850, 825, 800, 775, 750, 725, 700, ">975</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:39:26&#9;                    975, 950, 925, 900, 875, 850, 825, 800, 775, 750, 725, 700, ">950</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:39:31&#9;                    975, 950, 925, 900, 875, 850, 825, 800, 775, 750, 725, 700, ">925</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:39:36&#9;                    975, 950, 925, 900, 875, 850, 825, 800, 775, 750, 725, 700, ">900</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:39:41&#9;                    975, 950, 925, 900, 875, 850, 825, 800, 775, 750, 725, 700, ">875</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:39:46&#9;                    975, 950, 925, 900, 875, 850, 825, 800, 775, 750, 725, 700, ">850</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:39:51&#9;                    975, 950, 925, 900, 875, 850, 825, 800, 775, 750, 725, 700, ">825</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:39:56&#9;                    975, 950, 925, 900, 875, 850, 825, 800, 775, 750, 725, 700, ">800</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:39:61&#9;                    975, 950, 925, 900, 875, 850, 825, 800, 775, 750, 725, 700, ">775</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:39:66&#9;                    975, 950, 925, 900, 875, 850, 825, 800, 775, 750, 725, 700, ">750</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:39:71&#9;                    975, 950, 925, 900, 875, 850, 825, 800, 775, 750, 725, 700, ">725</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:39:76&#9;                    975, 950, 925, 900, 875, 850, 825, 800, 775, 750, 725, 700, ">700</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:40:21&#9;                    680, 660, 640, 620, 600, 580, 560, 540, 520, 500, ">680</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:40:26&#9;                    680, 660, 640, 620, 600, 580, 560, 540, 520, 500, ">660</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:40:31&#9;                    680, 660, 640, 620, 600, 580, 560, 540, 520, 500, ">640</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:40:36&#9;                    680, 660, 640, 620, 600, 580, 560, 540, 520, 500, ">620</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:40:41&#9;                    680, 660, 640, 620, 600, 580, 560, 540, 520, 500, ">600</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:40:46&#9;                    680, 660, 640, 620, 600, 580, 560, 540, 520, 500, ">580</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:40:51&#9;                    680, 660, 640, 620, 600, 580, 560, 540, 520, 500, ">560</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:40:56&#9;                    680, 660, 640, 620, 600, 580, 560, 540, 520, 500, ">540</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:40:61&#9;                    680, 660, 640, 620, 600, 580, 560, 540, 520, 500, ">520</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:40:66&#9;                    680, 660, 640, 620, 600, 580, 560, 540, 520, 500, ">500</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:41:21&#9;                    490, 480, 470, 460, 450, 440, 430, 420, 410, 400, ">490</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:41:26&#9;                    490, 480, 470, 460, 450, 440, 430, 420, 410, 400, ">480</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:41:31&#9;                    490, 480, 470, 460, 450, 440, 430, 420, 410, 400, ">470</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:41:36&#9;                    490, 480, 470, 460, 450, 440, 430, 420, 410, 400, ">460</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:41:41&#9;                    490, 480, 470, 460, 450, 440, 430, 420, 410, 400, ">450</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:41:46&#9;                    490, 480, 470, 460, 450, 440, 430, 420, 410, 400, ">440</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:41:51&#9;                    490, 480, 470, 460, 450, 440, 430, 420, 410, 400, ">430</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:41:56&#9;                    490, 480, 470, 460, 450, 440, 430, 420, 410, 400, ">420</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:41:61&#9;                    490, 480, 470, 460, 450, 440, 430, 420, 410, 400, ">410</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:41:66&#9;                    490, 480, 470, 460, 450, 440, 430, 420, 410, 400, ">400</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:42:21&#9;                    390, 380, 370, 360, 350, 340, 330, 320, 310, 300, ">390</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:42:26&#9;                    390, 380, 370, 360, 350, 340, 330, 320, 310, 300, ">380</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:42:31&#9;                    390, 380, 370, 360, 350, 340, 330, 320, 310, 300, ">370</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:42:36&#9;                    390, 380, 370, 360, 350, 340, 330, 320, 310, 300, ">360</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:42:41&#9;                    390, 380, 370, 360, 350, 340, 330, 320, 310, 300, ">350</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:42:46&#9;                    390, 380, 370, 360, 350, 340, 330, 320, 310, 300, ">340</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:42:51&#9;                    390, 380, 370, 360, 350, 340, 330, 320, 310, 300, ">330</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:42:56&#9;                    390, 380, 370, 360, 350, 340, 330, 320, 310, 300, ">320</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:42:61&#9;                    390, 380, 370, 360, 350, 340, 330, 320, 310, 300, ">310</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:42:66&#9;                    390, 380, 370, 360, 350, 340, 330, 320, 310, 300, ">300</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:43:21&#9;                    290, 280, 270, 260, 250, 240, 230, 220, 210, 200, ">290</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:43:26&#9;                    290, 280, 270, 260, 250, 240, 230, 220, 210, 200, ">280</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:43:31&#9;                    290, 280, 270, 260, 250, 240, 230, 220, 210, 200, ">270</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:43:36&#9;                    290, 280, 270, 260, 250, 240, 230, 220, 210, 200, ">260</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:43:41&#9;                    290, 280, 270, 260, 250, 240, 230, 220, 210, 200, ">250</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:43:46&#9;                    290, 280, 270, 260, 250, 240, 230, 220, 210, 200, ">240</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:43:51&#9;                    290, 280, 270, 260, 250, 240, 230, 220, 210, 200, ">230</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:43:56&#9;                    290, 280, 270, 260, 250, 240, 230, 220, 210, 200, ">220</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:43:61&#9;                    290, 280, 270, 260, 250, 240, 230, 220, 210, 200, ">210</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:43:66&#9;                    290, 280, 270, 260, 250, 240, 230, 220, 210, 200, ">200</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:44:21&#9;                    190, 180, 170, 160, 150, 140, 130, 120, 110, 100, ">190</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:44:26&#9;                    190, 180, 170, 160, 150, 140, 130, 120, 110, 100, ">180</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:44:31&#9;                    190, 180, 170, 160, 150, 140, 130, 120, 110, 100, ">170</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:44:36&#9;                    190, 180, 170, 160, 150, 140, 130, 120, 110, 100, ">160</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:44:41&#9;                    190, 180, 170, 160, 150, 140, 130, 120, 110, 100, ">150</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:44:46&#9;                    190, 180, 170, 160, 150, 140, 130, 120, 110, 100, ">140</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:44:51&#9;                    190, 180, 170, 160, 150, 140, 130, 120, 110, 100, ">130</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:44:56&#9;                    190, 180, 170, 160, 150, 140, 130, 120, 110, 100, ">120</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:44:61&#9;                    190, 180, 170, 160, 150, 140, 130, 120, 110, 100, ">110</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:44:66&#9;                    190, 180, 170, 160, 150, 140, 130, 120, 110, 100, ">100</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:45:21&#9;                    90,  80,  70,  60,  50,  40,  30,  20]">90</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:45:26&#9;                    90,  80,  70,  60,  50,  40,  30,  20]">80</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:45:31&#9;                    90,  80,  70,  60,  50,  40,  30,  20]">70</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:45:36&#9;                    90,  80,  70,  60,  50,  40,  30,  20]">60</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:45:41&#9;                    90,  80,  70,  60,  50,  40,  30,  20]">50</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:45:46&#9;                    90,  80,  70,  60,  50,  40,  30,  20]">40</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:45:51&#9;                    90,  80,  70,  60,  50,  40,  30,  20]">30</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:45:56&#9;                    90,  80,  70,  60,  50,  40,  30,  20]">20</m:cn>
        </m:apply>
      </m:apply>
    </m:apply>
  </proto:inputs>
  <proto:import source="BasicLibrary.txt" mergeDefinitions="true" proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:48:1&#9;import &quot;BasicLibrary.txt&quot;"/>
  <proto:import source="CardiacLibrary.txt" mergeDefinitions="true" proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:49:1&#9;import &quot;CardiacLibrary.txt&quot;"/>
  <proto:units proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:51:1&#9;units {">
    <cellml:units xmlns:cellml="http://www.cellml.org/cellml/1.0#" name="mV" proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:52:5&#9;    mV = milli volt">
      <cellml:unit units="volt" prefix="milli" proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:52:10&#9;    mV = milli volt"/>
    </cellml:units>
    <cellml:units xmlns:cellml="http://www.cellml.org/cellml/1.0#" name="ms" proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:53:5&#9;    ms = milli second">
      <cellml:unit units="second" prefix="milli" proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:53:10&#9;    ms = milli second"/>
    </cellml:units>
  </proto:units>
  <proto:modelInterface proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:56:1&#9;model interface {">
    <proto:specifyInputVariable units="ms" name="oxmeta:membrane_stimulus_current_end" initial_value="100000000000" proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:57:5&#9;    input oxmeta:membrane_stimulus_current_end units ms = 100000000000 # This will be modified in the nested loop below."/>
    <proto:specifyInputVariable units="ms" name="oxmeta:membrane_stimulus_current_offset" initial_value="10" proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:58:5&#9;    input oxmeta:membrane_stimulus_current_offset units ms = 10"/>
    <proto:specifyInputVariable units="ms" name="oxmeta:membrane_stimulus_current_period" initial_value="1000" proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:59:5&#9;    input oxmeta:membrane_stimulus_current_period units ms = 1000"/>
    <proto:specifyOutputVariable units="mV" name="oxmeta:membrane_voltage" proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:61:5&#9;    output oxmeta:membrane_voltage units mV"/>
    <proto:specifyOutputVariable units="ms" name="oxmeta:time" proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:62:5&#9;    output oxmeta:time units ms"/>
    <proto:addOrReplaceEquation proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:64:5&#9;    define oxmeta:membrane_stimulus_current = \">
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:64:5&#9;    define oxmeta:membrane_stimulus_current = \">
        <m:eq/>
        <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:64:12&#9;    define oxmeta:membrane_stimulus_current = \">oxmeta:membrane_stimulus_current</m:ci>
        <m:piecewise proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:65:9&#9;        if (oxmeta:time &gt;= oxmeta:membrane_stimulus_current_offset &amp;&amp; oxmeta:time &lt;= oxmeta:membrane_stimulus_current_end &amp;&amp;">
          <m:piece>
            <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:70:14&#9;        then oxmeta:membrane_stimulus_current_amplitude else 0 :: dimensionless * oxmeta:membrane_stimulus_current_amplitude">oxmeta:membrane_stimulus_current_amplitude</m:ci>
            <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:65:13&#9;        if (oxmeta:time &gt;= oxmeta:membrane_stimulus_current_offset &amp;&amp; oxmeta:time &lt;= oxmeta:membrane_stimulus_current_end &amp;&amp;">
              <m:and/>
              <m:apply>
                <m:and/>
                <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:65:13&#9;        if (oxmeta:time &gt;= oxmeta:membrane_stimulus_current_offset &amp;&amp; oxmeta:time &lt;= oxmeta:membrane_stimulus_current_end &amp;&amp;">
                  <m:geq/>
                  <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:65:13&#9;        if (oxmeta:time &gt;= oxmeta:membrane_stimulus_current_offset &amp;&amp; oxmeta:time &lt;= oxmeta:membrane_stimulus_current_end &amp;&amp;">oxmeta:time</m:ci>
                  <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:65:28&#9;        if (oxmeta:time &gt;= oxmeta:membrane_stimulus_current_offset &amp;&amp; oxmeta:time &lt;= oxmeta:membrane_stimulus_current_end &amp;&amp;">oxmeta:membrane_stimulus_current_offset</m:ci>
                </m:apply>
                <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:65:71&#9;        if (oxmeta:time &gt;= oxmeta:membrane_stimulus_current_offset &amp;&amp; oxmeta:time &lt;= oxmeta:membrane_stimulus_current_end &amp;&amp;">
                  <m:leq/>
                  <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:65:71&#9;        if (oxmeta:time &gt;= oxmeta:membrane_stimulus_current_offset &amp;&amp; oxmeta:time &lt;= oxmeta:membrane_stimulus_current_end &amp;&amp;">oxmeta:time</m:ci>
                  <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:65:86&#9;        if (oxmeta:time &gt;= oxmeta:membrane_stimulus_current_offset &amp;&amp; oxmeta:time &lt;= oxmeta:membrane_stimulus_current_end &amp;&amp;">oxmeta:membrane_stimulus_current_end</m:ci>
                </m:apply>
              </m:apply>
              <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:66:14&#9;            ((oxmeta:time - oxmeta:membrane_stimulus_current_offset)">
                <m:leq/>
                <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:66:14&#9;            ((oxmeta:time - oxmeta:membrane_stimulus_current_offset)">
                  <m:minus/>
                  <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:66:15&#9;            ((oxmeta:time - oxmeta:membrane_stimulus_current_offset)">
                    <m:minus/>
                    <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:66:15&#9;            ((oxmeta:time - oxmeta:membrane_stimulus_current_offset)">oxmeta:time</m:ci>
                    <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:66:29&#9;            ((oxmeta:time - oxmeta:membrane_stimulus_current_offset)">oxmeta:membrane_stimulus_current_offset</m:ci>
                  </m:apply>
                  <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:67:17&#9;             - (MathML:floor((oxmeta:time - oxmeta:membrane_stimulus_current_offset) /">
                    <m:times/>
                    <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:67:17&#9;             - (MathML:floor((oxmeta:time - oxmeta:membrane_stimulus_current_offset) /">
                      <m:floor/>
                      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:67:30&#9;             - (MathML:floor((oxmeta:time - oxmeta:membrane_stimulus_current_offset) /">
                        <m:divide/>
                        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:67:31&#9;             - (MathML:floor((oxmeta:time - oxmeta:membrane_stimulus_current_offset) /">
                          <m:minus/>
                          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:67:31&#9;             - (MathML:floor((oxmeta:time - oxmeta:membrane_stimulus_current_offset) /">oxmeta:time</m:ci>
                          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:67:45&#9;             - (MathML:floor((oxmeta:time - oxmeta:membrane_stimulus_current_offset) /">oxmeta:membrane_stimulus_current_offset</m:ci>
                        </m:apply>
                        <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:68:30&#9;                             oxmeta:membrane_stimulus_current_period) * oxmeta:membrane_stimulus_current_period)">oxmeta:membrane_stimulus_current_period</m:ci>
                      </m:apply>
                    </m:apply>
                    <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:68:73&#9;                             oxmeta:membrane_stimulus_current_period) * oxmeta:membrane_stimulus_current_period)">oxmeta:membrane_stimulus_current_period</m:ci>
                  </m:apply>
                </m:apply>
                <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:69:17&#9;             &lt;= oxmeta:membrane_stimulus_current_duration))">oxmeta:membrane_stimulus_current_duration</m:ci>
              </m:apply>
            </m:apply>
          </m:piece>
          <m:otherwise>
            <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:70:62&#9;        then oxmeta:membrane_stimulus_current_amplitude else 0 :: dimensionless * oxmeta:membrane_stimulus_current_amplitude">
              <m:times/>
              <m:cn xmlns:ns1="http://www.cellml.org/cellml/1.0#" ns1:units="dimensionless" proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:70:62&#9;        then oxmeta:membrane_stimulus_current_amplitude else 0 :: dimensionless * oxmeta:membrane_stimulus_current_amplitude">0</m:cn>
              <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:70:83&#9;        then oxmeta:membrane_stimulus_current_amplitude else 0 :: dimensionless * oxmeta:membrane_stimulus_current_amplitude">oxmeta:membrane_stimulus_current_amplitude</m:ci>
            </m:apply>
          </m:otherwise>
        </m:piecewise>
      </m:apply>
    </proto:addOrReplaceEquation>
  </proto:modelInterface>
  <proto:simulations proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:73:1&#9;tasks {">
    <proto:timecourseSimulation proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:75:5&#9;    simulation timecourse {">
      <proto:vectorStepper units="ms" name="time" proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:76:9&#9;        range time units ms vector [0, s1_interval * steady_state_beats]">
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:76:36&#9;        range time units ms vector [0, s1_interval * steady_state_beats]">
          <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:76:37&#9;        range time units ms vector [0, s1_interval * steady_state_beats]">0</m:cn>
          <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:76:40&#9;        range time units ms vector [0, s1_interval * steady_state_beats]">
            <m:times/>
            <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:76:40&#9;        range time units ms vector [0, s1_interval * steady_state_beats]">s1_interval</m:ci>
            <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:76:54&#9;        range time units ms vector [0, s1_interval * steady_state_beats]">steady_state_beats</m:ci>
          </m:apply>
        </m:apply>
      </proto:vectorStepper>
      <proto:modifiers proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:77:9&#9;        modifiers {">
        <proto:setVariable proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:79:13&#9;            at start set oxmeta:membrane_stimulus_current_period = s1_interval # ms">
          <proto:when proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:79:15&#9;            at start set oxmeta:membrane_stimulus_current_period = s1_interval # ms">AT_START_ONLY</proto:when>
          <proto:name>oxmeta:membrane_stimulus_current_period</proto:name>
          <proto:value>
            <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:79:68&#9;            at start set oxmeta:membrane_stimulus_current_period = s1_interval # ms">s1_interval</m:ci>
          </proto:value>
        </proto:setVariable>
        <proto:setVariable proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:80:13&#9;            at start set oxmeta:membrane_stimulus_current_offset = 10          # ms">
          <proto:when proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:80:15&#9;            at start set oxmeta:membrane_stimulus_current_offset = 10          # ms">AT_START_ONLY</proto:when>
          <proto:name>oxmeta:membrane_stimulus_current_offset</proto:name>
          <proto:value>
            <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:80:68&#9;            at start set oxmeta:membrane_stimulus_current_offset = 10          # ms">10</m:cn>
          </proto:value>
        </proto:setVariable>
        <proto:saveState proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:81:13&#9;            at end save as initial_state">
          <proto:when proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:81:15&#9;            at end save as initial_state">AT_END</proto:when>
          <proto:name>initial_state</proto:name>
        </proto:saveState>
      </proto:modifiers>
    </proto:timecourseSimulation>
    <proto:nestedSimulation proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:85:5&#9;    simulation sim = nested {" prefix="sim">
      <proto:vectorStepper units="ms" name="s2_interval" proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:86:9&#9;        range s2_interval units ms vector s2_intervals">
        <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:86:43&#9;        range s2_interval units ms vector s2_intervals">s2_intervals</m:ci>
      </proto:vectorStepper>
      <proto:modifiers proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:87:9&#9;        modifiers {">
        <proto:resetState proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:88:13&#9;            at each loop reset to initial_state">
          <proto:when proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:88:15&#9;            at each loop reset to initial_state">EVERY_LOOP</proto:when>
          <proto:state>initial_state</proto:state>
        </proto:resetState>
        <proto:setVariable proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:90:13&#9;            at each loop set oxmeta:membrane_stimulus_current_period = s2_interval">
          <proto:when proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:90:15&#9;            at each loop set oxmeta:membrane_stimulus_current_period = s2_interval">EVERY_LOOP</proto:when>
          <proto:name>oxmeta:membrane_stimulus_current_period</proto:name>
          <proto:value>
            <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:90:72&#9;            at each loop set oxmeta:membrane_stimulus_current_period = s2_interval">s2_interval</m:ci>
          </proto:value>
        </proto:setVariable>
        <proto:setVariable proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:92:13&#9;            at each loop set oxmeta:membrane_stimulus_current_end = s2_interval * 1.5">
          <proto:when proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:92:15&#9;            at each loop set oxmeta:membrane_stimulus_current_end = s2_interval * 1.5">EVERY_LOOP</proto:when>
          <proto:name>oxmeta:membrane_stimulus_current_end</proto:name>
          <proto:value>
            <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:92:69&#9;            at each loop set oxmeta:membrane_stimulus_current_end = s2_interval * 1.5">
              <m:times/>
              <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:92:69&#9;            at each loop set oxmeta:membrane_stimulus_current_end = s2_interval * 1.5">s2_interval</m:ci>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:92:83&#9;            at each loop set oxmeta:membrane_stimulus_current_end = s2_interval * 1.5">1.5</m:cn>
            </m:apply>
          </proto:value>
        </proto:setVariable>
      </proto:modifiers>
      <proto:timecourseSimulation proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:94:15&#9;        nests simulation timecourse {">
        <proto:uniformStepper units="ms" name="time" proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:95:13&#9;            range time units ms uniform 0:1:timecourse_duration">
          <proto:start>
            <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:95:41&#9;            range time units ms uniform 0:1:timecourse_duration">0</m:cn>
          </proto:start>
          <proto:stop>
            <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:95:45&#9;            range time units ms uniform 0:1:timecourse_duration">timecourse_duration</m:ci>
          </proto:stop>
          <proto:step>
            <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:95:43&#9;            range time units ms uniform 0:1:timecourse_duration">1</m:cn>
          </proto:step>
        </proto:uniformStepper>
        <proto:modifiers proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:94:26&#9;        nests simulation timecourse {"/>
      </proto:timecourseSimulation>
    </proto:nestedSimulation>
  </proto:simulations>
  <proto:post-processing proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:100:1&#9;post-processing {">
    <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:100:1&#9;post-processing {">
      <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/statementList" proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:100:1&#9;post-processing {"/>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:102:5&#9;    assert sim:time.IS_ARRAY">
        <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert" proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:102:5&#9;    assert sim:time.IS_ARRAY"/>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:102:12&#9;    assert sim:time.IS_ARRAY">
          <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/accessor" proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:102:12&#9;    assert sim:time.IS_ARRAY">IS_ARRAY</m:csymbol>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:102:12&#9;    assert sim:time.IS_ARRAY">sim:time</m:ci>
        </m:apply>
      </m:apply>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:103:5&#9;    assert sim:membrane_voltage.IS_ARRAY">
        <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert" proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:103:5&#9;    assert sim:membrane_voltage.IS_ARRAY"/>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:103:12&#9;    assert sim:membrane_voltage.IS_ARRAY">
          <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/accessor" proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:103:12&#9;    assert sim:membrane_voltage.IS_ARRAY">IS_ARRAY</m:csymbol>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:103:12&#9;    assert sim:membrane_voltage.IS_ARRAY">sim:membrane_voltage</m:ci>
        </m:apply>
      </m:apply>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:106:5&#9;    time_1d = RemoveDim(sim:time, 0)">
        <m:eq/>
        <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:106:5&#9;    time_1d = RemoveDim(sim:time, 0)">time_1d</m:ci>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:106:15&#9;    time_1d = RemoveDim(sim:time, 0)">
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:106:15&#9;    time_1d = RemoveDim(sim:time, 0)">RemoveDim</m:ci>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:106:25&#9;    time_1d = RemoveDim(sim:time, 0)">sim:time</m:ci>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:106:35&#9;    time_1d = RemoveDim(sim:time, 0)">0</m:cn>
        </m:apply>
      </m:apply>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:109:5&#9;    raw_APD90, raw_DI = ApdAndDi(sim:membrane_voltage, sim:time, 90, default, default, default)">
        <m:eq/>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:109:5&#9;    raw_APD90, raw_DI = ApdAndDi(sim:membrane_voltage, sim:time, 90, default, default, default)">
          <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:109:5&#9;    raw_APD90, raw_DI = ApdAndDi(sim:membrane_voltage, sim:time, 90, default, default, default)">raw_APD90</m:ci>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:109:16&#9;    raw_APD90, raw_DI = ApdAndDi(sim:membrane_voltage, sim:time, 90, default, default, default)">raw_DI</m:ci>
        </m:apply>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:109:25&#9;    raw_APD90, raw_DI = ApdAndDi(sim:membrane_voltage, sim:time, 90, default, default, default)">
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:109:25&#9;    raw_APD90, raw_DI = ApdAndDi(sim:membrane_voltage, sim:time, 90, default, default, default)">ApdAndDi</m:ci>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:109:34&#9;    raw_APD90, raw_DI = ApdAndDi(sim:membrane_voltage, sim:time, 90, default, default, default)">sim:membrane_voltage</m:ci>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:109:56&#9;    raw_APD90, raw_DI = ApdAndDi(sim:membrane_voltage, sim:time, 90, default, default, default)">sim:time</m:ci>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:109:66&#9;    raw_APD90, raw_DI = ApdAndDi(sim:membrane_voltage, sim:time, 90, default, default, default)">90</m:cn>
          <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/defaultParameter" proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:109:70&#9;    raw_APD90, raw_DI = ApdAndDi(sim:membrane_voltage, sim:time, 90, default, default, default)"/>
          <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/defaultParameter" proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:109:79&#9;    raw_APD90, raw_DI = ApdAndDi(sim:membrane_voltage, sim:time, 90, default, default, default)"/>
          <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/defaultParameter" proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:109:88&#9;    raw_APD90, raw_DI = ApdAndDi(sim:membrane_voltage, sim:time, 90, default, default, default)"/>
        </m:apply>
      </m:apply>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:112:5&#9;    first_raw_DI = raw_DI[1$0][*$:]">
        <m:eq/>
        <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:112:5&#9;    first_raw_DI = raw_DI[1$0][*$:]">first_raw_DI</m:ci>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:112:20&#9;    first_raw_DI = raw_DI[1$0][*$:]">
          <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/view" proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:112:20&#9;    first_raw_DI = raw_DI[1$0][*$:]"/>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:112:20&#9;    first_raw_DI = raw_DI[1$0][*$:]">raw_DI</m:ci>
          <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:112:20&#9;    first_raw_DI = raw_DI[1$0][*$:]">
            <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
            <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:112:27&#9;    first_raw_DI = raw_DI[1$0][*$:]">1</m:cn>
            <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:112:29&#9;    first_raw_DI = raw_DI[1$0][*$:]">0</m:cn>
            <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:112:20&#9;    first_raw_DI = raw_DI[1$0][*$:]">0</m:cn>
            <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:112:29&#9;    first_raw_DI = raw_DI[1$0][*$:]">0</m:cn>
          </m:apply>
          <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:112:20&#9;    first_raw_DI = raw_DI[1$0][*$:]">
            <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
            <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:112:20&#9;    first_raw_DI = raw_DI[1$0][*$:]"/>
            <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:112:20&#9;    first_raw_DI = raw_DI[1$0][*$:]"/>
            <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:112:20&#9;    first_raw_DI = raw_DI[1$0][*$:]">1</m:cn>
            <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:112:20&#9;    first_raw_DI = raw_DI[1$0][*$:]"/>
          </m:apply>
        </m:apply>
      </m:apply>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:113:5&#9;    second_raw_APD = raw_APD90[1$1][*$:]">
        <m:eq/>
        <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:113:5&#9;    second_raw_APD = raw_APD90[1$1][*$:]">second_raw_APD</m:ci>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:113:22&#9;    second_raw_APD = raw_APD90[1$1][*$:]">
          <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/view" proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:113:22&#9;    second_raw_APD = raw_APD90[1$1][*$:]"/>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:113:22&#9;    second_raw_APD = raw_APD90[1$1][*$:]">raw_APD90</m:ci>
          <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:113:22&#9;    second_raw_APD = raw_APD90[1$1][*$:]">
            <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
            <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:113:32&#9;    second_raw_APD = raw_APD90[1$1][*$:]">1</m:cn>
            <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:113:34&#9;    second_raw_APD = raw_APD90[1$1][*$:]">1</m:cn>
            <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:113:22&#9;    second_raw_APD = raw_APD90[1$1][*$:]">0</m:cn>
            <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:113:34&#9;    second_raw_APD = raw_APD90[1$1][*$:]">1</m:cn>
          </m:apply>
          <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:113:22&#9;    second_raw_APD = raw_APD90[1$1][*$:]">
            <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
            <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:113:22&#9;    second_raw_APD = raw_APD90[1$1][*$:]"/>
            <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:113:22&#9;    second_raw_APD = raw_APD90[1$1][*$:]"/>
            <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:113:22&#9;    second_raw_APD = raw_APD90[1$1][*$:]">1</m:cn>
            <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:113:22&#9;    second_raw_APD = raw_APD90[1$1][*$:]"/>
          </m:apply>
        </m:apply>
      </m:apply>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:118:5&#9;    min_DI = 19">
        <m:eq/>
        <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:118:5&#9;    min_DI = 19">min_DI</m:ci>
        <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:118:14&#9;    min_DI = 19">19</m:cn>
      </m:apply>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:119:5&#9;    DI = After(first_raw_DI, first_raw_DI, min_DI, default)">
        <m:eq/>
        <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:119:5&#9;    DI = After(first_raw_DI, first_raw_DI, min_DI, default)">DI</m:ci>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:119:10&#9;    DI = After(first_raw_DI, first_raw_DI, min_DI, default)">
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:119:10&#9;    DI = After(first_raw_DI, first_raw_DI, min_DI, default)">After</m:ci>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:119:16&#9;    DI = After(first_raw_DI, first_raw_DI, min_DI, default)">first_raw_DI</m:ci>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:119:30&#9;    DI = After(first_raw_DI, first_raw_DI, min_DI, default)">first_raw_DI</m:ci>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:119:44&#9;    DI = After(first_raw_DI, first_raw_DI, min_DI, default)">min_DI</m:ci>
          <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/defaultParameter" proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:119:52&#9;    DI = After(first_raw_DI, first_raw_DI, min_DI, default)"/>
        </m:apply>
      </m:apply>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:120:5&#9;    APD90 = After(second_raw_APD, first_raw_DI, min_DI, default)">
        <m:eq/>
        <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:120:5&#9;    APD90 = After(second_raw_APD, first_raw_DI, min_DI, default)">APD90</m:ci>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:120:13&#9;    APD90 = After(second_raw_APD, first_raw_DI, min_DI, default)">
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:120:13&#9;    APD90 = After(second_raw_APD, first_raw_DI, min_DI, default)">After</m:ci>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:120:19&#9;    APD90 = After(second_raw_APD, first_raw_DI, min_DI, default)">second_raw_APD</m:ci>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:120:35&#9;    APD90 = After(second_raw_APD, first_raw_DI, min_DI, default)">first_raw_DI</m:ci>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:120:49&#9;    APD90 = After(second_raw_APD, first_raw_DI, min_DI, default)">min_DI</m:ci>
          <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/defaultParameter" proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:120:57&#9;    APD90 = After(second_raw_APD, first_raw_DI, min_DI, default)"/>
        </m:apply>
      </m:apply>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:121:5&#9;    PCLs = After(s2_intervals, first_raw_DI, min_DI, default)">
        <m:eq/>
        <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:121:5&#9;    PCLs = After(s2_intervals, first_raw_DI, min_DI, default)">PCLs</m:ci>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:121:12&#9;    PCLs = After(s2_intervals, first_raw_DI, min_DI, default)">
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:121:12&#9;    PCLs = After(s2_intervals, first_raw_DI, min_DI, default)">After</m:ci>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:121:18&#9;    PCLs = After(s2_intervals, first_raw_DI, min_DI, default)">s2_intervals</m:ci>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:121:32&#9;    PCLs = After(s2_intervals, first_raw_DI, min_DI, default)">first_raw_DI</m:ci>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:121:46&#9;    PCLs = After(s2_intervals, first_raw_DI, min_DI, default)">min_DI</m:ci>
          <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/defaultParameter" proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:121:54&#9;    PCLs = After(s2_intervals, first_raw_DI, min_DI, default)"/>
        </m:apply>
      </m:apply>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:124:5&#9;    S1S2_slope = Grad(DI, APD90, default)">
        <m:eq/>
        <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:124:5&#9;    S1S2_slope = Grad(DI, APD90, default)">S1S2_slope</m:ci>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:124:18&#9;    S1S2_slope = Grad(DI, APD90, default)">
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:124:18&#9;    S1S2_slope = Grad(DI, APD90, default)">Grad</m:ci>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:124:23&#9;    S1S2_slope = Grad(DI, APD90, default)">DI</m:ci>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:124:27&#9;    S1S2_slope = Grad(DI, APD90, default)">APD90</m:ci>
          <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/defaultParameter" proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:124:34&#9;    S1S2_slope = Grad(DI, APD90, default)"/>
        </m:apply>
      </m:apply>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:125:5&#9;    max_S1S2_slope = Max(S1S2_slope, default)">
        <m:eq/>
        <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:125:5&#9;    max_S1S2_slope = Max(S1S2_slope, default)">max_S1S2_slope</m:ci>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:125:22&#9;    max_S1S2_slope = Max(S1S2_slope, default)">
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:125:22&#9;    max_S1S2_slope = Max(S1S2_slope, default)">Max</m:ci>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:125:26&#9;    max_S1S2_slope = Max(S1S2_slope, default)">S1S2_slope</m:ci>
          <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/defaultParameter" proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:125:38&#9;    max_S1S2_slope = Max(S1S2_slope, default)"/>
        </m:apply>
      </m:apply>
    </m:apply>
  </proto:post-processing>
  <proto:outputVariables proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:128:1&#9;outputs {">
    <proto:raw ref="sim:membrane_voltage" name="membrane_voltage" description="Transmembrane potential" proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:129:5&#9;    membrane_voltage = sim:membrane_voltage &quot;Transmembrane potential&quot;"/>
    <proto:postprocessed units="ms" name="time_1d" description="Time" proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:130:5&#9;    time_1d units ms &quot;Time&quot;"/>
    <proto:postprocessed units="ms" name="raw_APD90" proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:131:5&#9;    raw_APD90 units ms"/>
    <proto:postprocessed units="ms" name="raw_DI" proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:132:5&#9;    raw_DI units ms"/>
    <proto:postprocessed units="ms" name="PCLs" description="Pacing Cycle Length" proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:133:5&#9;    PCLs units ms &quot;Pacing Cycle Length&quot;"/>
    <proto:postprocessed units="ms" name="APD90" description="Action Potential Duration 90%" proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:134:5&#9;    APD90 units ms &quot;Action Potential Duration 90%&quot;"/>
    <proto:postprocessed units="ms" name="DI" description="Diastolic Interval" proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:135:5&#9;    DI units ms &quot;Diastolic Interval&quot;"/>
    <proto:postprocessed units="dimensionless" name="S1S2_slope" description="S1-S2 curve gradient" proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:136:5&#9;    S1S2_slope units dimensionless &quot;S1-S2 curve gradient&quot;"/>
    <proto:postprocessed units="dimensionless" name="max_S1S2_slope" description="Maximum gradient of S1-S2 curve" proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:137:5&#9;    max_S1S2_slope units dimensionless &quot;Maximum gradient of S1-S2 curve&quot;"/>
  </proto:outputVariables>
  <proto:plots proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:140:1&#9;plots {">
    <proto:plot proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:141:5&#9;    plot &quot;S1-S2 curve&quot; using linespoints { APD90 against DI }">
      <proto:title>S1-S2 curve</proto:title>
      <proto:x>DI</proto:x>
      <proto:y>APD90</proto:y>
      <proto:using>linespoints</proto:using>
    </proto:plot>
    <proto:plot proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:142:5&#9;    plot &quot;restitution curve&quot; using linespoints { APD90 against PCLs }">
      <proto:title>restitution curve</proto:title>
      <proto:x>PCLs</proto:x>
      <proto:y>APD90</proto:y>
      <proto:using>linespoints</proto:using>
    </proto:plot>
    <proto:plot proto:loc="projects/FunctionalCuration/test/protocols/compact/S1S2.txt:143:5&#9;    plot &quot;Action potential traces&quot; using lines { membrane_voltage against time_1d }">
      <proto:title>Action potential traces</proto:title>
      <proto:x>time_1d</proto:x>
      <proto:y>membrane_voltage</proto:y>
      <proto:using>lines</proto:using>
    </proto:plot>
  </proto:plots>
</proto:protocol>
