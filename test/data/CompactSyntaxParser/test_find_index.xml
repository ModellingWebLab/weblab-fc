<?xml version='1.0' encoding='ASCII'?>
<proto:protocol xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:proto="https://chaste.cs.ox.ac.uk/nss/protocol/0.1#" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:1:1&#9;# Compact version of the test_find_index protocol" xml:base="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt">
  <proto:import source="BasicLibrary.txt" mergeDefinitions="true" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:3:1&#9;import &quot;BasicLibrary.txt&quot;"/>
  <proto:post-processing proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:5:1&#9;post-processing {">
    <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:5:1&#9;post-processing {">
      <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/statementList" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:5:1&#9;post-processing {"/>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:7:5&#9;    input = [ i*5 + j for i in 0:3 for j in 0:5 ]">
        <m:eq/>
        <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:7:5&#9;    input = [ i*5 + j for i in 0:3 for j in 0:5 ]">input</m:ci>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:7:13&#9;    input = [ i*5 + j for i in 0:3 for j in 0:5 ]">
          <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
          <m:domainofapplication>
            <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:7:23&#9;    input = [ i*5 + j for i in 0:3 for j in 0:5 ]">
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:7:32&#9;    input = [ i*5 + j for i in 0:3 for j in 0:5 ]">0</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:7:23&#9;    input = [ i*5 + j for i in 0:3 for j in 0:5 ]">1</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:7:34&#9;    input = [ i*5 + j for i in 0:3 for j in 0:5 ]">3</m:cn>
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/string" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:7:23&#9;    input = [ i*5 + j for i in 0:3 for j in 0:5 ]">i</m:csymbol>
            </m:apply>
            <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:7:36&#9;    input = [ i*5 + j for i in 0:3 for j in 0:5 ]">
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:7:45&#9;    input = [ i*5 + j for i in 0:3 for j in 0:5 ]">0</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:7:36&#9;    input = [ i*5 + j for i in 0:3 for j in 0:5 ]">1</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:7:47&#9;    input = [ i*5 + j for i in 0:3 for j in 0:5 ]">5</m:cn>
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/string" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:7:36&#9;    input = [ i*5 + j for i in 0:3 for j in 0:5 ]">j</m:csymbol>
            </m:apply>
          </m:domainofapplication>
          <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:7:15&#9;    input = [ i*5 + j for i in 0:3 for j in 0:5 ]">
            <m:plus/>
            <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:7:15&#9;    input = [ i*5 + j for i in 0:3 for j in 0:5 ]">
              <m:times/>
              <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:7:15&#9;    input = [ i*5 + j for i in 0:3 for j in 0:5 ]">i</m:ci>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:7:17&#9;    input = [ i*5 + j for i in 0:3 for j in 0:5 ]">5</m:cn>
            </m:apply>
            <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:7:21&#9;    input = [ i*5 + j for i in 0:3 for j in 0:5 ]">j</m:ci>
          </m:apply>
        </m:apply>
      </m:apply>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:8:5&#9;    input_max = 14">
        <m:eq/>
        <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:8:5&#9;    input_max = 14">input_max</m:ci>
        <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:8:17&#9;    input_max = 14">14</m:cn>
      </m:apply>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:11:5&#9;    all_bar_largest = map(lambda x: x &lt; input_max, input)">
        <m:eq/>
        <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:11:5&#9;    all_bar_largest = map(lambda x: x &lt; input_max, input)">all_bar_largest</m:ci>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:11:23&#9;    all_bar_largest = map(lambda x: x &lt; input_max, input)">
          <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/map" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:11:23&#9;    all_bar_largest = map(lambda x: x &lt; input_max, input)"/>
          <m:lambda proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:11:27&#9;    all_bar_largest = map(lambda x: x &lt; input_max, input)">
            <m:bvar>
              <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:11:34&#9;    all_bar_largest = map(lambda x: x &lt; input_max, input)">x</m:ci>
            </m:bvar>
            <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:11:37&#9;    all_bar_largest = map(lambda x: x &lt; input_max, input)">
              <m:lt/>
              <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:11:37&#9;    all_bar_largest = map(lambda x: x &lt; input_max, input)">x</m:ci>
              <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:11:41&#9;    all_bar_largest = map(lambda x: x &lt; input_max, input)">input_max</m:ci>
            </m:apply>
          </m:lambda>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:11:52&#9;    all_bar_largest = map(lambda x: x &lt; input_max, input)">input</m:ci>
        </m:apply>
      </m:apply>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:12:5&#9;    all_bar_largest_idxs = find(all_bar_largest)">
        <m:eq/>
        <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:12:5&#9;    all_bar_largest_idxs = find(all_bar_largest)">all_bar_largest_idxs</m:ci>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:12:28&#9;    all_bar_largest_idxs = find(all_bar_largest)">
          <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/find" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:12:28&#9;    all_bar_largest_idxs = find(all_bar_largest)"/>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:12:33&#9;    all_bar_largest_idxs = find(all_bar_largest)">all_bar_largest</m:ci>
        </m:apply>
      </m:apply>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:13:5&#9;    all_bar_largest_indexed = input{all_bar_largest_idxs, 0, pad:1=-1}">
        <m:eq/>
        <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:13:5&#9;    all_bar_largest_indexed = input{all_bar_largest_idxs, 0, pad:1=-1}">all_bar_largest_indexed</m:ci>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:13:31&#9;    all_bar_largest_indexed = input{all_bar_largest_idxs, 0, pad:1=-1}">
          <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/index" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:13:31&#9;    all_bar_largest_indexed = input{all_bar_largest_idxs, 0, pad:1=-1}"/>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:13:31&#9;    all_bar_largest_indexed = input{all_bar_largest_idxs, 0, pad:1=-1}">input</m:ci>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:13:37&#9;    all_bar_largest_indexed = input{all_bar_largest_idxs, 0, pad:1=-1}">all_bar_largest_idxs</m:ci>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:13:59&#9;    all_bar_largest_indexed = input{all_bar_largest_idxs, 0, pad:1=-1}">0</m:cn>
          <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/defaultParameter" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:13:31&#9;    all_bar_largest_indexed = input{all_bar_largest_idxs, 0, pad:1=-1}"/>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:13:66&#9;    all_bar_largest_indexed = input{all_bar_largest_idxs, 0, pad:1=-1}">1</m:cn>
          <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:13:68&#9;    all_bar_largest_indexed = input{all_bar_largest_idxs, 0, pad:1=-1}">
            <m:minus/>
            <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:13:69&#9;    all_bar_largest_indexed = input{all_bar_largest_idxs, 0, pad:1=-1}">1</m:cn>
          </m:apply>
        </m:apply>
      </m:apply>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:14:5&#9;    assert all_bar_largest_indexed.NUM_DIMS == 2">
        <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:14:5&#9;    assert all_bar_largest_indexed.NUM_DIMS == 2"/>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:14:12&#9;    assert all_bar_largest_indexed.NUM_DIMS == 2">
          <m:eq/>
          <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:14:12&#9;    assert all_bar_largest_indexed.NUM_DIMS == 2">
            <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/accessor" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:14:12&#9;    assert all_bar_largest_indexed.NUM_DIMS == 2">NUM_DIMS</m:csymbol>
            <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:14:12&#9;    assert all_bar_largest_indexed.NUM_DIMS == 2">all_bar_largest_indexed</m:ci>
          </m:apply>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:14:48&#9;    assert all_bar_largest_indexed.NUM_DIMS == 2">2</m:cn>
        </m:apply>
      </m:apply>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:15:5&#9;    assert all_bar_largest_indexed.NUM_ELEMENTS == input.NUM_ELEMENTS">
        <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:15:5&#9;    assert all_bar_largest_indexed.NUM_ELEMENTS == input.NUM_ELEMENTS"/>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:15:12&#9;    assert all_bar_largest_indexed.NUM_ELEMENTS == input.NUM_ELEMENTS">
          <m:eq/>
          <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:15:12&#9;    assert all_bar_largest_indexed.NUM_ELEMENTS == input.NUM_ELEMENTS">
            <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/accessor" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:15:12&#9;    assert all_bar_largest_indexed.NUM_ELEMENTS == input.NUM_ELEMENTS">NUM_ELEMENTS</m:csymbol>
            <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:15:12&#9;    assert all_bar_largest_indexed.NUM_ELEMENTS == input.NUM_ELEMENTS">all_bar_largest_indexed</m:ci>
          </m:apply>
          <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:15:52&#9;    assert all_bar_largest_indexed.NUM_ELEMENTS == input.NUM_ELEMENTS">
            <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/accessor" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:15:52&#9;    assert all_bar_largest_indexed.NUM_ELEMENTS == input.NUM_ELEMENTS">NUM_ELEMENTS</m:csymbol>
            <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:15:52&#9;    assert all_bar_largest_indexed.NUM_ELEMENTS == input.NUM_ELEMENTS">input</m:ci>
          </m:apply>
        </m:apply>
      </m:apply>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:16:5&#9;    assert ArrayEq(all_bar_largest_indexed, [ if i == 2 &amp;&amp; j == 4 then -1 else input[i][j] for i in 0:3 for j in 0:5 ])">
        <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:16:5&#9;    assert ArrayEq(all_bar_largest_indexed, [ if i == 2 &amp;&amp; j == 4 then -1 else input[i][j] for i in 0:3 for j in 0:5 ])"/>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:16:12&#9;    assert ArrayEq(all_bar_largest_indexed, [ if i == 2 &amp;&amp; j == 4 then -1 else input[i][j] for i in 0:3 for j in 0:5 ])">
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:16:12&#9;    assert ArrayEq(all_bar_largest_indexed, [ if i == 2 &amp;&amp; j == 4 then -1 else input[i][j] for i in 0:3 for j in 0:5 ])">ArrayEq</m:ci>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:16:20&#9;    assert ArrayEq(all_bar_largest_indexed, [ if i == 2 &amp;&amp; j == 4 then -1 else input[i][j] for i in 0:3 for j in 0:5 ])">all_bar_largest_indexed</m:ci>
          <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:16:45&#9;    assert ArrayEq(all_bar_largest_indexed, [ if i == 2 &amp;&amp; j == 4 then -1 else input[i][j] for i in 0:3 for j in 0:5 ])">
            <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
            <m:domainofapplication>
              <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:16:92&#9;    assert ArrayEq(all_bar_largest_indexed, [ if i == 2 &amp;&amp; j == 4 then -1 else input[i][j] for i in 0:3 for j in 0:5 ])">
                <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
                <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:16:101&#9;    assert ArrayEq(all_bar_largest_indexed, [ if i == 2 &amp;&amp; j == 4 then -1 else input[i][j] for i in 0:3 for j in 0:5 ])">0</m:cn>
                <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:16:92&#9;    assert ArrayEq(all_bar_largest_indexed, [ if i == 2 &amp;&amp; j == 4 then -1 else input[i][j] for i in 0:3 for j in 0:5 ])">1</m:cn>
                <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:16:103&#9;    assert ArrayEq(all_bar_largest_indexed, [ if i == 2 &amp;&amp; j == 4 then -1 else input[i][j] for i in 0:3 for j in 0:5 ])">3</m:cn>
                <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/string" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:16:92&#9;    assert ArrayEq(all_bar_largest_indexed, [ if i == 2 &amp;&amp; j == 4 then -1 else input[i][j] for i in 0:3 for j in 0:5 ])">i</m:csymbol>
              </m:apply>
              <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:16:105&#9;    assert ArrayEq(all_bar_largest_indexed, [ if i == 2 &amp;&amp; j == 4 then -1 else input[i][j] for i in 0:3 for j in 0:5 ])">
                <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
                <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:16:114&#9;    assert ArrayEq(all_bar_largest_indexed, [ if i == 2 &amp;&amp; j == 4 then -1 else input[i][j] for i in 0:3 for j in 0:5 ])">0</m:cn>
                <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:16:105&#9;    assert ArrayEq(all_bar_largest_indexed, [ if i == 2 &amp;&amp; j == 4 then -1 else input[i][j] for i in 0:3 for j in 0:5 ])">1</m:cn>
                <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:16:116&#9;    assert ArrayEq(all_bar_largest_indexed, [ if i == 2 &amp;&amp; j == 4 then -1 else input[i][j] for i in 0:3 for j in 0:5 ])">5</m:cn>
                <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/string" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:16:105&#9;    assert ArrayEq(all_bar_largest_indexed, [ if i == 2 &amp;&amp; j == 4 then -1 else input[i][j] for i in 0:3 for j in 0:5 ])">j</m:csymbol>
              </m:apply>
            </m:domainofapplication>
            <m:piecewise proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:16:47&#9;    assert ArrayEq(all_bar_largest_indexed, [ if i == 2 &amp;&amp; j == 4 then -1 else input[i][j] for i in 0:3 for j in 0:5 ])">
              <m:piece>
                <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:16:72&#9;    assert ArrayEq(all_bar_largest_indexed, [ if i == 2 &amp;&amp; j == 4 then -1 else input[i][j] for i in 0:3 for j in 0:5 ])">
                  <m:minus/>
                  <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:16:73&#9;    assert ArrayEq(all_bar_largest_indexed, [ if i == 2 &amp;&amp; j == 4 then -1 else input[i][j] for i in 0:3 for j in 0:5 ])">1</m:cn>
                </m:apply>
                <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:16:50&#9;    assert ArrayEq(all_bar_largest_indexed, [ if i == 2 &amp;&amp; j == 4 then -1 else input[i][j] for i in 0:3 for j in 0:5 ])">
                  <m:and/>
                  <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:16:50&#9;    assert ArrayEq(all_bar_largest_indexed, [ if i == 2 &amp;&amp; j == 4 then -1 else input[i][j] for i in 0:3 for j in 0:5 ])">
                    <m:eq/>
                    <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:16:50&#9;    assert ArrayEq(all_bar_largest_indexed, [ if i == 2 &amp;&amp; j == 4 then -1 else input[i][j] for i in 0:3 for j in 0:5 ])">i</m:ci>
                    <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:16:55&#9;    assert ArrayEq(all_bar_largest_indexed, [ if i == 2 &amp;&amp; j == 4 then -1 else input[i][j] for i in 0:3 for j in 0:5 ])">2</m:cn>
                  </m:apply>
                  <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:16:60&#9;    assert ArrayEq(all_bar_largest_indexed, [ if i == 2 &amp;&amp; j == 4 then -1 else input[i][j] for i in 0:3 for j in 0:5 ])">
                    <m:eq/>
                    <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:16:60&#9;    assert ArrayEq(all_bar_largest_indexed, [ if i == 2 &amp;&amp; j == 4 then -1 else input[i][j] for i in 0:3 for j in 0:5 ])">j</m:ci>
                    <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:16:65&#9;    assert ArrayEq(all_bar_largest_indexed, [ if i == 2 &amp;&amp; j == 4 then -1 else input[i][j] for i in 0:3 for j in 0:5 ])">4</m:cn>
                  </m:apply>
                </m:apply>
              </m:piece>
              <m:otherwise>
                <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:16:80&#9;    assert ArrayEq(all_bar_largest_indexed, [ if i == 2 &amp;&amp; j == 4 then -1 else input[i][j] for i in 0:3 for j in 0:5 ])">
                  <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/view" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:16:80&#9;    assert ArrayEq(all_bar_largest_indexed, [ if i == 2 &amp;&amp; j == 4 then -1 else input[i][j] for i in 0:3 for j in 0:5 ])"/>
                  <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:16:80&#9;    assert ArrayEq(all_bar_largest_indexed, [ if i == 2 &amp;&amp; j == 4 then -1 else input[i][j] for i in 0:3 for j in 0:5 ])">input</m:ci>
                  <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:16:80&#9;    assert ArrayEq(all_bar_largest_indexed, [ if i == 2 &amp;&amp; j == 4 then -1 else input[i][j] for i in 0:3 for j in 0:5 ])">
                    <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
                    <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:16:80&#9;    assert ArrayEq(all_bar_largest_indexed, [ if i == 2 &amp;&amp; j == 4 then -1 else input[i][j] for i in 0:3 for j in 0:5 ])">0</m:cn>
                    <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:16:86&#9;    assert ArrayEq(all_bar_largest_indexed, [ if i == 2 &amp;&amp; j == 4 then -1 else input[i][j] for i in 0:3 for j in 0:5 ])">i</m:ci>
                    <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:16:80&#9;    assert ArrayEq(all_bar_largest_indexed, [ if i == 2 &amp;&amp; j == 4 then -1 else input[i][j] for i in 0:3 for j in 0:5 ])">0</m:cn>
                    <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:16:86&#9;    assert ArrayEq(all_bar_largest_indexed, [ if i == 2 &amp;&amp; j == 4 then -1 else input[i][j] for i in 0:3 for j in 0:5 ])">i</m:ci>
                  </m:apply>
                  <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:16:80&#9;    assert ArrayEq(all_bar_largest_indexed, [ if i == 2 &amp;&amp; j == 4 then -1 else input[i][j] for i in 0:3 for j in 0:5 ])">
                    <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
                    <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:16:80&#9;    assert ArrayEq(all_bar_largest_indexed, [ if i == 2 &amp;&amp; j == 4 then -1 else input[i][j] for i in 0:3 for j in 0:5 ])">1</m:cn>
                    <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:16:89&#9;    assert ArrayEq(all_bar_largest_indexed, [ if i == 2 &amp;&amp; j == 4 then -1 else input[i][j] for i in 0:3 for j in 0:5 ])">j</m:ci>
                    <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:16:80&#9;    assert ArrayEq(all_bar_largest_indexed, [ if i == 2 &amp;&amp; j == 4 then -1 else input[i][j] for i in 0:3 for j in 0:5 ])">0</m:cn>
                    <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:16:89&#9;    assert ArrayEq(all_bar_largest_indexed, [ if i == 2 &amp;&amp; j == 4 then -1 else input[i][j] for i in 0:3 for j in 0:5 ])">j</m:ci>
                  </m:apply>
                  <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:16:80&#9;    assert ArrayEq(all_bar_largest_indexed, [ if i == 2 &amp;&amp; j == 4 then -1 else input[i][j] for i in 0:3 for j in 0:5 ])">
                    <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
                    <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:16:80&#9;    assert ArrayEq(all_bar_largest_indexed, [ if i == 2 &amp;&amp; j == 4 then -1 else input[i][j] for i in 0:3 for j in 0:5 ])"/>
                    <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:16:80&#9;    assert ArrayEq(all_bar_largest_indexed, [ if i == 2 &amp;&amp; j == 4 then -1 else input[i][j] for i in 0:3 for j in 0:5 ])"/>
                    <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:16:80&#9;    assert ArrayEq(all_bar_largest_indexed, [ if i == 2 &amp;&amp; j == 4 then -1 else input[i][j] for i in 0:3 for j in 0:5 ])">1</m:cn>
                    <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:16:80&#9;    assert ArrayEq(all_bar_largest_indexed, [ if i == 2 &amp;&amp; j == 4 then -1 else input[i][j] for i in 0:3 for j in 0:5 ])"/>
                  </m:apply>
                </m:apply>
              </m:otherwise>
            </m:piecewise>
          </m:apply>
        </m:apply>
      </m:apply>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:19:5&#9;    all_entries = map(lambda x: x &lt; input_max + 1, input)">
        <m:eq/>
        <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:19:5&#9;    all_entries = map(lambda x: x &lt; input_max + 1, input)">all_entries</m:ci>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:19:19&#9;    all_entries = map(lambda x: x &lt; input_max + 1, input)">
          <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/map" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:19:19&#9;    all_entries = map(lambda x: x &lt; input_max + 1, input)"/>
          <m:lambda proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:19:23&#9;    all_entries = map(lambda x: x &lt; input_max + 1, input)">
            <m:bvar>
              <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:19:30&#9;    all_entries = map(lambda x: x &lt; input_max + 1, input)">x</m:ci>
            </m:bvar>
            <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:19:33&#9;    all_entries = map(lambda x: x &lt; input_max + 1, input)">
              <m:lt/>
              <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:19:33&#9;    all_entries = map(lambda x: x &lt; input_max + 1, input)">x</m:ci>
              <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:19:37&#9;    all_entries = map(lambda x: x &lt; input_max + 1, input)">
                <m:plus/>
                <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:19:37&#9;    all_entries = map(lambda x: x &lt; input_max + 1, input)">input_max</m:ci>
                <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:19:49&#9;    all_entries = map(lambda x: x &lt; input_max + 1, input)">1</m:cn>
              </m:apply>
            </m:apply>
          </m:lambda>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:19:52&#9;    all_entries = map(lambda x: x &lt; input_max + 1, input)">input</m:ci>
        </m:apply>
      </m:apply>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:20:5&#9;    all_entries_idxs = find(all_entries)">
        <m:eq/>
        <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:20:5&#9;    all_entries_idxs = find(all_entries)">all_entries_idxs</m:ci>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:20:24&#9;    all_entries_idxs = find(all_entries)">
          <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/find" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:20:24&#9;    all_entries_idxs = find(all_entries)"/>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:20:29&#9;    all_entries_idxs = find(all_entries)">all_entries</m:ci>
        </m:apply>
      </m:apply>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:21:5&#9;    all_entries_indexed = input{all_entries_idxs}">
        <m:eq/>
        <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:21:5&#9;    all_entries_indexed = input{all_entries_idxs}">all_entries_indexed</m:ci>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:21:27&#9;    all_entries_indexed = input{all_entries_idxs}">
          <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/index" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:21:27&#9;    all_entries_indexed = input{all_entries_idxs}"/>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:21:27&#9;    all_entries_indexed = input{all_entries_idxs}">input</m:ci>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:21:33&#9;    all_entries_indexed = input{all_entries_idxs}">all_entries_idxs</m:ci>
          <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/defaultParameter" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:21:27&#9;    all_entries_indexed = input{all_entries_idxs}"/>
          <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/defaultParameter" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:21:27&#9;    all_entries_indexed = input{all_entries_idxs}"/>
        </m:apply>
      </m:apply>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:22:5&#9;    assert ArrayEq(all_entries_indexed, input)">
        <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:22:5&#9;    assert ArrayEq(all_entries_indexed, input)"/>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:22:12&#9;    assert ArrayEq(all_entries_indexed, input)">
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:22:12&#9;    assert ArrayEq(all_entries_indexed, input)">ArrayEq</m:ci>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:22:20&#9;    assert ArrayEq(all_entries_indexed, input)">all_entries_indexed</m:ci>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:22:41&#9;    assert ArrayEq(all_entries_indexed, input)">input</m:ci>
        </m:apply>
      </m:apply>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:25:5&#9;    odd_entries = map(lambda x: MathML:rem(x, 2), input)">
        <m:eq/>
        <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:25:5&#9;    odd_entries = map(lambda x: MathML:rem(x, 2), input)">odd_entries</m:ci>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:25:19&#9;    odd_entries = map(lambda x: MathML:rem(x, 2), input)">
          <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/map" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:25:19&#9;    odd_entries = map(lambda x: MathML:rem(x, 2), input)"/>
          <m:lambda proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:25:23&#9;    odd_entries = map(lambda x: MathML:rem(x, 2), input)">
            <m:bvar>
              <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:25:30&#9;    odd_entries = map(lambda x: MathML:rem(x, 2), input)">x</m:ci>
            </m:bvar>
            <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:25:33&#9;    odd_entries = map(lambda x: MathML:rem(x, 2), input)">
              <m:rem/>
              <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:25:44&#9;    odd_entries = map(lambda x: MathML:rem(x, 2), input)">x</m:ci>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:25:47&#9;    odd_entries = map(lambda x: MathML:rem(x, 2), input)">2</m:cn>
            </m:apply>
          </m:lambda>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:25:51&#9;    odd_entries = map(lambda x: MathML:rem(x, 2), input)">input</m:ci>
        </m:apply>
      </m:apply>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:26:5&#9;    odd_indices = find(odd_entries)">
        <m:eq/>
        <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:26:5&#9;    odd_indices = find(odd_entries)">odd_indices</m:ci>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:26:19&#9;    odd_indices = find(odd_entries)">
          <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/find" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:26:19&#9;    odd_indices = find(odd_entries)"/>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:26:24&#9;    odd_indices = find(odd_entries)">odd_entries</m:ci>
        </m:apply>
      </m:apply>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:27:5&#9;    assert odd_entries[0][0] == 0">
        <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:27:5&#9;    assert odd_entries[0][0] == 0"/>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:27:12&#9;    assert odd_entries[0][0] == 0">
          <m:eq/>
          <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:27:12&#9;    assert odd_entries[0][0] == 0">
            <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/view" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:27:12&#9;    assert odd_entries[0][0] == 0"/>
            <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:27:12&#9;    assert odd_entries[0][0] == 0">odd_entries</m:ci>
            <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:27:12&#9;    assert odd_entries[0][0] == 0">
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:27:12&#9;    assert odd_entries[0][0] == 0">0</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:27:24&#9;    assert odd_entries[0][0] == 0">0</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:27:12&#9;    assert odd_entries[0][0] == 0">0</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:27:24&#9;    assert odd_entries[0][0] == 0">0</m:cn>
            </m:apply>
            <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:27:12&#9;    assert odd_entries[0][0] == 0">
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:27:12&#9;    assert odd_entries[0][0] == 0">1</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:27:27&#9;    assert odd_entries[0][0] == 0">0</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:27:12&#9;    assert odd_entries[0][0] == 0">0</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:27:27&#9;    assert odd_entries[0][0] == 0">0</m:cn>
            </m:apply>
            <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:27:12&#9;    assert odd_entries[0][0] == 0">
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:27:12&#9;    assert odd_entries[0][0] == 0"/>
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:27:12&#9;    assert odd_entries[0][0] == 0"/>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:27:12&#9;    assert odd_entries[0][0] == 0">1</m:cn>
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:27:12&#9;    assert odd_entries[0][0] == 0"/>
            </m:apply>
          </m:apply>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:27:33&#9;    assert odd_entries[0][0] == 0">0</m:cn>
        </m:apply>
      </m:apply>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:28:5&#9;    assert odd_entries[0][1] == 1">
        <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:28:5&#9;    assert odd_entries[0][1] == 1"/>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:28:12&#9;    assert odd_entries[0][1] == 1">
          <m:eq/>
          <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:28:12&#9;    assert odd_entries[0][1] == 1">
            <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/view" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:28:12&#9;    assert odd_entries[0][1] == 1"/>
            <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:28:12&#9;    assert odd_entries[0][1] == 1">odd_entries</m:ci>
            <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:28:12&#9;    assert odd_entries[0][1] == 1">
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:28:12&#9;    assert odd_entries[0][1] == 1">0</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:28:24&#9;    assert odd_entries[0][1] == 1">0</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:28:12&#9;    assert odd_entries[0][1] == 1">0</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:28:24&#9;    assert odd_entries[0][1] == 1">0</m:cn>
            </m:apply>
            <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:28:12&#9;    assert odd_entries[0][1] == 1">
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:28:12&#9;    assert odd_entries[0][1] == 1">1</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:28:27&#9;    assert odd_entries[0][1] == 1">1</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:28:12&#9;    assert odd_entries[0][1] == 1">0</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:28:27&#9;    assert odd_entries[0][1] == 1">1</m:cn>
            </m:apply>
            <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:28:12&#9;    assert odd_entries[0][1] == 1">
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:28:12&#9;    assert odd_entries[0][1] == 1"/>
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:28:12&#9;    assert odd_entries[0][1] == 1"/>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:28:12&#9;    assert odd_entries[0][1] == 1">1</m:cn>
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:28:12&#9;    assert odd_entries[0][1] == 1"/>
            </m:apply>
          </m:apply>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:28:33&#9;    assert odd_entries[0][1] == 1">1</m:cn>
        </m:apply>
      </m:apply>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:29:5&#9;    assert odd_entries[0][2] == 0">
        <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:29:5&#9;    assert odd_entries[0][2] == 0"/>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:29:12&#9;    assert odd_entries[0][2] == 0">
          <m:eq/>
          <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:29:12&#9;    assert odd_entries[0][2] == 0">
            <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/view" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:29:12&#9;    assert odd_entries[0][2] == 0"/>
            <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:29:12&#9;    assert odd_entries[0][2] == 0">odd_entries</m:ci>
            <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:29:12&#9;    assert odd_entries[0][2] == 0">
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:29:12&#9;    assert odd_entries[0][2] == 0">0</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:29:24&#9;    assert odd_entries[0][2] == 0">0</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:29:12&#9;    assert odd_entries[0][2] == 0">0</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:29:24&#9;    assert odd_entries[0][2] == 0">0</m:cn>
            </m:apply>
            <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:29:12&#9;    assert odd_entries[0][2] == 0">
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:29:12&#9;    assert odd_entries[0][2] == 0">1</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:29:27&#9;    assert odd_entries[0][2] == 0">2</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:29:12&#9;    assert odd_entries[0][2] == 0">0</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:29:27&#9;    assert odd_entries[0][2] == 0">2</m:cn>
            </m:apply>
            <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:29:12&#9;    assert odd_entries[0][2] == 0">
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:29:12&#9;    assert odd_entries[0][2] == 0"/>
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:29:12&#9;    assert odd_entries[0][2] == 0"/>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:29:12&#9;    assert odd_entries[0][2] == 0">1</m:cn>
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:29:12&#9;    assert odd_entries[0][2] == 0"/>
            </m:apply>
          </m:apply>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:29:33&#9;    assert odd_entries[0][2] == 0">0</m:cn>
        </m:apply>
      </m:apply>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:30:5&#9;    assert odd_indices.NUM_DIMS == 2">
        <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:30:5&#9;    assert odd_indices.NUM_DIMS == 2"/>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:30:12&#9;    assert odd_indices.NUM_DIMS == 2">
          <m:eq/>
          <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:30:12&#9;    assert odd_indices.NUM_DIMS == 2">
            <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/accessor" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:30:12&#9;    assert odd_indices.NUM_DIMS == 2">NUM_DIMS</m:csymbol>
            <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:30:12&#9;    assert odd_indices.NUM_DIMS == 2">odd_indices</m:ci>
          </m:apply>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:30:36&#9;    assert odd_indices.NUM_DIMS == 2">2</m:cn>
        </m:apply>
      </m:apply>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:31:5&#9;    assert odd_indices.SHAPE[0] == 7">
        <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:31:5&#9;    assert odd_indices.SHAPE[0] == 7"/>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:31:12&#9;    assert odd_indices.SHAPE[0] == 7">
          <m:eq/>
          <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:31:12&#9;    assert odd_indices.SHAPE[0] == 7">
            <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/view" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:31:12&#9;    assert odd_indices.SHAPE[0] == 7"/>
            <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:31:12&#9;    assert odd_indices.SHAPE[0] == 7">
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/accessor" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:31:12&#9;    assert odd_indices.SHAPE[0] == 7">SHAPE</m:csymbol>
              <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:31:12&#9;    assert odd_indices.SHAPE[0] == 7">odd_indices</m:ci>
            </m:apply>
            <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:31:12&#9;    assert odd_indices.SHAPE[0] == 7">
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:31:12&#9;    assert odd_indices.SHAPE[0] == 7">0</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:31:30&#9;    assert odd_indices.SHAPE[0] == 7">0</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:31:12&#9;    assert odd_indices.SHAPE[0] == 7">0</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:31:30&#9;    assert odd_indices.SHAPE[0] == 7">0</m:cn>
            </m:apply>
            <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:31:12&#9;    assert odd_indices.SHAPE[0] == 7">
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:31:12&#9;    assert odd_indices.SHAPE[0] == 7"/>
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:31:12&#9;    assert odd_indices.SHAPE[0] == 7"/>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:31:12&#9;    assert odd_indices.SHAPE[0] == 7">1</m:cn>
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:31:12&#9;    assert odd_indices.SHAPE[0] == 7"/>
            </m:apply>
          </m:apply>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:31:36&#9;    assert odd_indices.SHAPE[0] == 7">7</m:cn>
        </m:apply>
      </m:apply>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:32:5&#9;    assert odd_indices.SHAPE[1] == 2">
        <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:32:5&#9;    assert odd_indices.SHAPE[1] == 2"/>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:32:12&#9;    assert odd_indices.SHAPE[1] == 2">
          <m:eq/>
          <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:32:12&#9;    assert odd_indices.SHAPE[1] == 2">
            <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/view" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:32:12&#9;    assert odd_indices.SHAPE[1] == 2"/>
            <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:32:12&#9;    assert odd_indices.SHAPE[1] == 2">
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/accessor" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:32:12&#9;    assert odd_indices.SHAPE[1] == 2">SHAPE</m:csymbol>
              <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:32:12&#9;    assert odd_indices.SHAPE[1] == 2">odd_indices</m:ci>
            </m:apply>
            <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:32:12&#9;    assert odd_indices.SHAPE[1] == 2">
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:32:12&#9;    assert odd_indices.SHAPE[1] == 2">0</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:32:30&#9;    assert odd_indices.SHAPE[1] == 2">1</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:32:12&#9;    assert odd_indices.SHAPE[1] == 2">0</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:32:30&#9;    assert odd_indices.SHAPE[1] == 2">1</m:cn>
            </m:apply>
            <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:32:12&#9;    assert odd_indices.SHAPE[1] == 2">
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:32:12&#9;    assert odd_indices.SHAPE[1] == 2"/>
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:32:12&#9;    assert odd_indices.SHAPE[1] == 2"/>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:32:12&#9;    assert odd_indices.SHAPE[1] == 2">1</m:cn>
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:32:12&#9;    assert odd_indices.SHAPE[1] == 2"/>
            </m:apply>
          </m:apply>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:32:36&#9;    assert odd_indices.SHAPE[1] == 2">2</m:cn>
        </m:apply>
      </m:apply>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:33:5&#9;    assert odd_indices[0][0] == 0">
        <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:33:5&#9;    assert odd_indices[0][0] == 0"/>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:33:12&#9;    assert odd_indices[0][0] == 0">
          <m:eq/>
          <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:33:12&#9;    assert odd_indices[0][0] == 0">
            <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/view" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:33:12&#9;    assert odd_indices[0][0] == 0"/>
            <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:33:12&#9;    assert odd_indices[0][0] == 0">odd_indices</m:ci>
            <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:33:12&#9;    assert odd_indices[0][0] == 0">
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:33:12&#9;    assert odd_indices[0][0] == 0">0</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:33:24&#9;    assert odd_indices[0][0] == 0">0</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:33:12&#9;    assert odd_indices[0][0] == 0">0</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:33:24&#9;    assert odd_indices[0][0] == 0">0</m:cn>
            </m:apply>
            <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:33:12&#9;    assert odd_indices[0][0] == 0">
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:33:12&#9;    assert odd_indices[0][0] == 0">1</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:33:27&#9;    assert odd_indices[0][0] == 0">0</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:33:12&#9;    assert odd_indices[0][0] == 0">0</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:33:27&#9;    assert odd_indices[0][0] == 0">0</m:cn>
            </m:apply>
            <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:33:12&#9;    assert odd_indices[0][0] == 0">
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:33:12&#9;    assert odd_indices[0][0] == 0"/>
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:33:12&#9;    assert odd_indices[0][0] == 0"/>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:33:12&#9;    assert odd_indices[0][0] == 0">1</m:cn>
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:33:12&#9;    assert odd_indices[0][0] == 0"/>
            </m:apply>
          </m:apply>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:33:33&#9;    assert odd_indices[0][0] == 0">0</m:cn>
        </m:apply>
      </m:apply>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:34:5&#9;    assert odd_indices[0][1] == 1 # [0,1] is odd">
        <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:34:5&#9;    assert odd_indices[0][1] == 1 # [0,1] is odd"/>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:34:12&#9;    assert odd_indices[0][1] == 1 # [0,1] is odd">
          <m:eq/>
          <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:34:12&#9;    assert odd_indices[0][1] == 1 # [0,1] is odd">
            <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/view" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:34:12&#9;    assert odd_indices[0][1] == 1 # [0,1] is odd"/>
            <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:34:12&#9;    assert odd_indices[0][1] == 1 # [0,1] is odd">odd_indices</m:ci>
            <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:34:12&#9;    assert odd_indices[0][1] == 1 # [0,1] is odd">
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:34:12&#9;    assert odd_indices[0][1] == 1 # [0,1] is odd">0</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:34:24&#9;    assert odd_indices[0][1] == 1 # [0,1] is odd">0</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:34:12&#9;    assert odd_indices[0][1] == 1 # [0,1] is odd">0</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:34:24&#9;    assert odd_indices[0][1] == 1 # [0,1] is odd">0</m:cn>
            </m:apply>
            <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:34:12&#9;    assert odd_indices[0][1] == 1 # [0,1] is odd">
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:34:12&#9;    assert odd_indices[0][1] == 1 # [0,1] is odd">1</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:34:27&#9;    assert odd_indices[0][1] == 1 # [0,1] is odd">1</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:34:12&#9;    assert odd_indices[0][1] == 1 # [0,1] is odd">0</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:34:27&#9;    assert odd_indices[0][1] == 1 # [0,1] is odd">1</m:cn>
            </m:apply>
            <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:34:12&#9;    assert odd_indices[0][1] == 1 # [0,1] is odd">
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:34:12&#9;    assert odd_indices[0][1] == 1 # [0,1] is odd"/>
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:34:12&#9;    assert odd_indices[0][1] == 1 # [0,1] is odd"/>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:34:12&#9;    assert odd_indices[0][1] == 1 # [0,1] is odd">1</m:cn>
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:34:12&#9;    assert odd_indices[0][1] == 1 # [0,1] is odd"/>
            </m:apply>
          </m:apply>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:34:33&#9;    assert odd_indices[0][1] == 1 # [0,1] is odd">1</m:cn>
        </m:apply>
      </m:apply>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:35:5&#9;    assert odd_indices[1][0] == 0">
        <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:35:5&#9;    assert odd_indices[1][0] == 0"/>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:35:12&#9;    assert odd_indices[1][0] == 0">
          <m:eq/>
          <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:35:12&#9;    assert odd_indices[1][0] == 0">
            <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/view" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:35:12&#9;    assert odd_indices[1][0] == 0"/>
            <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:35:12&#9;    assert odd_indices[1][0] == 0">odd_indices</m:ci>
            <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:35:12&#9;    assert odd_indices[1][0] == 0">
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:35:12&#9;    assert odd_indices[1][0] == 0">0</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:35:24&#9;    assert odd_indices[1][0] == 0">1</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:35:12&#9;    assert odd_indices[1][0] == 0">0</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:35:24&#9;    assert odd_indices[1][0] == 0">1</m:cn>
            </m:apply>
            <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:35:12&#9;    assert odd_indices[1][0] == 0">
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:35:12&#9;    assert odd_indices[1][0] == 0">1</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:35:27&#9;    assert odd_indices[1][0] == 0">0</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:35:12&#9;    assert odd_indices[1][0] == 0">0</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:35:27&#9;    assert odd_indices[1][0] == 0">0</m:cn>
            </m:apply>
            <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:35:12&#9;    assert odd_indices[1][0] == 0">
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:35:12&#9;    assert odd_indices[1][0] == 0"/>
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:35:12&#9;    assert odd_indices[1][0] == 0"/>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:35:12&#9;    assert odd_indices[1][0] == 0">1</m:cn>
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:35:12&#9;    assert odd_indices[1][0] == 0"/>
            </m:apply>
          </m:apply>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:35:33&#9;    assert odd_indices[1][0] == 0">0</m:cn>
        </m:apply>
      </m:apply>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:36:5&#9;    assert odd_indices[1][1] == 3 # [0,3] is odd">
        <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:36:5&#9;    assert odd_indices[1][1] == 3 # [0,3] is odd"/>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:36:12&#9;    assert odd_indices[1][1] == 3 # [0,3] is odd">
          <m:eq/>
          <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:36:12&#9;    assert odd_indices[1][1] == 3 # [0,3] is odd">
            <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/view" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:36:12&#9;    assert odd_indices[1][1] == 3 # [0,3] is odd"/>
            <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:36:12&#9;    assert odd_indices[1][1] == 3 # [0,3] is odd">odd_indices</m:ci>
            <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:36:12&#9;    assert odd_indices[1][1] == 3 # [0,3] is odd">
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:36:12&#9;    assert odd_indices[1][1] == 3 # [0,3] is odd">0</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:36:24&#9;    assert odd_indices[1][1] == 3 # [0,3] is odd">1</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:36:12&#9;    assert odd_indices[1][1] == 3 # [0,3] is odd">0</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:36:24&#9;    assert odd_indices[1][1] == 3 # [0,3] is odd">1</m:cn>
            </m:apply>
            <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:36:12&#9;    assert odd_indices[1][1] == 3 # [0,3] is odd">
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:36:12&#9;    assert odd_indices[1][1] == 3 # [0,3] is odd">1</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:36:27&#9;    assert odd_indices[1][1] == 3 # [0,3] is odd">1</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:36:12&#9;    assert odd_indices[1][1] == 3 # [0,3] is odd">0</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:36:27&#9;    assert odd_indices[1][1] == 3 # [0,3] is odd">1</m:cn>
            </m:apply>
            <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:36:12&#9;    assert odd_indices[1][1] == 3 # [0,3] is odd">
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:36:12&#9;    assert odd_indices[1][1] == 3 # [0,3] is odd"/>
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:36:12&#9;    assert odd_indices[1][1] == 3 # [0,3] is odd"/>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:36:12&#9;    assert odd_indices[1][1] == 3 # [0,3] is odd">1</m:cn>
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:36:12&#9;    assert odd_indices[1][1] == 3 # [0,3] is odd"/>
            </m:apply>
          </m:apply>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:36:33&#9;    assert odd_indices[1][1] == 3 # [0,3] is odd">3</m:cn>
        </m:apply>
      </m:apply>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:38:5&#9;    shrink_right = input{odd_indices, 1, shrink:1}">
        <m:eq/>
        <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:38:5&#9;    shrink_right = input{odd_indices, 1, shrink:1}">shrink_right</m:ci>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:38:20&#9;    shrink_right = input{odd_indices, 1, shrink:1}">
          <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/index" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:38:20&#9;    shrink_right = input{odd_indices, 1, shrink:1}"/>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:38:20&#9;    shrink_right = input{odd_indices, 1, shrink:1}">input</m:ci>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:38:26&#9;    shrink_right = input{odd_indices, 1, shrink:1}">odd_indices</m:ci>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:38:39&#9;    shrink_right = input{odd_indices, 1, shrink:1}">1</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:38:49&#9;    shrink_right = input{odd_indices, 1, shrink:1}">1</m:cn>
        </m:apply>
      </m:apply>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:39:5&#9;    shrink_left = input{odd_indices, 1, shrink:-1}">
        <m:eq/>
        <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:39:5&#9;    shrink_left = input{odd_indices, 1, shrink:-1}">shrink_left</m:ci>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:39:19&#9;    shrink_left = input{odd_indices, 1, shrink:-1}">
          <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/index" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:39:19&#9;    shrink_left = input{odd_indices, 1, shrink:-1}"/>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:39:19&#9;    shrink_left = input{odd_indices, 1, shrink:-1}">input</m:ci>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:39:25&#9;    shrink_left = input{odd_indices, 1, shrink:-1}">odd_indices</m:ci>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:39:38&#9;    shrink_left = input{odd_indices, 1, shrink:-1}">1</m:cn>
          <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:39:48&#9;    shrink_left = input{odd_indices, 1, shrink:-1}">
            <m:minus/>
            <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:39:49&#9;    shrink_left = input{odd_indices, 1, shrink:-1}">1</m:cn>
          </m:apply>
        </m:apply>
      </m:apply>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:40:5&#9;    assert ArrayEq(shrink_right.SHAPE, [3, 2])">
        <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:40:5&#9;    assert ArrayEq(shrink_right.SHAPE, [3, 2])"/>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:40:12&#9;    assert ArrayEq(shrink_right.SHAPE, [3, 2])">
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:40:12&#9;    assert ArrayEq(shrink_right.SHAPE, [3, 2])">ArrayEq</m:ci>
          <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:40:20&#9;    assert ArrayEq(shrink_right.SHAPE, [3, 2])">
            <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/accessor" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:40:20&#9;    assert ArrayEq(shrink_right.SHAPE, [3, 2])">SHAPE</m:csymbol>
            <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:40:20&#9;    assert ArrayEq(shrink_right.SHAPE, [3, 2])">shrink_right</m:ci>
          </m:apply>
          <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:40:40&#9;    assert ArrayEq(shrink_right.SHAPE, [3, 2])">
            <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
            <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:40:41&#9;    assert ArrayEq(shrink_right.SHAPE, [3, 2])">3</m:cn>
            <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:40:44&#9;    assert ArrayEq(shrink_right.SHAPE, [3, 2])">2</m:cn>
          </m:apply>
        </m:apply>
      </m:apply>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:41:5&#9;    assert ArrayEq(shrink_left.SHAPE, [3, 2])">
        <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:41:5&#9;    assert ArrayEq(shrink_left.SHAPE, [3, 2])"/>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:41:12&#9;    assert ArrayEq(shrink_left.SHAPE, [3, 2])">
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:41:12&#9;    assert ArrayEq(shrink_left.SHAPE, [3, 2])">ArrayEq</m:ci>
          <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:41:20&#9;    assert ArrayEq(shrink_left.SHAPE, [3, 2])">
            <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/accessor" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:41:20&#9;    assert ArrayEq(shrink_left.SHAPE, [3, 2])">SHAPE</m:csymbol>
            <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:41:20&#9;    assert ArrayEq(shrink_left.SHAPE, [3, 2])">shrink_left</m:ci>
          </m:apply>
          <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:41:39&#9;    assert ArrayEq(shrink_left.SHAPE, [3, 2])">
            <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
            <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:41:40&#9;    assert ArrayEq(shrink_left.SHAPE, [3, 2])">3</m:cn>
            <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:41:43&#9;    assert ArrayEq(shrink_left.SHAPE, [3, 2])">2</m:cn>
          </m:apply>
        </m:apply>
      </m:apply>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:42:5&#9;    assert ArrayEq(shrink_right, [[1, 3], [5, 7], [11, 13]])">
        <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:42:5&#9;    assert ArrayEq(shrink_right, [[1, 3], [5, 7], [11, 13]])"/>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:42:12&#9;    assert ArrayEq(shrink_right, [[1, 3], [5, 7], [11, 13]])">
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:42:12&#9;    assert ArrayEq(shrink_right, [[1, 3], [5, 7], [11, 13]])">ArrayEq</m:ci>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:42:20&#9;    assert ArrayEq(shrink_right, [[1, 3], [5, 7], [11, 13]])">shrink_right</m:ci>
          <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:42:34&#9;    assert ArrayEq(shrink_right, [[1, 3], [5, 7], [11, 13]])">
            <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
            <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:42:35&#9;    assert ArrayEq(shrink_right, [[1, 3], [5, 7], [11, 13]])">
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:42:36&#9;    assert ArrayEq(shrink_right, [[1, 3], [5, 7], [11, 13]])">1</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:42:39&#9;    assert ArrayEq(shrink_right, [[1, 3], [5, 7], [11, 13]])">3</m:cn>
            </m:apply>
            <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:42:43&#9;    assert ArrayEq(shrink_right, [[1, 3], [5, 7], [11, 13]])">
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:42:44&#9;    assert ArrayEq(shrink_right, [[1, 3], [5, 7], [11, 13]])">5</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:42:47&#9;    assert ArrayEq(shrink_right, [[1, 3], [5, 7], [11, 13]])">7</m:cn>
            </m:apply>
            <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:42:51&#9;    assert ArrayEq(shrink_right, [[1, 3], [5, 7], [11, 13]])">
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:42:52&#9;    assert ArrayEq(shrink_right, [[1, 3], [5, 7], [11, 13]])">11</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:42:56&#9;    assert ArrayEq(shrink_right, [[1, 3], [5, 7], [11, 13]])">13</m:cn>
            </m:apply>
          </m:apply>
        </m:apply>
      </m:apply>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:43:5&#9;    assert ArrayEq(shrink_left, [[1, 3], [7, 9], [11, 13]])">
        <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:43:5&#9;    assert ArrayEq(shrink_left, [[1, 3], [7, 9], [11, 13]])"/>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:43:12&#9;    assert ArrayEq(shrink_left, [[1, 3], [7, 9], [11, 13]])">
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:43:12&#9;    assert ArrayEq(shrink_left, [[1, 3], [7, 9], [11, 13]])">ArrayEq</m:ci>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:43:20&#9;    assert ArrayEq(shrink_left, [[1, 3], [7, 9], [11, 13]])">shrink_left</m:ci>
          <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:43:33&#9;    assert ArrayEq(shrink_left, [[1, 3], [7, 9], [11, 13]])">
            <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
            <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:43:34&#9;    assert ArrayEq(shrink_left, [[1, 3], [7, 9], [11, 13]])">
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:43:35&#9;    assert ArrayEq(shrink_left, [[1, 3], [7, 9], [11, 13]])">1</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:43:38&#9;    assert ArrayEq(shrink_left, [[1, 3], [7, 9], [11, 13]])">3</m:cn>
            </m:apply>
            <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:43:42&#9;    assert ArrayEq(shrink_left, [[1, 3], [7, 9], [11, 13]])">
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:43:43&#9;    assert ArrayEq(shrink_left, [[1, 3], [7, 9], [11, 13]])">7</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:43:46&#9;    assert ArrayEq(shrink_left, [[1, 3], [7, 9], [11, 13]])">9</m:cn>
            </m:apply>
            <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:43:50&#9;    assert ArrayEq(shrink_left, [[1, 3], [7, 9], [11, 13]])">
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:43:51&#9;    assert ArrayEq(shrink_left, [[1, 3], [7, 9], [11, 13]])">11</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:43:55&#9;    assert ArrayEq(shrink_left, [[1, 3], [7, 9], [11, 13]])">13</m:cn>
            </m:apply>
          </m:apply>
        </m:apply>
      </m:apply>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:46:5&#9;    reg_indices = [ [i/2, [1,3,0,2,1,3][i]] for i in 0:6 ]">
        <m:eq/>
        <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:46:5&#9;    reg_indices = [ [i/2, [1,3,0,2,1,3][i]] for i in 0:6 ]">reg_indices</m:ci>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:46:19&#9;    reg_indices = [ [i/2, [1,3,0,2,1,3][i]] for i in 0:6 ]">
          <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
          <m:domainofapplication>
            <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:46:45&#9;    reg_indices = [ [i/2, [1,3,0,2,1,3][i]] for i in 0:6 ]">
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:46:54&#9;    reg_indices = [ [i/2, [1,3,0,2,1,3][i]] for i in 0:6 ]">0</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:46:45&#9;    reg_indices = [ [i/2, [1,3,0,2,1,3][i]] for i in 0:6 ]">1</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:46:56&#9;    reg_indices = [ [i/2, [1,3,0,2,1,3][i]] for i in 0:6 ]">6</m:cn>
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/string" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:46:45&#9;    reg_indices = [ [i/2, [1,3,0,2,1,3][i]] for i in 0:6 ]">i</m:csymbol>
            </m:apply>
          </m:domainofapplication>
          <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:46:21&#9;    reg_indices = [ [i/2, [1,3,0,2,1,3][i]] for i in 0:6 ]">
            <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
            <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:46:22&#9;    reg_indices = [ [i/2, [1,3,0,2,1,3][i]] for i in 0:6 ]">
              <m:divide/>
              <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:46:22&#9;    reg_indices = [ [i/2, [1,3,0,2,1,3][i]] for i in 0:6 ]">i</m:ci>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:46:24&#9;    reg_indices = [ [i/2, [1,3,0,2,1,3][i]] for i in 0:6 ]">2</m:cn>
            </m:apply>
            <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:46:27&#9;    reg_indices = [ [i/2, [1,3,0,2,1,3][i]] for i in 0:6 ]">
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/view" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:46:27&#9;    reg_indices = [ [i/2, [1,3,0,2,1,3][i]] for i in 0:6 ]"/>
              <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:46:27&#9;    reg_indices = [ [i/2, [1,3,0,2,1,3][i]] for i in 0:6 ]">
                <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
                <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:46:28&#9;    reg_indices = [ [i/2, [1,3,0,2,1,3][i]] for i in 0:6 ]">1</m:cn>
                <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:46:30&#9;    reg_indices = [ [i/2, [1,3,0,2,1,3][i]] for i in 0:6 ]">3</m:cn>
                <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:46:32&#9;    reg_indices = [ [i/2, [1,3,0,2,1,3][i]] for i in 0:6 ]">0</m:cn>
                <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:46:34&#9;    reg_indices = [ [i/2, [1,3,0,2,1,3][i]] for i in 0:6 ]">2</m:cn>
                <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:46:36&#9;    reg_indices = [ [i/2, [1,3,0,2,1,3][i]] for i in 0:6 ]">1</m:cn>
                <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:46:38&#9;    reg_indices = [ [i/2, [1,3,0,2,1,3][i]] for i in 0:6 ]">3</m:cn>
              </m:apply>
              <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:46:27&#9;    reg_indices = [ [i/2, [1,3,0,2,1,3][i]] for i in 0:6 ]">
                <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
                <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:46:27&#9;    reg_indices = [ [i/2, [1,3,0,2,1,3][i]] for i in 0:6 ]">0</m:cn>
                <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:46:41&#9;    reg_indices = [ [i/2, [1,3,0,2,1,3][i]] for i in 0:6 ]">i</m:ci>
                <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:46:27&#9;    reg_indices = [ [i/2, [1,3,0,2,1,3][i]] for i in 0:6 ]">0</m:cn>
                <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:46:41&#9;    reg_indices = [ [i/2, [1,3,0,2,1,3][i]] for i in 0:6 ]">i</m:ci>
              </m:apply>
              <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:46:27&#9;    reg_indices = [ [i/2, [1,3,0,2,1,3][i]] for i in 0:6 ]">
                <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
                <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:46:27&#9;    reg_indices = [ [i/2, [1,3,0,2,1,3][i]] for i in 0:6 ]"/>
                <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:46:27&#9;    reg_indices = [ [i/2, [1,3,0,2,1,3][i]] for i in 0:6 ]"/>
                <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:46:27&#9;    reg_indices = [ [i/2, [1,3,0,2,1,3][i]] for i in 0:6 ]">1</m:cn>
                <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:46:27&#9;    reg_indices = [ [i/2, [1,3,0,2,1,3][i]] for i in 0:6 ]"/>
              </m:apply>
            </m:apply>
          </m:apply>
        </m:apply>
      </m:apply>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:47:5&#9;    some_odd_entries = input{reg_indices} # Dimension defaults to 1">
        <m:eq/>
        <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:47:5&#9;    some_odd_entries = input{reg_indices} # Dimension defaults to 1">some_odd_entries</m:ci>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:47:24&#9;    some_odd_entries = input{reg_indices} # Dimension defaults to 1">
          <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/index" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:47:24&#9;    some_odd_entries = input{reg_indices} # Dimension defaults to 1"/>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:47:24&#9;    some_odd_entries = input{reg_indices} # Dimension defaults to 1">input</m:ci>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:47:30&#9;    some_odd_entries = input{reg_indices} # Dimension defaults to 1">reg_indices</m:ci>
          <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/defaultParameter" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:47:24&#9;    some_odd_entries = input{reg_indices} # Dimension defaults to 1"/>
          <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/defaultParameter" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:47:24&#9;    some_odd_entries = input{reg_indices} # Dimension defaults to 1"/>
        </m:apply>
      </m:apply>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:48:5&#9;    assert ArrayEq(some_odd_entries.SHAPE, [3, 2])">
        <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:48:5&#9;    assert ArrayEq(some_odd_entries.SHAPE, [3, 2])"/>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:48:12&#9;    assert ArrayEq(some_odd_entries.SHAPE, [3, 2])">
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:48:12&#9;    assert ArrayEq(some_odd_entries.SHAPE, [3, 2])">ArrayEq</m:ci>
          <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:48:20&#9;    assert ArrayEq(some_odd_entries.SHAPE, [3, 2])">
            <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/accessor" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:48:20&#9;    assert ArrayEq(some_odd_entries.SHAPE, [3, 2])">SHAPE</m:csymbol>
            <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:48:20&#9;    assert ArrayEq(some_odd_entries.SHAPE, [3, 2])">some_odd_entries</m:ci>
          </m:apply>
          <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:48:44&#9;    assert ArrayEq(some_odd_entries.SHAPE, [3, 2])">
            <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
            <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:48:45&#9;    assert ArrayEq(some_odd_entries.SHAPE, [3, 2])">3</m:cn>
            <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:48:48&#9;    assert ArrayEq(some_odd_entries.SHAPE, [3, 2])">2</m:cn>
          </m:apply>
        </m:apply>
      </m:apply>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:49:5&#9;    assert ArrayEq(some_odd_entries, shrink_right)">
        <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:49:5&#9;    assert ArrayEq(some_odd_entries, shrink_right)"/>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:49:12&#9;    assert ArrayEq(some_odd_entries, shrink_right)">
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:49:12&#9;    assert ArrayEq(some_odd_entries, shrink_right)">ArrayEq</m:ci>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:49:20&#9;    assert ArrayEq(some_odd_entries, shrink_right)">some_odd_entries</m:ci>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:49:38&#9;    assert ArrayEq(some_odd_entries, shrink_right)">shrink_right</m:ci>
        </m:apply>
      </m:apply>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:52:5&#9;    pad_right = input{odd_indices, 1, pad:1=55}">
        <m:eq/>
        <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:52:5&#9;    pad_right = input{odd_indices, 1, pad:1=55}">pad_right</m:ci>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:52:17&#9;    pad_right = input{odd_indices, 1, pad:1=55}">
          <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/index" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:52:17&#9;    pad_right = input{odd_indices, 1, pad:1=55}"/>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:52:17&#9;    pad_right = input{odd_indices, 1, pad:1=55}">input</m:ci>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:52:23&#9;    pad_right = input{odd_indices, 1, pad:1=55}">odd_indices</m:ci>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:52:36&#9;    pad_right = input{odd_indices, 1, pad:1=55}">1</m:cn>
          <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/defaultParameter" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:52:17&#9;    pad_right = input{odd_indices, 1, pad:1=55}"/>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:52:43&#9;    pad_right = input{odd_indices, 1, pad:1=55}">1</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:52:45&#9;    pad_right = input{odd_indices, 1, pad:1=55}">55</m:cn>
        </m:apply>
      </m:apply>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:53:5&#9;    pad_left = input{odd_indices, 1, pad:-1=-55}">
        <m:eq/>
        <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:53:5&#9;    pad_left = input{odd_indices, 1, pad:-1=-55}">pad_left</m:ci>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:53:16&#9;    pad_left = input{odd_indices, 1, pad:-1=-55}">
          <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/index" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:53:16&#9;    pad_left = input{odd_indices, 1, pad:-1=-55}"/>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:53:16&#9;    pad_left = input{odd_indices, 1, pad:-1=-55}">input</m:ci>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:53:22&#9;    pad_left = input{odd_indices, 1, pad:-1=-55}">odd_indices</m:ci>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:53:35&#9;    pad_left = input{odd_indices, 1, pad:-1=-55}">1</m:cn>
          <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/defaultParameter" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:53:16&#9;    pad_left = input{odd_indices, 1, pad:-1=-55}"/>
          <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:53:42&#9;    pad_left = input{odd_indices, 1, pad:-1=-55}">
            <m:minus/>
            <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:53:43&#9;    pad_left = input{odd_indices, 1, pad:-1=-55}">1</m:cn>
          </m:apply>
          <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:53:45&#9;    pad_left = input{odd_indices, 1, pad:-1=-55}">
            <m:minus/>
            <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:53:46&#9;    pad_left = input{odd_indices, 1, pad:-1=-55}">55</m:cn>
          </m:apply>
        </m:apply>
      </m:apply>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:54:5&#9;    assert ArrayEq(pad_right.SHAPE, [3,3])">
        <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:54:5&#9;    assert ArrayEq(pad_right.SHAPE, [3,3])"/>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:54:12&#9;    assert ArrayEq(pad_right.SHAPE, [3,3])">
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:54:12&#9;    assert ArrayEq(pad_right.SHAPE, [3,3])">ArrayEq</m:ci>
          <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:54:20&#9;    assert ArrayEq(pad_right.SHAPE, [3,3])">
            <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/accessor" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:54:20&#9;    assert ArrayEq(pad_right.SHAPE, [3,3])">SHAPE</m:csymbol>
            <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:54:20&#9;    assert ArrayEq(pad_right.SHAPE, [3,3])">pad_right</m:ci>
          </m:apply>
          <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:54:37&#9;    assert ArrayEq(pad_right.SHAPE, [3,3])">
            <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
            <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:54:38&#9;    assert ArrayEq(pad_right.SHAPE, [3,3])">3</m:cn>
            <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:54:40&#9;    assert ArrayEq(pad_right.SHAPE, [3,3])">3</m:cn>
          </m:apply>
        </m:apply>
      </m:apply>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:55:5&#9;    assert ArrayEq(pad_left.SHAPE, [3,3])">
        <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:55:5&#9;    assert ArrayEq(pad_left.SHAPE, [3,3])"/>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:55:12&#9;    assert ArrayEq(pad_left.SHAPE, [3,3])">
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:55:12&#9;    assert ArrayEq(pad_left.SHAPE, [3,3])">ArrayEq</m:ci>
          <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:55:20&#9;    assert ArrayEq(pad_left.SHAPE, [3,3])">
            <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/accessor" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:55:20&#9;    assert ArrayEq(pad_left.SHAPE, [3,3])">SHAPE</m:csymbol>
            <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:55:20&#9;    assert ArrayEq(pad_left.SHAPE, [3,3])">pad_left</m:ci>
          </m:apply>
          <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:55:36&#9;    assert ArrayEq(pad_left.SHAPE, [3,3])">
            <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
            <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:55:37&#9;    assert ArrayEq(pad_left.SHAPE, [3,3])">3</m:cn>
            <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:55:39&#9;    assert ArrayEq(pad_left.SHAPE, [3,3])">3</m:cn>
          </m:apply>
        </m:apply>
      </m:apply>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:56:5&#9;    assert ArrayEq(pad_right, [ [1,3,55], [5,7,9], [11,13,55] ])">
        <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:56:5&#9;    assert ArrayEq(pad_right, [ [1,3,55], [5,7,9], [11,13,55] ])"/>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:56:12&#9;    assert ArrayEq(pad_right, [ [1,3,55], [5,7,9], [11,13,55] ])">
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:56:12&#9;    assert ArrayEq(pad_right, [ [1,3,55], [5,7,9], [11,13,55] ])">ArrayEq</m:ci>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:56:20&#9;    assert ArrayEq(pad_right, [ [1,3,55], [5,7,9], [11,13,55] ])">pad_right</m:ci>
          <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:56:31&#9;    assert ArrayEq(pad_right, [ [1,3,55], [5,7,9], [11,13,55] ])">
            <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
            <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:56:33&#9;    assert ArrayEq(pad_right, [ [1,3,55], [5,7,9], [11,13,55] ])">
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:56:34&#9;    assert ArrayEq(pad_right, [ [1,3,55], [5,7,9], [11,13,55] ])">1</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:56:36&#9;    assert ArrayEq(pad_right, [ [1,3,55], [5,7,9], [11,13,55] ])">3</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:56:38&#9;    assert ArrayEq(pad_right, [ [1,3,55], [5,7,9], [11,13,55] ])">55</m:cn>
            </m:apply>
            <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:56:43&#9;    assert ArrayEq(pad_right, [ [1,3,55], [5,7,9], [11,13,55] ])">
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:56:44&#9;    assert ArrayEq(pad_right, [ [1,3,55], [5,7,9], [11,13,55] ])">5</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:56:46&#9;    assert ArrayEq(pad_right, [ [1,3,55], [5,7,9], [11,13,55] ])">7</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:56:48&#9;    assert ArrayEq(pad_right, [ [1,3,55], [5,7,9], [11,13,55] ])">9</m:cn>
            </m:apply>
            <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:56:52&#9;    assert ArrayEq(pad_right, [ [1,3,55], [5,7,9], [11,13,55] ])">
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:56:53&#9;    assert ArrayEq(pad_right, [ [1,3,55], [5,7,9], [11,13,55] ])">11</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:56:56&#9;    assert ArrayEq(pad_right, [ [1,3,55], [5,7,9], [11,13,55] ])">13</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:56:59&#9;    assert ArrayEq(pad_right, [ [1,3,55], [5,7,9], [11,13,55] ])">55</m:cn>
            </m:apply>
          </m:apply>
        </m:apply>
      </m:apply>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:57:5&#9;    assert ArrayEq(pad_left, [ [-55,1,3], [5,7,9], [-55,11,13] ])">
        <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert" proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:57:5&#9;    assert ArrayEq(pad_left, [ [-55,1,3], [5,7,9], [-55,11,13] ])"/>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:57:12&#9;    assert ArrayEq(pad_left, [ [-55,1,3], [5,7,9], [-55,11,13] ])">
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:57:12&#9;    assert ArrayEq(pad_left, [ [-55,1,3], [5,7,9], [-55,11,13] ])">ArrayEq</m:ci>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:57:20&#9;    assert ArrayEq(pad_left, [ [-55,1,3], [5,7,9], [-55,11,13] ])">pad_left</m:ci>
          <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:57:30&#9;    assert ArrayEq(pad_left, [ [-55,1,3], [5,7,9], [-55,11,13] ])">
            <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
            <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:57:32&#9;    assert ArrayEq(pad_left, [ [-55,1,3], [5,7,9], [-55,11,13] ])">
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
              <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:57:33&#9;    assert ArrayEq(pad_left, [ [-55,1,3], [5,7,9], [-55,11,13] ])">
                <m:minus/>
                <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:57:34&#9;    assert ArrayEq(pad_left, [ [-55,1,3], [5,7,9], [-55,11,13] ])">55</m:cn>
              </m:apply>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:57:37&#9;    assert ArrayEq(pad_left, [ [-55,1,3], [5,7,9], [-55,11,13] ])">1</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:57:39&#9;    assert ArrayEq(pad_left, [ [-55,1,3], [5,7,9], [-55,11,13] ])">3</m:cn>
            </m:apply>
            <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:57:43&#9;    assert ArrayEq(pad_left, [ [-55,1,3], [5,7,9], [-55,11,13] ])">
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:57:44&#9;    assert ArrayEq(pad_left, [ [-55,1,3], [5,7,9], [-55,11,13] ])">5</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:57:46&#9;    assert ArrayEq(pad_left, [ [-55,1,3], [5,7,9], [-55,11,13] ])">7</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:57:48&#9;    assert ArrayEq(pad_left, [ [-55,1,3], [5,7,9], [-55,11,13] ])">9</m:cn>
            </m:apply>
            <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:57:52&#9;    assert ArrayEq(pad_left, [ [-55,1,3], [5,7,9], [-55,11,13] ])">
              <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
              <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:57:53&#9;    assert ArrayEq(pad_left, [ [-55,1,3], [5,7,9], [-55,11,13] ])">
                <m:minus/>
                <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:57:54&#9;    assert ArrayEq(pad_left, [ [-55,1,3], [5,7,9], [-55,11,13] ])">55</m:cn>
              </m:apply>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:57:57&#9;    assert ArrayEq(pad_left, [ [-55,1,3], [5,7,9], [-55,11,13] ])">11</m:cn>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/test_find_index.txt:57:60&#9;    assert ArrayEq(pad_left, [ [-55,1,3], [5,7,9], [-55,11,13] ])">13</m:cn>
            </m:apply>
          </m:apply>
        </m:apply>
      </m:apply>
    </m:apply>
  </proto:post-processing>
</proto:protocol>
