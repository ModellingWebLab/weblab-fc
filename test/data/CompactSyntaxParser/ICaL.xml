<?xml version='1.0' encoding='ASCII'?>
<proto:protocol xmlns:oxmeta="https://chaste.comlab.ox.ac.uk/cellml/ns/oxford-metadata#" xmlns:cellml="http://www.cellml.org/cellml/1.0#" xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:proto="https://chaste.cs.ox.ac.uk/nss/protocol/0.1#" proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:1:1&#9;# Compact syntax version of the ICaL protocol" xml:base="projects/FunctionalCuration/test/protocols/compact/ICaL.txt">
  <proto:inputs proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:7:1&#9;inputs {">
    <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:8:1&#9;    holding_potential = -50">
      <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/statementList" proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:8:1&#9;    holding_potential = -50"/>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:8:5&#9;    holding_potential = -50">
        <m:eq/>
        <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:8:5&#9;    holding_potential = -50">holding_potential</m:ci>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:8:25&#9;    holding_potential = -50">
          <m:minus/>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:8:26&#9;    holding_potential = -50">50</m:cn>
        </m:apply>
      </m:apply>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:10:5&#9;    steady_state_time = 10000">
        <m:eq/>
        <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:10:5&#9;    steady_state_time = 10000">steady_state_time</m:ci>
        <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:10:25&#9;    steady_state_time = 10000">10000</m:cn>
      </m:apply>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:12:5&#9;    test_potentials = [ -45.01, -40.01, -35.01, -30.01, -25.01, -20.01, -15.01, -10.01, -5.01,">
        <m:eq/>
        <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:12:5&#9;    test_potentials = [ -45.01, -40.01, -35.01, -30.01, -25.01, -20.01, -15.01, -10.01, -5.01,">test_potentials</m:ci>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:12:23&#9;    test_potentials = [ -45.01, -40.01, -35.01, -30.01, -25.01, -20.01, -15.01, -10.01, -5.01,">
          <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
          <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:12:25&#9;    test_potentials = [ -45.01, -40.01, -35.01, -30.01, -25.01, -20.01, -15.01, -10.01, -5.01,">
            <m:minus/>
            <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:12:26&#9;    test_potentials = [ -45.01, -40.01, -35.01, -30.01, -25.01, -20.01, -15.01, -10.01, -5.01,">45.01</m:cn>
          </m:apply>
          <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:12:33&#9;    test_potentials = [ -45.01, -40.01, -35.01, -30.01, -25.01, -20.01, -15.01, -10.01, -5.01,">
            <m:minus/>
            <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:12:34&#9;    test_potentials = [ -45.01, -40.01, -35.01, -30.01, -25.01, -20.01, -15.01, -10.01, -5.01,">40.01</m:cn>
          </m:apply>
          <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:12:41&#9;    test_potentials = [ -45.01, -40.01, -35.01, -30.01, -25.01, -20.01, -15.01, -10.01, -5.01,">
            <m:minus/>
            <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:12:42&#9;    test_potentials = [ -45.01, -40.01, -35.01, -30.01, -25.01, -20.01, -15.01, -10.01, -5.01,">35.01</m:cn>
          </m:apply>
          <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:12:49&#9;    test_potentials = [ -45.01, -40.01, -35.01, -30.01, -25.01, -20.01, -15.01, -10.01, -5.01,">
            <m:minus/>
            <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:12:50&#9;    test_potentials = [ -45.01, -40.01, -35.01, -30.01, -25.01, -20.01, -15.01, -10.01, -5.01,">30.01</m:cn>
          </m:apply>
          <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:12:57&#9;    test_potentials = [ -45.01, -40.01, -35.01, -30.01, -25.01, -20.01, -15.01, -10.01, -5.01,">
            <m:minus/>
            <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:12:58&#9;    test_potentials = [ -45.01, -40.01, -35.01, -30.01, -25.01, -20.01, -15.01, -10.01, -5.01,">25.01</m:cn>
          </m:apply>
          <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:12:65&#9;    test_potentials = [ -45.01, -40.01, -35.01, -30.01, -25.01, -20.01, -15.01, -10.01, -5.01,">
            <m:minus/>
            <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:12:66&#9;    test_potentials = [ -45.01, -40.01, -35.01, -30.01, -25.01, -20.01, -15.01, -10.01, -5.01,">20.01</m:cn>
          </m:apply>
          <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:12:73&#9;    test_potentials = [ -45.01, -40.01, -35.01, -30.01, -25.01, -20.01, -15.01, -10.01, -5.01,">
            <m:minus/>
            <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:12:74&#9;    test_potentials = [ -45.01, -40.01, -35.01, -30.01, -25.01, -20.01, -15.01, -10.01, -5.01,">15.01</m:cn>
          </m:apply>
          <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:12:81&#9;    test_potentials = [ -45.01, -40.01, -35.01, -30.01, -25.01, -20.01, -15.01, -10.01, -5.01,">
            <m:minus/>
            <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:12:82&#9;    test_potentials = [ -45.01, -40.01, -35.01, -30.01, -25.01, -20.01, -15.01, -10.01, -5.01,">10.01</m:cn>
          </m:apply>
          <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:12:89&#9;    test_potentials = [ -45.01, -40.01, -35.01, -30.01, -25.01, -20.01, -15.01, -10.01, -5.01,">
            <m:minus/>
            <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:12:90&#9;    test_potentials = [ -45.01, -40.01, -35.01, -30.01, -25.01, -20.01, -15.01, -10.01, -5.01,">5.01</m:cn>
          </m:apply>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:13:25&#9;                        0.01,  5.01, 10.01, 15.01, 20.01, 25.01, 30.01, 35.01, 40.01, 45.01, 50.01, 55.01,">0.01</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:13:32&#9;                        0.01,  5.01, 10.01, 15.01, 20.01, 25.01, 30.01, 35.01, 40.01, 45.01, 50.01, 55.01,">5.01</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:13:38&#9;                        0.01,  5.01, 10.01, 15.01, 20.01, 25.01, 30.01, 35.01, 40.01, 45.01, 50.01, 55.01,">10.01</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:13:45&#9;                        0.01,  5.01, 10.01, 15.01, 20.01, 25.01, 30.01, 35.01, 40.01, 45.01, 50.01, 55.01,">15.01</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:13:52&#9;                        0.01,  5.01, 10.01, 15.01, 20.01, 25.01, 30.01, 35.01, 40.01, 45.01, 50.01, 55.01,">20.01</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:13:59&#9;                        0.01,  5.01, 10.01, 15.01, 20.01, 25.01, 30.01, 35.01, 40.01, 45.01, 50.01, 55.01,">25.01</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:13:66&#9;                        0.01,  5.01, 10.01, 15.01, 20.01, 25.01, 30.01, 35.01, 40.01, 45.01, 50.01, 55.01,">30.01</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:13:73&#9;                        0.01,  5.01, 10.01, 15.01, 20.01, 25.01, 30.01, 35.01, 40.01, 45.01, 50.01, 55.01,">35.01</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:13:80&#9;                        0.01,  5.01, 10.01, 15.01, 20.01, 25.01, 30.01, 35.01, 40.01, 45.01, 50.01, 55.01,">40.01</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:13:87&#9;                        0.01,  5.01, 10.01, 15.01, 20.01, 25.01, 30.01, 35.01, 40.01, 45.01, 50.01, 55.01,">45.01</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:13:94&#9;                        0.01,  5.01, 10.01, 15.01, 20.01, 25.01, 30.01, 35.01, 40.01, 45.01, 50.01, 55.01,">50.01</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:13:101&#9;                        0.01,  5.01, 10.01, 15.01, 20.01, 25.01, 30.01, 35.01, 40.01, 45.01, 50.01, 55.01,">55.01</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:14:25&#9;                        60.01, 65.01, 70.01, 75.01, 79.99 ]">60.01</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:14:32&#9;                        60.01, 65.01, 70.01, 75.01, 79.99 ]">65.01</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:14:39&#9;                        60.01, 65.01, 70.01, 75.01, 79.99 ]">70.01</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:14:46&#9;                        60.01, 65.01, 70.01, 75.01, 79.99 ]">75.01</m:cn>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:14:53&#9;                        60.01, 65.01, 70.01, 75.01, 79.99 ]">79.99</m:cn>
        </m:apply>
      </m:apply>
    </m:apply>
  </proto:inputs>
  <proto:import source="../../../src/proto/library/BasicLibrary.xml" prefix="std" proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:17:1&#9;import std = &quot;../../../src/proto/library/BasicLibrary.xml&quot;"/>
  <proto:library proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:19:1&#9;library {">
    <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:20:5&#9;    default_Cao = sim:oxmeta:extracellular_calcium_concentration">
      <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/statementList" proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:20:5&#9;    default_Cao = sim:oxmeta:extracellular_calcium_concentration"/>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:20:5&#9;    default_Cao = sim:oxmeta:extracellular_calcium_concentration">
        <m:eq/>
        <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:20:5&#9;    default_Cao = sim:oxmeta:extracellular_calcium_concentration">default_Cao</m:ci>
        <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:20:19&#9;    default_Cao = sim:oxmeta:extracellular_calcium_concentration">sim:oxmeta:extracellular_calcium_concentration</m:ci>
      </m:apply>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:21:5&#9;    step_calcium_values = map(lambda multiple: default_Cao * multiple, [0.5, 1.0, 1.5])">
        <m:eq/>
        <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:21:5&#9;    step_calcium_values = map(lambda multiple: default_Cao * multiple, [0.5, 1.0, 1.5])">step_calcium_values</m:ci>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:21:27&#9;    step_calcium_values = map(lambda multiple: default_Cao * multiple, [0.5, 1.0, 1.5])">
          <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/map" proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:21:27&#9;    step_calcium_values = map(lambda multiple: default_Cao * multiple, [0.5, 1.0, 1.5])"/>
          <m:lambda proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:21:31&#9;    step_calcium_values = map(lambda multiple: default_Cao * multiple, [0.5, 1.0, 1.5])">
            <m:bvar>
              <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:21:38&#9;    step_calcium_values = map(lambda multiple: default_Cao * multiple, [0.5, 1.0, 1.5])">multiple</m:ci>
            </m:bvar>
            <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:21:48&#9;    step_calcium_values = map(lambda multiple: default_Cao * multiple, [0.5, 1.0, 1.5])">
              <m:times/>
              <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:21:48&#9;    step_calcium_values = map(lambda multiple: default_Cao * multiple, [0.5, 1.0, 1.5])">default_Cao</m:ci>
              <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:21:62&#9;    step_calcium_values = map(lambda multiple: default_Cao * multiple, [0.5, 1.0, 1.5])">multiple</m:ci>
            </m:apply>
          </m:lambda>
          <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:21:72&#9;    step_calcium_values = map(lambda multiple: default_Cao * multiple, [0.5, 1.0, 1.5])">
            <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
            <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:21:73&#9;    step_calcium_values = map(lambda multiple: default_Cao * multiple, [0.5, 1.0, 1.5])">0.5</m:cn>
            <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:21:78&#9;    step_calcium_values = map(lambda multiple: default_Cao * multiple, [0.5, 1.0, 1.5])">1.0</m:cn>
            <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:21:83&#9;    step_calcium_values = map(lambda multiple: default_Cao * multiple, [0.5, 1.0, 1.5])">1.5</m:cn>
          </m:apply>
        </m:apply>
      </m:apply>
    </m:apply>
  </proto:library>
  <proto:units proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:24:1&#9;units {">
    <cellml:units name="mV" proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:25:5&#9;    mV = milli volt">
      <cellml:unit units="volt" prefix="milli" proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:25:10&#9;    mV = milli volt"/>
    </cellml:units>
    <cellml:units name="ms" proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:26:5&#9;    ms = milli second">
      <cellml:unit units="second" prefix="milli" proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:26:10&#9;    ms = milli second"/>
    </cellml:units>
    <cellml:units name="uA_per_cm2" proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:27:5&#9;    uA_per_cm2 = micro ampere . centi metre^-2 &quot;{/Symbol m}A/cm^2&quot; # Desired units of currents">
      <cellml:unit units="ampere" prefix="micro" proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:27:18&#9;    uA_per_cm2 = micro ampere . centi metre^-2 &quot;{/Symbol m}A/cm^2&quot; # Desired units of currents"/>
      <cellml:unit units="metre" prefix="centi" exponent="-2" proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:27:33&#9;    uA_per_cm2 = micro ampere . centi metre^-2 &quot;{/Symbol m}A/cm^2&quot; # Desired units of currents"/>
    </cellml:units>
    <cellml:units name="uF_per_cm2" proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:28:5&#9;    uF_per_cm2 = micro farad . centi metre^-2">
      <cellml:unit units="farad" prefix="micro" proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:28:18&#9;    uF_per_cm2 = micro farad . centi metre^-2"/>
      <cellml:unit units="metre" prefix="centi" exponent="-2" proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:28:32&#9;    uF_per_cm2 = micro farad . centi metre^-2"/>
    </cellml:units>
    <cellml:units name="microamps" proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:29:5&#9;    microamps = micro ampere">
      <cellml:unit units="ampere" prefix="micro" proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:29:17&#9;    microamps = micro ampere"/>
    </cellml:units>
    <cellml:units name="A_per_F" proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:30:5&#9;    A_per_F = ampere . farad^-1">
      <cellml:unit units="ampere" proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:30:15&#9;    A_per_F = ampere . farad^-1"/>
      <cellml:unit units="farad" exponent="-1" proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:30:24&#9;    A_per_F = ampere . farad^-1"/>
    </cellml:units>
    <cellml:units name="uM" proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:31:5&#9;    uM = micro mole . litre^-1 &quot;{/Symbol m}M&quot;">
      <cellml:unit units="mole" prefix="micro" proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:31:10&#9;    uM = micro mole . litre^-1 &quot;{/Symbol m}M&quot;"/>
      <cellml:unit units="litre" exponent="-1" proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:31:23&#9;    uM = micro mole . litre^-1 &quot;{/Symbol m}M&quot;"/>
    </cellml:units>
  </proto:units>
  <proto:modelInterface proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:34:1&#9;model interface {">
    <proto:specifyInputVariable units="mV" name="oxmeta:membrane_voltage" proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:35:5&#9;    input oxmeta:membrane_voltage units mV"/>
    <proto:specifyInputVariable name="oxmeta:extracellular_calcium_concentration" proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:36:5&#9;    input oxmeta:extracellular_calcium_concentration"/>
    <proto:specifyOutputVariable units="uA_per_cm2" name="oxmeta:membrane_L_type_calcium_current" proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:38:5&#9;    output oxmeta:membrane_L_type_calcium_current units uA_per_cm2"/>
    <proto:specifyOutputVariable units="mV" name="oxmeta:membrane_voltage" proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:39:5&#9;    output oxmeta:membrane_voltage units mV"/>
    <proto:specifyOutputVariable units="uM" name="oxmeta:extracellular_calcium_concentration" proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:40:5&#9;    output oxmeta:extracellular_calcium_concentration units uM"/>
    <proto:specifyOutputVariable units="ms" name="oxmeta:time" proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:41:5&#9;    output oxmeta:time units ms"/>
    <proto:declareNewVariable units="uF_per_cm2" name="chaste_membrane_capacitance" initial_value="1" proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:43:5&#9;    var chaste_membrane_capacitance units uF_per_cm2 = 1"/>
    <proto:unitsConversionRule desiredDimensions="uA_per_cm2" actualDimensions="A_per_F" proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:45:5&#9;    convert A_per_F to uA_per_cm2 by lambda rhs: rhs * chaste_membrane_capacitance">
      <m:lambda proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:45:38&#9;    convert A_per_F to uA_per_cm2 by lambda rhs: rhs * chaste_membrane_capacitance">
        <m:bvar>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:45:45&#9;    convert A_per_F to uA_per_cm2 by lambda rhs: rhs * chaste_membrane_capacitance">rhs</m:ci>
        </m:bvar>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:45:50&#9;    convert A_per_F to uA_per_cm2 by lambda rhs: rhs * chaste_membrane_capacitance">
          <m:times/>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:45:50&#9;    convert A_per_F to uA_per_cm2 by lambda rhs: rhs * chaste_membrane_capacitance">rhs</m:ci>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:45:56&#9;    convert A_per_F to uA_per_cm2 by lambda rhs: rhs * chaste_membrane_capacitance">chaste_membrane_capacitance</m:ci>
        </m:apply>
      </m:lambda>
    </proto:unitsConversionRule>
    <proto:unitsConversionRule desiredDimensions="A_per_F" actualDimensions="uA_per_cm2" proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:46:5&#9;    convert uA_per_cm2 to A_per_F by lambda rhs: rhs / chaste_membrane_capacitance">
      <m:lambda proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:46:38&#9;    convert uA_per_cm2 to A_per_F by lambda rhs: rhs / chaste_membrane_capacitance">
        <m:bvar>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:46:45&#9;    convert uA_per_cm2 to A_per_F by lambda rhs: rhs / chaste_membrane_capacitance">rhs</m:ci>
        </m:bvar>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:46:50&#9;    convert uA_per_cm2 to A_per_F by lambda rhs: rhs / chaste_membrane_capacitance">
          <m:divide/>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:46:50&#9;    convert uA_per_cm2 to A_per_F by lambda rhs: rhs / chaste_membrane_capacitance">rhs</m:ci>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:46:56&#9;    convert uA_per_cm2 to A_per_F by lambda rhs: rhs / chaste_membrane_capacitance">chaste_membrane_capacitance</m:ci>
        </m:apply>
      </m:lambda>
    </proto:unitsConversionRule>
    <proto:unitsConversionRule desiredDimensions="uA_per_cm2" actualDimensions="microamps" proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:47:5&#9;    convert microamps to uA_per_cm2 by lambda rhs: (rhs / oxmeta:membrane_capacitance) * chaste_membrane_capacitance">
      <m:lambda proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:47:40&#9;    convert microamps to uA_per_cm2 by lambda rhs: (rhs / oxmeta:membrane_capacitance) * chaste_membrane_capacitance">
        <m:bvar>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:47:47&#9;    convert microamps to uA_per_cm2 by lambda rhs: (rhs / oxmeta:membrane_capacitance) * chaste_membrane_capacitance">rhs</m:ci>
        </m:bvar>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:47:52&#9;    convert microamps to uA_per_cm2 by lambda rhs: (rhs / oxmeta:membrane_capacitance) * chaste_membrane_capacitance">
          <m:times/>
          <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:47:53&#9;    convert microamps to uA_per_cm2 by lambda rhs: (rhs / oxmeta:membrane_capacitance) * chaste_membrane_capacitance">
            <m:divide/>
            <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:47:53&#9;    convert microamps to uA_per_cm2 by lambda rhs: (rhs / oxmeta:membrane_capacitance) * chaste_membrane_capacitance">rhs</m:ci>
            <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:47:59&#9;    convert microamps to uA_per_cm2 by lambda rhs: (rhs / oxmeta:membrane_capacitance) * chaste_membrane_capacitance">oxmeta:membrane_capacitance</m:ci>
          </m:apply>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:47:90&#9;    convert microamps to uA_per_cm2 by lambda rhs: (rhs / oxmeta:membrane_capacitance) * chaste_membrane_capacitance">chaste_membrane_capacitance</m:ci>
        </m:apply>
      </m:lambda>
    </proto:unitsConversionRule>
    <proto:unitsConversionRule desiredDimensions="microamps" actualDimensions="uA_per_cm2" proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:48:5&#9;    convert uA_per_cm2 to microamps by lambda rhs: (rhs * oxmeta:membrane_capacitance) / chaste_membrane_capacitance">
      <m:lambda proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:48:40&#9;    convert uA_per_cm2 to microamps by lambda rhs: (rhs * oxmeta:membrane_capacitance) / chaste_membrane_capacitance">
        <m:bvar>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:48:47&#9;    convert uA_per_cm2 to microamps by lambda rhs: (rhs * oxmeta:membrane_capacitance) / chaste_membrane_capacitance">rhs</m:ci>
        </m:bvar>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:48:52&#9;    convert uA_per_cm2 to microamps by lambda rhs: (rhs * oxmeta:membrane_capacitance) / chaste_membrane_capacitance">
          <m:divide/>
          <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:48:53&#9;    convert uA_per_cm2 to microamps by lambda rhs: (rhs * oxmeta:membrane_capacitance) / chaste_membrane_capacitance">
            <m:times/>
            <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:48:53&#9;    convert uA_per_cm2 to microamps by lambda rhs: (rhs * oxmeta:membrane_capacitance) / chaste_membrane_capacitance">rhs</m:ci>
            <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:48:59&#9;    convert uA_per_cm2 to microamps by lambda rhs: (rhs * oxmeta:membrane_capacitance) / chaste_membrane_capacitance">oxmeta:membrane_capacitance</m:ci>
          </m:apply>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:48:90&#9;    convert uA_per_cm2 to microamps by lambda rhs: (rhs * oxmeta:membrane_capacitance) / chaste_membrane_capacitance">chaste_membrane_capacitance</m:ci>
        </m:apply>
      </m:lambda>
    </proto:unitsConversionRule>
  </proto:modelInterface>
  <proto:simulations proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:51:1&#9;tasks {">
    <proto:timecourseSimulation proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:53:5&#9;    simulation timecourse {">
      <proto:vectorStepper units="ms" name="time" proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:54:9&#9;        range time units ms vector [0, steady_state_time]">
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:54:36&#9;        range time units ms vector [0, steady_state_time]">
          <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:54:37&#9;        range time units ms vector [0, steady_state_time]">0</m:cn>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:54:40&#9;        range time units ms vector [0, steady_state_time]">steady_state_time</m:ci>
        </m:apply>
      </proto:vectorStepper>
      <proto:modifiers proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:55:9&#9;        modifiers {">
        <proto:setVariable proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:56:13&#9;            at start set oxmeta:membrane_voltage = holding_potential">
          <proto:when proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:56:15&#9;            at start set oxmeta:membrane_voltage = holding_potential">AT_START_ONLY</proto:when>
          <proto:name>oxmeta:membrane_voltage</proto:name>
          <proto:value>
            <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:56:52&#9;            at start set oxmeta:membrane_voltage = holding_potential">holding_potential</m:ci>
          </proto:value>
        </proto:setVariable>
        <proto:saveState proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:57:13&#9;            at end save as holding_state">
          <proto:when proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:57:15&#9;            at end save as holding_state">AT_END</proto:when>
          <proto:name>holding_state</proto:name>
        </proto:saveState>
      </proto:modifiers>
    </proto:timecourseSimulation>
    <proto:nestedSimulation proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:62:5&#9;    simulation sim = nested {" prefix="sim">
      <proto:vectorStepper units="dimensionless" name="step_calcium" proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:63:9&#9;        range step_calcium units dimensionless vector step_calcium_values">
        <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:63:55&#9;        range step_calcium units dimensionless vector step_calcium_values">step_calcium_values</m:ci>
      </proto:vectorStepper>
      <proto:modifiers proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:64:9&#9;        modifiers {">
        <proto:setVariable proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:66:13&#9;            at each loop set oxmeta:extracellular_calcium_concentration = step_calcium">
          <proto:when proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:66:15&#9;            at each loop set oxmeta:extracellular_calcium_concentration = step_calcium">EVERY_LOOP</proto:when>
          <proto:name>oxmeta:extracellular_calcium_concentration</proto:name>
          <proto:value>
            <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:66:75&#9;            at each loop set oxmeta:extracellular_calcium_concentration = step_calcium">step_calcium</m:ci>
          </proto:value>
        </proto:setVariable>
      </proto:modifiers>
      <proto:nestedSimulation proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:68:15&#9;        nests simulation nested {">
        <proto:vectorStepper units="mV" name="step_voltage" proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:69:13&#9;            range step_voltage units mV vector test_potentials">
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:69:48&#9;            range step_voltage units mV vector test_potentials">test_potentials</m:ci>
        </proto:vectorStepper>
        <proto:modifiers proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:70:13&#9;            modifiers {">
          <proto:resetState proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:72:17&#9;                at each loop reset to holding_state">
            <proto:when proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:72:19&#9;                at each loop reset to holding_state">EVERY_LOOP</proto:when>
            <proto:state>holding_state</proto:state>
          </proto:resetState>
          <proto:setVariable proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:73:17&#9;                at each loop set oxmeta:membrane_voltage = holding_potential">
            <proto:when proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:73:19&#9;                at each loop set oxmeta:membrane_voltage = holding_potential">EVERY_LOOP</proto:when>
            <proto:name>oxmeta:membrane_voltage</proto:name>
            <proto:value>
              <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:73:60&#9;                at each loop set oxmeta:membrane_voltage = holding_potential">holding_potential</m:ci>
            </proto:value>
          </proto:setVariable>
        </proto:modifiers>
        <proto:timecourseSimulation proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:75:19&#9;            nests simulation timecourse {">
          <proto:uniformStepper units="ms" name="time" proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:76:17&#9;                range time units ms uniform -10:0.01:500">
            <proto:start>
              <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:76:45&#9;                range time units ms uniform -10:0.01:500">
                <m:minus/>
                <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:76:46&#9;                range time units ms uniform -10:0.01:500">10</m:cn>
              </m:apply>
            </proto:start>
            <proto:stop>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:76:54&#9;                range time units ms uniform -10:0.01:500">500</m:cn>
            </proto:stop>
            <proto:step>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:76:49&#9;                range time units ms uniform -10:0.01:500">0.01</m:cn>
            </proto:step>
          </proto:uniformStepper>
          <proto:modifiers proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:77:17&#9;                modifiers {">
            <proto:setVariable proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:78:21&#9;                    at each loop set oxmeta:membrane_voltage = \">
              <proto:when proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:78:23&#9;                    at each loop set oxmeta:membrane_voltage = \">EVERY_LOOP</proto:when>
              <proto:name>oxmeta:membrane_voltage</proto:name>
              <proto:value>
                <m:piecewise proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:79:25&#9;                        if MathML:abs(time - 0) &lt; 1e-6 then step_voltage else oxmeta:membrane_voltage">
                  <m:piece>
                    <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:79:61&#9;                        if MathML:abs(time - 0) &lt; 1e-6 then step_voltage else oxmeta:membrane_voltage">step_voltage</m:ci>
                    <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:79:28&#9;                        if MathML:abs(time - 0) &lt; 1e-6 then step_voltage else oxmeta:membrane_voltage">
                      <m:lt/>
                      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:79:28&#9;                        if MathML:abs(time - 0) &lt; 1e-6 then step_voltage else oxmeta:membrane_voltage">
                        <m:abs/>
                        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:79:39&#9;                        if MathML:abs(time - 0) &lt; 1e-6 then step_voltage else oxmeta:membrane_voltage">
                          <m:minus/>
                          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:79:39&#9;                        if MathML:abs(time - 0) &lt; 1e-6 then step_voltage else oxmeta:membrane_voltage">time</m:ci>
                          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:79:46&#9;                        if MathML:abs(time - 0) &lt; 1e-6 then step_voltage else oxmeta:membrane_voltage">0</m:cn>
                        </m:apply>
                      </m:apply>
                      <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:79:51&#9;                        if MathML:abs(time - 0) &lt; 1e-6 then step_voltage else oxmeta:membrane_voltage">1e-6</m:cn>
                    </m:apply>
                  </m:piece>
                  <m:otherwise>
                    <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:79:79&#9;                        if MathML:abs(time - 0) &lt; 1e-6 then step_voltage else oxmeta:membrane_voltage">oxmeta:membrane_voltage</m:ci>
                  </m:otherwise>
                </m:piecewise>
              </proto:value>
            </proto:setVariable>
          </proto:modifiers>
        </proto:timecourseSimulation>
      </proto:nestedSimulation>
    </proto:nestedSimulation>
  </proto:simulations>
  <proto:post-processing proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:86:1&#9;post-processing {">
    <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:86:1&#9;post-processing {">
      <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/statementList" proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:86:1&#9;post-processing {"/>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:88:5&#9;    assert sim:time.IS_ARRAY">
        <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert" proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:88:5&#9;    assert sim:time.IS_ARRAY"/>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:88:12&#9;    assert sim:time.IS_ARRAY">
          <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/accessor" proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:88:12&#9;    assert sim:time.IS_ARRAY">IS_ARRAY</m:csymbol>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:88:12&#9;    assert sim:time.IS_ARRAY">sim:time</m:ci>
        </m:apply>
      </m:apply>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:89:5&#9;    assert sim:membrane_voltage.IS_ARRAY">
        <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert" proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:89:5&#9;    assert sim:membrane_voltage.IS_ARRAY"/>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:89:12&#9;    assert sim:membrane_voltage.IS_ARRAY">
          <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/accessor" proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:89:12&#9;    assert sim:membrane_voltage.IS_ARRAY">IS_ARRAY</m:csymbol>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:89:12&#9;    assert sim:membrane_voltage.IS_ARRAY">sim:membrane_voltage</m:ci>
        </m:apply>
      </m:apply>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:90:5&#9;    assert sim:membrane_L_type_calcium_current.IS_ARRAY">
        <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert" proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:90:5&#9;    assert sim:membrane_L_type_calcium_current.IS_ARRAY"/>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:90:12&#9;    assert sim:membrane_L_type_calcium_current.IS_ARRAY">
          <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/accessor" proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:90:12&#9;    assert sim:membrane_L_type_calcium_current.IS_ARRAY">IS_ARRAY</m:csymbol>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:90:12&#9;    assert sim:membrane_L_type_calcium_current.IS_ARRAY">sim:membrane_L_type_calcium_current</m:ci>
        </m:apply>
      </m:apply>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:93:5&#9;    membrane_L_type_calcium_tail_current = std:After(sim:membrane_L_type_calcium_current, sim:time, 0, default)">
        <m:eq/>
        <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:93:5&#9;    membrane_L_type_calcium_tail_current = std:After(sim:membrane_L_type_calcium_current, sim:time, 0, default)">membrane_L_type_calcium_tail_current</m:ci>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:93:44&#9;    membrane_L_type_calcium_tail_current = std:After(sim:membrane_L_type_calcium_current, sim:time, 0, default)">
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:93:44&#9;    membrane_L_type_calcium_tail_current = std:After(sim:membrane_L_type_calcium_current, sim:time, 0, default)">std:After</m:ci>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:93:54&#9;    membrane_L_type_calcium_tail_current = std:After(sim:membrane_L_type_calcium_current, sim:time, 0, default)">sim:membrane_L_type_calcium_current</m:ci>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:93:91&#9;    membrane_L_type_calcium_tail_current = std:After(sim:membrane_L_type_calcium_current, sim:time, 0, default)">sim:time</m:ci>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:93:101&#9;    membrane_L_type_calcium_tail_current = std:After(sim:membrane_L_type_calcium_current, sim:time, 0, default)">0</m:cn>
          <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/defaultParameter" proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:93:104&#9;    membrane_L_type_calcium_tail_current = std:After(sim:membrane_L_type_calcium_current, sim:time, 0, default)"/>
        </m:apply>
      </m:apply>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:96:5&#9;    min_LCC = std:RemoveDim(std:Min(membrane_L_type_calcium_tail_current, default), 2)">
        <m:eq/>
        <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:96:5&#9;    min_LCC = std:RemoveDim(std:Min(membrane_L_type_calcium_tail_current, default), 2)">min_LCC</m:ci>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:96:15&#9;    min_LCC = std:RemoveDim(std:Min(membrane_L_type_calcium_tail_current, default), 2)">
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:96:15&#9;    min_LCC = std:RemoveDim(std:Min(membrane_L_type_calcium_tail_current, default), 2)">std:RemoveDim</m:ci>
          <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:96:29&#9;    min_LCC = std:RemoveDim(std:Min(membrane_L_type_calcium_tail_current, default), 2)">
            <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:96:29&#9;    min_LCC = std:RemoveDim(std:Min(membrane_L_type_calcium_tail_current, default), 2)">std:Min</m:ci>
            <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:96:37&#9;    min_LCC = std:RemoveDim(std:Min(membrane_L_type_calcium_tail_current, default), 2)">membrane_L_type_calcium_tail_current</m:ci>
            <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/defaultParameter" proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:96:75&#9;    min_LCC = std:RemoveDim(std:Min(membrane_L_type_calcium_tail_current, default), 2)"/>
          </m:apply>
          <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:96:85&#9;    min_LCC = std:RemoveDim(std:Min(membrane_L_type_calcium_tail_current, default), 2)">2</m:cn>
        </m:apply>
      </m:apply>
      <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:100:5&#9;    final_membrane_voltage = sim:membrane_voltage[2$-1][0$0][*$:]">
        <m:eq/>
        <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:100:5&#9;    final_membrane_voltage = sim:membrane_voltage[2$-1][0$0][*$:]">final_membrane_voltage</m:ci>
        <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:100:30&#9;    final_membrane_voltage = sim:membrane_voltage[2$-1][0$0][*$:]">
          <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/view" proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:100:30&#9;    final_membrane_voltage = sim:membrane_voltage[2$-1][0$0][*$:]"/>
          <m:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:100:30&#9;    final_membrane_voltage = sim:membrane_voltage[2$-1][0$0][*$:]">sim:membrane_voltage</m:ci>
          <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:100:30&#9;    final_membrane_voltage = sim:membrane_voltage[2$-1][0$0][*$:]">
            <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
            <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:100:51&#9;    final_membrane_voltage = sim:membrane_voltage[2$-1][0$0][*$:]">2</m:cn>
            <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:100:53&#9;    final_membrane_voltage = sim:membrane_voltage[2$-1][0$0][*$:]">
              <m:minus/>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:100:54&#9;    final_membrane_voltage = sim:membrane_voltage[2$-1][0$0][*$:]">1</m:cn>
            </m:apply>
            <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:100:30&#9;    final_membrane_voltage = sim:membrane_voltage[2$-1][0$0][*$:]">0</m:cn>
            <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:100:53&#9;    final_membrane_voltage = sim:membrane_voltage[2$-1][0$0][*$:]">
              <m:minus/>
              <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:100:54&#9;    final_membrane_voltage = sim:membrane_voltage[2$-1][0$0][*$:]">1</m:cn>
            </m:apply>
          </m:apply>
          <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:100:30&#9;    final_membrane_voltage = sim:membrane_voltage[2$-1][0$0][*$:]">
            <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
            <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:100:57&#9;    final_membrane_voltage = sim:membrane_voltage[2$-1][0$0][*$:]">0</m:cn>
            <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:100:59&#9;    final_membrane_voltage = sim:membrane_voltage[2$-1][0$0][*$:]">0</m:cn>
            <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:100:30&#9;    final_membrane_voltage = sim:membrane_voltage[2$-1][0$0][*$:]">0</m:cn>
            <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:100:59&#9;    final_membrane_voltage = sim:membrane_voltage[2$-1][0$0][*$:]">0</m:cn>
          </m:apply>
          <m:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:100:30&#9;    final_membrane_voltage = sim:membrane_voltage[2$-1][0$0][*$:]">
            <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
            <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:100:30&#9;    final_membrane_voltage = sim:membrane_voltage[2$-1][0$0][*$:]"/>
            <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:100:30&#9;    final_membrane_voltage = sim:membrane_voltage[2$-1][0$0][*$:]"/>
            <m:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:100:30&#9;    final_membrane_voltage = sim:membrane_voltage[2$-1][0$0][*$:]">1</m:cn>
            <m:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:100:30&#9;    final_membrane_voltage = sim:membrane_voltage[2$-1][0$0][*$:]"/>
          </m:apply>
        </m:apply>
      </m:apply>
    </m:apply>
  </proto:post-processing>
  <proto:outputVariables proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:103:1&#9;outputs {">
    <proto:raw ref="sim:extracellular_calcium_concentration" name="extracellular_calcium_concentration" description="Extracellular calcium concentration" proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:104:5&#9;    extracellular_calcium_concentration = sim:extracellular_calcium_concentration &quot;Extracellular calcium concentration&quot;"/>
    <proto:raw ref="sim:membrane_L_type_calcium_current" name="membrane_L_type_calcium_current" description="L-type calcium current" proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:105:5&#9;    membrane_L_type_calcium_current = sim:membrane_L_type_calcium_current &quot;L-type calcium current&quot;"/>
    <proto:raw ref="sim:membrane_voltage" name="membrane_voltage" description="Transmembrane potential" proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:106:5&#9;    membrane_voltage = sim:membrane_voltage &quot;Transmembrane potential&quot;"/>
    <proto:postprocessed units="{/Symbol m}A/cm^2" name="membrane_L_type_calcium_tail_current" description="I_{CaL} after test potential applied" proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:108:5&#9;    membrane_L_type_calcium_tail_current units uA_per_cm2 &quot;I_{CaL} after test potential applied&quot;"/>
    <proto:postprocessed units="{/Symbol m}A/cm^2" name="min_LCC" description="Minimum I_{CaL} current" proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:109:5&#9;    min_LCC units uA_per_cm2 &quot;Minimum I_{CaL} current&quot;"/>
    <proto:postprocessed units="mV" name="final_membrane_voltage" description="Test potential" proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:110:5&#9;    final_membrane_voltage units mV &quot;Test potential&quot;"/>
    <proto:postprocessed units="{/Symbol m}M" name="step_calcium_values" description="[Ca]_o" proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:111:5&#9;    step_calcium_values units uM &quot;[Ca]_o&quot;"/>
  </proto:outputVariables>
  <proto:plots proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:114:1&#9;plots {">
    <proto:plot proto:loc="projects/FunctionalCuration/test/protocols/compact/ICaL.txt:115:5&#9;    plot &quot;IV curve&quot; { min_LCC against final_membrane_voltage key step_calcium_values }">
      <proto:title>IV curve</proto:title>
      <proto:x>final_membrane_voltage</proto:x>
      <proto:y>min_LCC</proto:y>
      <proto:key>step_calcium_values</proto:key>
    </proto:plot>
  </proto:plots>
</proto:protocol>
