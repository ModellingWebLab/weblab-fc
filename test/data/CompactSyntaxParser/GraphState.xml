<?xml version='1.0' encoding='ASCII'?>
<proto:protocol xmlns:cellml="http://www.cellml.org/cellml/1.0#" xmlns:oxmeta="https://chaste.comlab.ox.ac.uk/cellml/ns/oxford-metadata#" xmlns:proto="https://chaste.cs.ox.ac.uk/nss/protocol/0.1#" xmlns="https://chaste.cs.ox.ac.uk/nss/protocol/0.1#" proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:1:1&#9;# Compact syntax version of the GraphState protocol">
  <proto:import source="../../../src/proto/library/BasicLibrary.xml" mergeDefinitions="true" proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:7:1&#9;import &quot;../../../src/proto/library/BasicLibrary.xml&quot;"/>
  <proto:units proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:9:1&#9;units {">
    <cellml:units name="ms" proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:10:5&#9;    ms = milli second">
      <cellml:unit units="second" prefix="milli" proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:10:10&#9;    ms = milli second"/>
    </cellml:units>
  </proto:units>
  <proto:simulations proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:13:1&#9;tasks {">
    <proto:timecourseSimulation proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:14:5&#9;    simulation sim = timecourse {" prefix="sim">
      <proto:uniformStepper units="ms" name="time" proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:15:9&#9;        range time units ms uniform 0:1:1000">
        <proto:start>
          <ns0:cn xmlns:ns0="http://www.w3.org/1998/Math/MathML" proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:15:37&#9;        range time units ms uniform 0:1:1000">0</ns0:cn>
        </proto:start>
        <proto:stop>
          <ns0:cn xmlns:ns0="http://www.w3.org/1998/Math/MathML" proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:15:41&#9;        range time units ms uniform 0:1:1000">1000</ns0:cn>
        </proto:stop>
        <proto:step>
          <ns0:cn xmlns:ns0="http://www.w3.org/1998/Math/MathML" proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:15:39&#9;        range time units ms uniform 0:1:1000">1</ns0:cn>
        </proto:step>
      </proto:uniformStepper>
      <proto:modifiers proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:14:22&#9;    simulation sim = timecourse {"/>
    </proto:timecourseSimulation>
  </proto:simulations>
  <proto:post-processing proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:19:1&#9;post-processing {">
    <ns0:apply xmlns:ns0="http://www.w3.org/1998/Math/MathML" proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:19:1&#9;post-processing {">
      <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/statementList" proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:19:1&#9;post-processing {"/>
      <ns0:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:20:5&#9;    state_trans = Transpose(sim:state_variable)">
        <ns0:eq/>
        <ns0:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:20:5&#9;    state_trans = Transpose(sim:state_variable)">state_trans</ns0:ci>
        <ns0:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:20:19&#9;    state_trans = Transpose(sim:state_variable)">
          <ns0:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:20:19&#9;    state_trans = Transpose(sim:state_variable)">Transpose</ns0:ci>
          <ns0:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:20:29&#9;    state_trans = Transpose(sim:state_variable)">sim:state_variable</ns0:ci>
        </ns0:apply>
      </ns0:apply>
      <ns0:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:23:5&#9;    assert sim:state_variable.NUM_DIMS == state_trans.NUM_DIMS">
        <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert" proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:23:5&#9;    assert sim:state_variable.NUM_DIMS == state_trans.NUM_DIMS"/>
        <ns0:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:23:12&#9;    assert sim:state_variable.NUM_DIMS == state_trans.NUM_DIMS">
          <ns0:eq/>
          <ns0:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:23:12&#9;    assert sim:state_variable.NUM_DIMS == state_trans.NUM_DIMS">
            <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/accessor" proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:23:12&#9;    assert sim:state_variable.NUM_DIMS == state_trans.NUM_DIMS">NUM_DIMS</ns0:csymbol>
            <ns0:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:23:12&#9;    assert sim:state_variable.NUM_DIMS == state_trans.NUM_DIMS">sim:state_variable</ns0:ci>
          </ns0:apply>
          <ns0:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:23:43&#9;    assert sim:state_variable.NUM_DIMS == state_trans.NUM_DIMS">
            <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/accessor" proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:23:43&#9;    assert sim:state_variable.NUM_DIMS == state_trans.NUM_DIMS">NUM_DIMS</ns0:csymbol>
            <ns0:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:23:43&#9;    assert sim:state_variable.NUM_DIMS == state_trans.NUM_DIMS">state_trans</ns0:ci>
          </ns0:apply>
        </ns0:apply>
      </ns0:apply>
      <ns0:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:24:5&#9;    assert sim:state_variable.SHAPE[0] == state_trans.SHAPE[1]">
        <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert" proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:24:5&#9;    assert sim:state_variable.SHAPE[0] == state_trans.SHAPE[1]"/>
        <ns0:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:24:12&#9;    assert sim:state_variable.SHAPE[0] == state_trans.SHAPE[1]">
          <ns0:eq/>
          <ns0:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:24:12&#9;    assert sim:state_variable.SHAPE[0] == state_trans.SHAPE[1]">
            <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/view" proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:24:12&#9;    assert sim:state_variable.SHAPE[0] == state_trans.SHAPE[1]"/>
            <ns0:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:24:12&#9;    assert sim:state_variable.SHAPE[0] == state_trans.SHAPE[1]">
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/accessor" proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:24:12&#9;    assert sim:state_variable.SHAPE[0] == state_trans.SHAPE[1]">SHAPE</ns0:csymbol>
              <ns0:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:24:12&#9;    assert sim:state_variable.SHAPE[0] == state_trans.SHAPE[1]">sim:state_variable</ns0:ci>
            </ns0:apply>
            <ns0:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:24:12&#9;    assert sim:state_variable.SHAPE[0] == state_trans.SHAPE[1]">
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
              <ns0:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:24:37&#9;    assert sim:state_variable.SHAPE[0] == state_trans.SHAPE[1]">0</ns0:cn>
              <ns0:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:24:12&#9;    assert sim:state_variable.SHAPE[0] == state_trans.SHAPE[1]">0</ns0:cn>
              <ns0:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:24:37&#9;    assert sim:state_variable.SHAPE[0] == state_trans.SHAPE[1]">0</ns0:cn>
            </ns0:apply>
            <ns0:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:24:12&#9;    assert sim:state_variable.SHAPE[0] == state_trans.SHAPE[1]">
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:24:12&#9;    assert sim:state_variable.SHAPE[0] == state_trans.SHAPE[1]"/>
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:24:12&#9;    assert sim:state_variable.SHAPE[0] == state_trans.SHAPE[1]"/>
              <ns0:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:24:12&#9;    assert sim:state_variable.SHAPE[0] == state_trans.SHAPE[1]">1</ns0:cn>
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:24:12&#9;    assert sim:state_variable.SHAPE[0] == state_trans.SHAPE[1]"/>
            </ns0:apply>
          </ns0:apply>
          <ns0:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:24:43&#9;    assert sim:state_variable.SHAPE[0] == state_trans.SHAPE[1]">
            <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/view" proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:24:43&#9;    assert sim:state_variable.SHAPE[0] == state_trans.SHAPE[1]"/>
            <ns0:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:24:43&#9;    assert sim:state_variable.SHAPE[0] == state_trans.SHAPE[1]">
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/accessor" proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:24:43&#9;    assert sim:state_variable.SHAPE[0] == state_trans.SHAPE[1]">SHAPE</ns0:csymbol>
              <ns0:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:24:43&#9;    assert sim:state_variable.SHAPE[0] == state_trans.SHAPE[1]">state_trans</ns0:ci>
            </ns0:apply>
            <ns0:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:24:43&#9;    assert sim:state_variable.SHAPE[0] == state_trans.SHAPE[1]">
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
              <ns0:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:24:61&#9;    assert sim:state_variable.SHAPE[0] == state_trans.SHAPE[1]">1</ns0:cn>
              <ns0:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:24:43&#9;    assert sim:state_variable.SHAPE[0] == state_trans.SHAPE[1]">0</ns0:cn>
              <ns0:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:24:61&#9;    assert sim:state_variable.SHAPE[0] == state_trans.SHAPE[1]">1</ns0:cn>
            </ns0:apply>
            <ns0:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:24:43&#9;    assert sim:state_variable.SHAPE[0] == state_trans.SHAPE[1]">
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:24:43&#9;    assert sim:state_variable.SHAPE[0] == state_trans.SHAPE[1]"/>
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:24:43&#9;    assert sim:state_variable.SHAPE[0] == state_trans.SHAPE[1]"/>
              <ns0:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:24:43&#9;    assert sim:state_variable.SHAPE[0] == state_trans.SHAPE[1]">1</ns0:cn>
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:24:43&#9;    assert sim:state_variable.SHAPE[0] == state_trans.SHAPE[1]"/>
            </ns0:apply>
          </ns0:apply>
        </ns0:apply>
      </ns0:apply>
      <ns0:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:25:5&#9;    assert sim:state_variable.SHAPE[1] == state_trans.SHAPE[0]">
        <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert" proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:25:5&#9;    assert sim:state_variable.SHAPE[1] == state_trans.SHAPE[0]"/>
        <ns0:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:25:12&#9;    assert sim:state_variable.SHAPE[1] == state_trans.SHAPE[0]">
          <ns0:eq/>
          <ns0:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:25:12&#9;    assert sim:state_variable.SHAPE[1] == state_trans.SHAPE[0]">
            <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/view" proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:25:12&#9;    assert sim:state_variable.SHAPE[1] == state_trans.SHAPE[0]"/>
            <ns0:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:25:12&#9;    assert sim:state_variable.SHAPE[1] == state_trans.SHAPE[0]">
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/accessor" proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:25:12&#9;    assert sim:state_variable.SHAPE[1] == state_trans.SHAPE[0]">SHAPE</ns0:csymbol>
              <ns0:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:25:12&#9;    assert sim:state_variable.SHAPE[1] == state_trans.SHAPE[0]">sim:state_variable</ns0:ci>
            </ns0:apply>
            <ns0:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:25:12&#9;    assert sim:state_variable.SHAPE[1] == state_trans.SHAPE[0]">
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
              <ns0:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:25:37&#9;    assert sim:state_variable.SHAPE[1] == state_trans.SHAPE[0]">1</ns0:cn>
              <ns0:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:25:12&#9;    assert sim:state_variable.SHAPE[1] == state_trans.SHAPE[0]">0</ns0:cn>
              <ns0:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:25:37&#9;    assert sim:state_variable.SHAPE[1] == state_trans.SHAPE[0]">1</ns0:cn>
            </ns0:apply>
            <ns0:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:25:12&#9;    assert sim:state_variable.SHAPE[1] == state_trans.SHAPE[0]">
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:25:12&#9;    assert sim:state_variable.SHAPE[1] == state_trans.SHAPE[0]"/>
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:25:12&#9;    assert sim:state_variable.SHAPE[1] == state_trans.SHAPE[0]"/>
              <ns0:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:25:12&#9;    assert sim:state_variable.SHAPE[1] == state_trans.SHAPE[0]">1</ns0:cn>
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:25:12&#9;    assert sim:state_variable.SHAPE[1] == state_trans.SHAPE[0]"/>
            </ns0:apply>
          </ns0:apply>
          <ns0:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:25:43&#9;    assert sim:state_variable.SHAPE[1] == state_trans.SHAPE[0]">
            <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/view" proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:25:43&#9;    assert sim:state_variable.SHAPE[1] == state_trans.SHAPE[0]"/>
            <ns0:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:25:43&#9;    assert sim:state_variable.SHAPE[1] == state_trans.SHAPE[0]">
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/accessor" proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:25:43&#9;    assert sim:state_variable.SHAPE[1] == state_trans.SHAPE[0]">SHAPE</ns0:csymbol>
              <ns0:ci proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:25:43&#9;    assert sim:state_variable.SHAPE[1] == state_trans.SHAPE[0]">state_trans</ns0:ci>
            </ns0:apply>
            <ns0:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:25:43&#9;    assert sim:state_variable.SHAPE[1] == state_trans.SHAPE[0]">
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
              <ns0:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:25:61&#9;    assert sim:state_variable.SHAPE[1] == state_trans.SHAPE[0]">0</ns0:cn>
              <ns0:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:25:43&#9;    assert sim:state_variable.SHAPE[1] == state_trans.SHAPE[0]">0</ns0:cn>
              <ns0:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:25:61&#9;    assert sim:state_variable.SHAPE[1] == state_trans.SHAPE[0]">0</ns0:cn>
            </ns0:apply>
            <ns0:apply proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:25:43&#9;    assert sim:state_variable.SHAPE[1] == state_trans.SHAPE[0]">
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:25:43&#9;    assert sim:state_variable.SHAPE[1] == state_trans.SHAPE[0]"/>
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:25:43&#9;    assert sim:state_variable.SHAPE[1] == state_trans.SHAPE[0]"/>
              <ns0:cn proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:25:43&#9;    assert sim:state_variable.SHAPE[1] == state_trans.SHAPE[0]">1</ns0:cn>
              <ns0:csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null" proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:25:43&#9;    assert sim:state_variable.SHAPE[1] == state_trans.SHAPE[0]"/>
            </ns0:apply>
          </ns0:apply>
        </ns0:apply>
      </ns0:apply>
    </ns0:apply>
  </proto:post-processing>
  <proto:outputs proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:28:1&#9;outputs {">
    <proto:raw ref="sim:state_variable" name="raw_state" description="State variables (raw)" proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:29:5&#9;    raw_state = sim:state_variable &quot;State variables (raw)&quot;"/>
    <proto:raw ref="sim:time" name="time" description="Time" proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:30:5&#9;    time = sim:time &quot;Time&quot;"/>
    <proto:postprocessed units="various" ref="state_trans" name="state" description="State variables" proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:31:5&#9;    state = state_trans units various &quot;State variables&quot;"/>
  </proto:outputs>
  <proto:plots proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:34:1&#9;plots {">
    <proto:plot proto:loc="projects/FunctionalCuration/test/protocols/compact/GraphState.txt:35:5&#9;    plot &quot;State variables&quot; { state against time }">
      <proto:title>State variables</proto:title>
      <proto:x>time</proto:x>
      <proto:y>state</proto:y>
    </proto:plot>
  </proto:plots>
</proto:protocol>
