<?xml version="1.0"?>
<?xml-model href="../../src/proto/parsing/protocol.rnc" type="application/relax-ng-compact-syntax"?>
<protocol xmlns="https://chaste.cs.ox.ac.uk/nss/protocol/0.1#"
    xmlns:cellml="http://www.cellml.org/cellml/1.0#"
    xmlns:oxmeta="https://chaste.comlab.ox.ac.uk/cellml/ns/oxford-metadata#">
    <!-- Declare protocol inputs with default values -->
    <inputs>
        <apply xmlns="http://www.w3.org/1998/Math/MathML">
            <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/statementList"/>
            <apply><eq/>
                <ci>pacing_period</ci>
                <cn>1000</cn>
            </apply>
            <apply><eq/>
                <ci>steady_state_beats</ci>
                <cn>1000</cn>
            </apply>            
        </apply>    
    </inputs>
    
    <import source="../../src/proto/library/BasicLibrary.xml" mergeDefinitions="true"/>
    <import source="../../src/proto/library/CardiacLibrary.xml" mergeDefinitions="true"/>
     
    <units>
        <cellml:units name="mV">
            <cellml:unit units="volt" prefix="milli"/>
        </cellml:units>
        <cellml:units name="ms">
            <cellml:unit units="second" prefix="milli"/>
        </cellml:units>
    </units>
    
    <modelInterface>
        <!-- Here we've commented out the stimulus end time because we don't ever want it to finish, for other protocols you might want to re-include it. -->
        <!-- <specifyInputVariable name="oxmeta:membrane_stimulus_current_end" units="ms" initial_value="100000000000"/> -->
        <specifyInputVariable name="oxmeta:membrane_stimulus_current_offset" units="ms" initial_value="10"/>
        <specifyInputVariable name="oxmeta:membrane_stimulus_current_period" units="ms" initial_value="1000"/>
        <specifyOutputVariable name="oxmeta:membrane_voltage" units="mV"/>
        <specifyOutputVariable name="oxmeta:time" units="ms"/>
        <addOrReplaceEquation>
            <apply xmlns="http://www.w3.org/1998/Math/MathML"><eq/>
                <ci>oxmeta:membrane_stimulus_current</ci>
                <piecewise>
                    <piece>
                        <ci>oxmeta:membrane_stimulus_current_amplitude</ci>
                        <apply><and/>
                            <apply><geq/>
                                <ci>oxmeta:time</ci>
                                <ci>oxmeta:membrane_stimulus_current_offset</ci>
                            </apply>
                        <!--<apply><leq/>
                                <ci>oxmeta:time</ci>
                                <ci>oxmeta:membrane_stimulus_current_end</ci>
                            </apply> -->
                            <apply><leq/>
                                <apply><minus/>
                                    <apply><minus/>
                                        <ci>oxmeta:time</ci>
                                        <ci>oxmeta:membrane_stimulus_current_offset</ci>
                                    </apply>
                                    <apply><times/>
                                        <apply><floor/>
                                            <apply><divide/>
                                                <apply><minus/>
                                                    <ci>oxmeta:time</ci>
                                                    <ci>oxmeta:membrane_stimulus_current_offset</ci>
                                                </apply>
                                                <ci>oxmeta:membrane_stimulus_current_period</ci>
                                            </apply>
                                        </apply>
                                        <ci>oxmeta:membrane_stimulus_current_period</ci>
                                    </apply>
                                </apply>
                                <ci>oxmeta:membrane_stimulus_current_duration</ci>
                            </apply>
                        </apply>
                    </piece>
                    <otherwise>
                        <apply><times/>
                            <cn cellml:units="dimensionless">0</cn>
                            <ci>oxmeta:membrane_stimulus_current_amplitude</ci>
                        </apply>
                    </otherwise>
                </piecewise>
            </apply>
        </addOrReplaceEquation>
    </modelInterface>

    <simulations>
        <!-- Do a pre-run to get the model to steady-state with the desired S1 stimulus -->
        <timecourseSimulation>
            <vectorStepper name="time" units="ms">
                <value>0</value>
                <apply xmlns="http://www.w3.org/1998/Math/MathML"><times/>
                    <ci>pacing_period</ci>
                    <ci>steady_state_beats</ci>
                </apply>
            </vectorStepper>
            <modifiers>
                <!-- Set stimulus period to S1 interval, offset 10ms -->                    
                <setVariable>
                    <when>AT_START_ONLY</when>
                    <name>oxmeta:membrane_stimulus_current_period</name><!-- ms -->
                    <value>
                        <ci xmlns="http://www.w3.org/1998/Math/MathML">pacing_period</ci>
                    </value>
                </setVariable>                 
                <setVariable>
                    <when>AT_START_ONLY</when>
                    <name>oxmeta:membrane_stimulus_current_offset</name><!-- ms -->
                    <value>
                        <cn xmlns="http://www.w3.org/1998/Math/MathML">10</cn>
                    </value>
                </setVariable>
                <saveState>
                    <when>AT_END</when>
                    <name>initial_state</name>
                </saveState>
            </modifiers>
        </timecourseSimulation>
        
        <!-- Now do the part when we will examine the last two action potentials, i.e. two stimului -->
        <timecourseSimulation prefix="sim">
            <uniformStepper name="time" units="ms">
                <start>0</start>
                <stop>
                    <ci xmlns="http://www.w3.org/1998/Math/MathML">pacing_period</ci>
                </stop>                
                <step>0.1</step> <!-- Get a good amount of detail for the APD calculation -->
            </uniformStepper>
	        <modifiers>
	            <resetState> <!-- At the beginning of the final AP simulation load up the state variables from the long run to steady state -->
	                <when>AT_START_ONLY</when>
	                <state>initial_state</state>
	            </resetState>
			</modifiers>
        </timecourseSimulation>
    </simulations>
    
    <post-processing>
        <apply xmlns="http://www.w3.org/1998/Math/MathML">
            <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/statementList"/>
            
            <!-- Test that expected model outputs exist -->
            <apply>
                <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert"/>
                <apply>
                    <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/accessor">IS_ARRAY</csymbol>
                    <ci>sim:time</ci>
                </apply>
            </apply>
            <apply>
                <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert"/>
                <apply>
                    <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/accessor">IS_ARRAY</csymbol>
                    <ci>sim:membrane_voltage</ci>
                </apply>
            </apply>
            
            <!-- Compute APD90 -->
            <apply><eq/>
                <ci>apd90</ci>
                <apply><ci>Apd</ci>
                    <ci>sim:membrane_voltage</ci>
                    <ci>sim:time</ci>
                    <cn>90</cn>
                </apply>
            </apply>
           
            <!-- Get the peak voltage -->
            <apply><eq/>
                <ci>peak_voltage</ci>
                <apply><ci>Max</ci>
                    <ci>sim:membrane_voltage</ci>
                </apply>
            </apply>
        </apply>
    </post-processing>
    
    <outputVariables>
        <raw ref="sim:membrane_voltage" name="membrane_voltage" description="Transmembrane potential in milliVolts"/>
        <raw ref="sim:time" name="time" description="Time in milliseconds"/>       
        
        <postprocessed name="peak_voltage" units="mV"/>
        <postprocessed name="apd90" units="ms"/>
    </outputVariables>
    
    <plots>
        <plot>
            <title>Steady State Action Potential</title>
            <x>time</x>
            <y>membrane_voltage</y>
        </plot>
    </plots>
</protocol>
