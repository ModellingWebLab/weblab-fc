<?xml version="1.0"?>
<?xml-model href="../../../src/proto/parsing/protocol.rnc" type="application/relax-ng-compact-syntax"?>
<protocol xmlns="https://chaste.cs.ox.ac.uk/nss/protocol/0.1#"
    xmlns:cellml="http://www.cellml.org/cellml/1.0#"
    xmlns:oxmeta="https://chaste.comlab.ox.ac.uk/cellml/ns/oxford-metadata#">
    <!-- Declare protocol inputs with default values -->
    <inputs>
        <apply xmlns="http://www.w3.org/1998/Math/MathML">
            <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/statementList"/>
            <apply><eq/>
                <ci>pacing_period</ci>
                <cn>1000</cn>
            </apply>
            <apply><eq/>
                <ci>steady_state_beats</ci>
                <cn>1</cn>
            </apply>            
        </apply>    
    </inputs>
    
    <import source="../../../src/proto/library/BasicLibrary.xml" mergeDefinitions="true"/>
    <import source="../../../src/proto/library/CardiacLibrary.xml" mergeDefinitions="true"/>
     
    <units>
        <cellml:units name="mV">
            <cellml:unit units="volt" prefix="milli"/>
        </cellml:units>
        <cellml:units name="ms">
            <cellml:unit units="second" prefix="milli"/>
        </cellml:units>
    </units>
    
    <modelInterface>
        <!-- Here we've commented out the stimulus end time because we don't ever want it to finish, for other protocols you might want to re-include it. -->
        <!-- <specifyInputVariable name="oxmeta:membrane_stimulus_current_end" units="ms" initial_value="100000000000"/> -->
        <specifyInputVariable name="oxmeta:membrane_stimulus_current_offset" units="ms" initial_value="10"/>
        <specifyInputVariable name="oxmeta:membrane_stimulus_current_period" units="ms" initial_value="1000"/>
        <specifyOutputVariable name="oxmeta:membrane_voltage" units="mV"/>
        <specifyOutputVariable name="oxmeta:time" units="ms"/>
        <specifyOutputVariable name="oxmeta:state_variable"/>
        <addOrReplaceEquation>
            <apply xmlns="http://www.w3.org/1998/Math/MathML"><eq/>
                <ci>oxmeta:membrane_stimulus_current</ci>
                <piecewise>
                    <piece>
                        <ci>oxmeta:membrane_stimulus_current_amplitude</ci>
                        <apply><and/>
                            <apply><geq/>
                                <ci>oxmeta:time</ci>
                                <ci>oxmeta:membrane_stimulus_current_offset</ci>
                            </apply>
                        <!--<apply><leq/>
                                <ci>oxmeta:time</ci>
                                <ci>oxmeta:membrane_stimulus_current_end</ci>
                            </apply> -->
                            <apply><leq/>
                                <apply><minus/>
                                    <apply><minus/>
                                        <ci>oxmeta:time</ci>
                                        <ci>oxmeta:membrane_stimulus_current_offset</ci>
                                    </apply>
                                    <apply><times/>
                                        <apply><floor/>
                                            <apply><divide/>
                                                <apply><minus/>
                                                    <ci>oxmeta:time</ci>
                                                    <ci>oxmeta:membrane_stimulus_current_offset</ci>
                                                </apply>
                                                <ci>oxmeta:membrane_stimulus_current_period</ci>
                                            </apply>
                                        </apply>
                                        <ci>oxmeta:membrane_stimulus_current_period</ci>
                                    </apply>
                                </apply>
                                <ci>oxmeta:membrane_stimulus_current_duration</ci>
                            </apply>
                        </apply>
                    </piece>
                    <otherwise>
                        <apply><times/>
                            <cn cellml:units="dimensionless">0</cn>
                            <ci>oxmeta:membrane_stimulus_current_amplitude</ci>
                        </apply>
                    </otherwise>
                </piecewise>
            </apply>
        </addOrReplaceEquation>
    </modelInterface>

    <simulations>
        <!-- Do a pre-run to get the model to steady-state with the desired S1 stimulus -->
        <timecourseSimulation prefix="sim">
            <vectorStepper name="time" units="ms">
                <value>0</value>
                <apply xmlns="http://www.w3.org/1998/Math/MathML"><times/>
                    <ci>pacing_period</ci>
                    <ci>steady_state_beats</ci>
                </apply>
            </vectorStepper>
            <modifiers>
                <!-- Set stimulus period to S1 interval, offset 10ms -->                    
                <setVariable>
                    <when>AT_START_ONLY</when>
                    <name>oxmeta:membrane_stimulus_current_period</name><!-- ms -->
                    <value>
                        <ci xmlns="http://www.w3.org/1998/Math/MathML">pacing_period</ci>
                    </value>
                </setVariable>                 
                <setVariable>
                    <when>AT_START_ONLY</when>
                    <name>oxmeta:membrane_stimulus_current_offset</name><!-- ms -->
                    <value>
                        <cn xmlns="http://www.w3.org/1998/Math/MathML">10</cn>
                    </value>
                </setVariable>
            </modifiers>
        </timecourseSimulation> 
    </simulations>
    
    <post-processing>
        <apply xmlns="http://www.w3.org/1998/Math/MathML">
            <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/statementList"/>
            
            <!-- Test that expected model outputs exist -->
            <apply>
                <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert"/>
                <apply>
                    <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/accessor">IS_ARRAY</csymbol>
                    <ci>sim:time</ci>
                </apply>
            </apply>
            <apply>
                <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert"/>
                <apply>
                    <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/accessor">IS_ARRAY</csymbol>
                    <ci>sim:membrane_voltage</ci>
                </apply>
            </apply>
            <apply>
                <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert"/>
                <apply>
                    <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/accessor">IS_ARRAY</csymbol>
                    <ci>sim:state_variable</ci>
                </apply>
            </apply>
            
            
            <!-- Initial state variables -->
            <apply><eq/>
                <ci>initial_state_variables</ci>
                <apply>
                    <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/view"/>
                    <ci>sim:state_variable</ci>
                    <apply>
                        <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
                        <cn>0</cn> <!-- Dimension for this 'range' specification -->
                        <cn>0</cn> <!-- Start -->
                        <cn>0</cn> <!-- Step -->
                        <cn>0</cn> <!-- End -->
                    </apply>
                    <apply> <!-- In the dimension we are not interested in we take everything with step 1 -->
                        <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
                        <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null"/>
                        <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null"/>
                        <cn>1</cn>
                        <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null"/>
                    </apply>
                </apply>
            </apply>     
            
            <!-- Final state variables -->
            <apply><eq/>
                <ci>final_state_variables</ci>
                <apply><ci>Last</ci>
                    <ci>sim:state_variable</ci>
                    <cn>0</cn> <!-- along first dimension (last column) -->
                </apply>
            </apply>
            
            <!-- AbsMinus x y = map (|-|) x y -->
            <apply><eq/>
                <ci>AbsMinus</ci>
                <lambda>
                    <bvar><ci>x</ci></bvar>
                    <bvar><ci>y</ci></bvar>
                    <apply>
                        <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/map"/>
                        <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/wrap/1">abs</csymbol>
                        <apply>
                            <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/map"/>
                            <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/wrap/2">minus</csymbol>
                            <ci>x</ci>
                            <ci>y</ci>
                        </apply>
                    </apply>
                </lambda>
            </apply>            
           
            <!-- Work out the difference between the state variables-->
            <apply><eq/>
                <ci>difference_in_state_variables</ci>
                <apply>
                    <ci>AbsMinus</ci>
                    <ci>final_state_variables</ci>
                    <ci>initial_state_variables</ci>
                </apply>
            </apply>
            
            <!-- Work out the norm (p1) of the difference -->
            <apply><eq/>
                <ci>norm_of_differences</ci>
                <apply><ci>Last</ci> <!-- to reduce dimensionality of a 1,1 array to a single value -->
                    <apply>
                        <ci>Sum</ci>
                        <ci>difference_in_state_variables</ci>
                    </apply>
                </apply>            
            </apply>
            
        </apply>
    </post-processing>
    
    <outputVariables>
        <raw ref="sim:membrane_voltage" name="membrane_voltage" description="Transmembrane potential"/>
        <raw ref="sim:time" name="time" description="Time"/>       
        <raw ref="sim:state_variable" name="state_variables" description="All of the state variables"/>     
        
        <postprocessed name="norm_of_differences" units="mixed"/>
        <postprocessed name="difference_in_state_variables" units="mixed"/>
        <postprocessed name="initial_state_variables" units="mixed"/>
        <postprocessed name="final_state_variables" units="mixed"/>
        <postprocessed name="num_paces" units="dimensionless" ref="steady_state_beats" description="Number of paces simulated"/>
    </outputVariables>
    
    <plots>
        <plot>
            <title>Steady State Action Potential</title>
            <x>time</x>
            <y>membrane_voltage</y>
        </plot>
    </plots>
</protocol>
