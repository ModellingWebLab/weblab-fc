<?xml version="1.0"?>
<?xml-model href="../../src/proto/parsing/protocol.rnc" type="application/relax-ng-compact-syntax"?>
<protocol xmlns="https://chaste.cs.ox.ac.uk/nss/protocol/0.1#">
    <inputs>
        <apply xmlns="http://www.w3.org/1998/Math/MathML">
            <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/statementList"/>
            <apply><eq/>
                <ci>example_input</ci>
                <cn>0</cn>
            </apply>
        </apply>
    </inputs>
    <post-processing>
        <apply xmlns="http://www.w3.org/1998/Math/MathML">
            <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/statementList"/>
            <!-- sum = lambda a, dim=default: fold(mathml.plus, a, 0, dim) -->
            <apply><eq/>
                <ci>sum</ci>
                <lambda>
                    <bvar><ci>a</ci></bvar>
                    <semantics>
                        <bvar><ci>dim</ci></bvar>
                        <annotation-xml>
                            <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/defaultParameter"/>
                        </annotation-xml>
                    </semantics>
                    <apply>
                        <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/fold"/>
                        <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/wrap/2">plus</csymbol>
                        <ci>a</ci>
                        <cn>0</cn>
                        <ci>dim</ci>
                    </apply>
                </lambda>
            </apply>
            <!-- max = lambda a, dim: fold(mathml.max, a, default, dim) -->
            <apply><eq/>
                <ci>max</ci>
                <lambda>
                    <bvar><ci>a</ci></bvar>
                    <semantics>
                        <bvar><ci>dim</ci></bvar>
                        <annotation-xml>
                            <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/defaultParameter"/>
                        </annotation-xml>
                    </semantics>
                    <apply>
                        <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/fold"/>
                        <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/wrap/2">max</csymbol>
                        <ci>a</ci>
                        <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/defaultParameter"/>
                        <ci>dim</ci>
                    </apply>
                </lambda>
            </apply>
            <!-- input = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 } -->
            <apply><eq/>
                <ci>input</ci>
                <apply>
                    <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
                    <cn>1</cn>
                    <cn>2</cn>
                    <cn>3</cn>
                    <cn>4</cn>
                    <cn>5</cn>
                    <cn>6</cn>
                    <cn>7</cn>
                    <cn>8</cn>
                    <cn>9</cn>
                    <cn>10</cn>
                </apply>
            </apply>
            <!-- input_sum = sum(input) -->
            <apply><eq/>
                <ci>input_sum</ci>
                <apply>
                    <ci>sum</ci>
                    <ci>input</ci>
                </apply>
            </apply>
            <!-- input2d = { { 1, 3, 5 }, { 6, 4, 2 } } -->
            <apply><eq/>
                <ci>input2d</ci>
                <apply>
                    <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
                    <apply>
                        <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
                        <cn>1</cn>
                        <cn>3</cn>
                        <cn>5</cn>
                    </apply>
                    <apply>
                        <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
                        <cn>6</cn>
                        <cn>4</cn>
                        <cn>2</cn>
                    </apply>
                </apply>
            </apply>
            <!-- input2d_max = max(input2d, 0) -->
            <apply><eq/>
                <ci>input2d_max</ci>
                <apply>
                    <ci>max</ci>
                    <ci>input2d</ci>
                    <cn>0</cn>
                </apply>
            </apply>
            <!-- input2d_slice = input2d[<1>1:2] -->
            <apply><eq/>
                <ci>input2d_slice</ci>
                <apply>
                    <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/view"/>
                    <ci>input2d</ci>
                    <apply>
                        <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
                        <cn>1</cn> <!-- dim -->
                        <cn>1</cn> <!-- start -->
                        <cn>1</cn> <!-- stride -->
                        <cn>2</cn> <!-- end -->
                    </apply>
                    <apply>
                        <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
                        <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null"/> <!-- dim -->
                        <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null"/> <!-- start -->
                        <cn>1</cn> <!-- stride -->
                        <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null"/> <!-- end -->
                    </apply>
                </apply>
            </apply>
            <!-- input2 = { 1, 2, 3 } -->
            <apply><eq/>
                <ci>input2</ci>
                <apply>
                    <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
                    <cn>1</cn>
                    <cn>2</cn>
                    <cn>3</cn>
                </apply>
            </apply>
            <!-- map_result = map(mathml.plus, input2d_max[0][:], input2) -->
            <apply><eq/>
                <ci>map_result</ci>
                <apply>
                    <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/map"/>
                    <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/wrap/2">plus</csymbol>
                    <apply>
                        <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/view"/>
                        <ci>input2d_max</ci>
                        <apply>
                            <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
                            <cn>0</cn> <!-- dim -->
                            <cn>0</cn> <!-- start -->
                            <cn>0</cn> <!-- stride -->
                            <cn>0</cn> <!-- end -->
                        </apply>
                        <apply>
                            <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
                            <cn>1</cn> <!-- dim -->
                            <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null"/> <!-- start -->
                            <cn>1</cn> <!-- stride -->
                            <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null"/> <!-- end -->
                        </apply>
                    </apply>
                    <ci>input2</ci>
                </apply>
            </apply>
            <!-- adder = lambda input: map(mathml.plus, input, input2) -->
            <apply><eq/>
                <ci>adder</ci>
                <lambda>
                    <bvar><ci>input</ci></bvar>
                    <apply>
                        <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/map"/>
                        <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/wrap/2">plus</csymbol>
                        <ci>input</ci>
                        <ci>input2</ci>
                    </apply>
                </lambda>
            </apply>
            <!-- double_input2 = adder(input2) -->
            <apply><eq/>
                <ci>double_input2</ci>
                <apply>
                    <ci>adder</ci>
                    <ci>input2</ci>
                </apply>
            </apply>
            
            <!-- Testing If -->
            <!-- if (1, 2, 3) == 2 -->
            <apply>
                <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert"/>
                <apply><eq/>
                    <piecewise>
                        <piece>
                            <cn>2</cn>
                            <cn>1</cn>
                        </piece>
                        <otherwise>
                            <cn>3</cn>
                        </otherwise>
                    </piecewise>
                    <cn>2</cn>
                </apply>                
            </apply>
            <!-- if (0, 2, 3) == 3 -->
            <apply>
                <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert"/>
                <apply><eq/>
                    <piecewise>
                        <piece>
                            <cn>2</cn>
                            <cn>0</cn>
                        </piece>
                        <otherwise>
                            <cn>3</cn>
                        </otherwise>
                    </piecewise>
                    <cn>3</cn>
                </apply>                
            </apply>
            
            <!-- Testing array comprehensions (and more accessors) -->
            <!-- counting1d = { i for #0#i=0:10 } -->
            <apply><eq/>
                <ci>counting1d</ci>
                <apply>
                    <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
                    <domainofapplication>
                        <apply>
                            <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
                            <cn>0</cn> <!-- dim -->
                            <cn>0</cn> <!-- start -->
                            <cn>1</cn> <!-- stride -->
                            <cn>10</cn> <!-- end -->
                            <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/string">i</csymbol> <!-- var name -->
                        </apply>                        
                    </domainofapplication>
                    <ci>i</ci>
                </apply>
            </apply>
            <!-- Check array shape -->
            <apply>
                <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert"/>
                <apply><eq/>
                    <apply>
                        <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/accessor">NUM_DIMS</csymbol>
                        <ci>counting1d</ci>
                    </apply>
                    <cn>1</cn>
                </apply>
            </apply>
            <apply>
                <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert"/>
                <apply><eq/>
                    <apply>
                        <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/accessor">NUM_ELEMENTS</csymbol>
                        <ci>counting1d</ci>
                    </apply>
                    <cn>10</cn>
                </apply>
            </apply>
            <apply>
                <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert"/>
                <apply><eq/>
                    <apply>
                        <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/view"/>
                        <apply>
                            <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/accessor">SHAPE</csymbol>
                            <ci>counting1d</ci>
                        </apply>
                        <apply>
                            <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
                            <cn>0</cn> <!-- dim -->
                            <cn>0</cn> <!-- start -->
                            <cn>0</cn> <!-- stride -->
                            <cn>0</cn> <!-- end -->
                        </apply>
                    </apply>
                    <cn>10</cn>
                </apply>
            </apply>
            
            <!-- counting2d = { i * 3 + j for #0#i=1:3, #1#j=0:3 } -->
            <apply><eq/>
                <ci>counting2d</ci>
                <apply>
                    <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
                    <domainofapplication>
                        <apply>
                            <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
                            <cn>1</cn> <!-- dim -->
                            <cn>0</cn> <!-- start -->
                            <cn>1</cn> <!-- stride -->
                            <cn>3</cn> <!-- end -->
                            <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/string">j</csymbol> <!-- var name -->
                        </apply>                        
                        <apply>
                            <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
                            <cn>0</cn> <!-- dim -->
                            <cn>1</cn> <!-- start -->
                            <cn>1</cn> <!-- stride -->
                            <cn>3</cn> <!-- end -->
                            <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/string">i</csymbol> <!-- var name -->
                        </apply>                        
                    </domainofapplication>
                    <apply><plus/>
                        <apply><times/>
                            <ci>i</ci>
                            <cn>3</cn>
                        </apply>
                        <ci>j</ci>
                    </apply>
                </apply>
            </apply>
            <!-- Check array shape -->
            <apply>
                <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert"/>
                <apply><eq/>
                    <apply>
                        <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/accessor">NUM_DIMS</csymbol>
                        <ci>counting2d</ci>
                    </apply>
                    <cn>2</cn>
                </apply>
            </apply>
            <apply>
                <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert"/>
                <apply><eq/>
                    <apply>
                        <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/accessor">NUM_ELEMENTS</csymbol>
                        <ci>counting2d</ci>
                    </apply>
                    <cn>6</cn>
                </apply>
            </apply>
            <apply>
                <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert"/>
                <apply><eq/>
                    <apply>
                        <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/view"/>
                        <apply>
                            <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/accessor">SHAPE</csymbol>
                            <ci>counting2d</ci>
                        </apply>
                        <apply>
                            <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
                            <cn>0</cn> <!-- dim -->
                            <cn>0</cn> <!-- start -->
                            <cn>0</cn> <!-- stride -->
                            <cn>0</cn> <!-- end -->
                        </apply>
                    </apply>
                    <cn>2</cn>
                </apply>
            </apply>

            <!-- blocks = { {{-10+j,j},{10+j,20+j}} for #1#j=0:2 } -->
            <apply><eq/>
                <ci>blocks</ci>
                <apply>
                    <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
                    <domainofapplication>
                        <apply>
                            <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
                            <cn>1</cn> <!-- dim -->
                            <cn>0</cn> <!-- start -->
                            <cn>1</cn> <!-- stride -->
                            <cn>2</cn> <!-- end -->
                            <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/string">j</csymbol> <!-- var name -->
                        </apply>
                    </domainofapplication>
                    <apply>
                        <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
                        <apply>
                            <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
                            <apply><plus/><cn>-10</cn><ci>j</ci></apply>
                            <ci>j</ci>
                        </apply>
                        <apply>
                            <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
                            <apply><plus/><cn>10</cn><ci>j</ci></apply>
                            <apply><plus/><cn>20</cn><ci>j</ci></apply>
                        </apply>
                    </apply>
                </apply>
            </apply>
            <!-- Check array shape -->
            <apply>
                <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert"/>
                <apply><eq/>
                    <apply>
                        <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/accessor">NUM_DIMS</csymbol>
                        <ci>blocks</ci>
                    </apply>
                    <cn>3</cn>
                </apply>
            </apply>
            <apply>
                <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert"/>
                <apply><eq/>
                    <apply>
                        <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/accessor">NUM_ELEMENTS</csymbol>
                        <ci>blocks</ci>
                    </apply>
                    <cn>8</cn>
                </apply>
            </apply>
            <apply>
                <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert"/>
                <apply><eq/>
                    <apply>
                        <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/view"/>
                        <apply>
                            <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/accessor">SHAPE</csymbol>
                            <ci>blocks</ci>
                        </apply>
                        <apply>
                            <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
                            <cn>0</cn> <!-- dim -->
                            <cn>0</cn> <!-- start -->
                            <cn>0</cn> <!-- stride -->
                            <cn>0</cn> <!-- end -->
                        </apply>
                    </apply>
                    <cn>2</cn>
                </apply>
            </apply>
            <apply>
                <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert"/>
                <apply><eq/>
                    <apply>
                        <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/view"/>
                        <apply>
                            <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/accessor">SHAPE</csymbol>
                            <ci>blocks</ci>
                        </apply>
                        <apply>
                            <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
                            <cn>0</cn> <!-- dim -->
                            <cn>1</cn> <!-- start -->
                            <cn>0</cn> <!-- stride -->
                            <cn>1</cn> <!-- end -->
                        </apply>
                    </apply>
                    <cn>2</cn>
                </apply>
            </apply>
            
            <!-- Test function returning multiple values -->
            <!-- swap = lambda a, b: return b, a -->
            <apply><eq/>
                <ci>swap</ci>
                <lambda>
                    <bvar><ci>a</ci></bvar>
                    <bvar><ci>b</ci></bvar>
                    <apply>
                        <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/statementList"/>
                        <apply>
                            <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/return"/>
                            <ci>b</ci>
                            <ci>a</ci>
                        </apply>
                    </apply>
                </lambda>
            </apply>
            <!-- one, two = swap(2, 1) -->
            <apply><eq/>
                <apply>
                    <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
                    <ci>one</ci>
                    <ci>two</ci>
                </apply>
                <apply>
                    <ci>swap</ci>
                    <cn>2</cn>
                    <cn>1</cn>
                </apply>
            </apply>
            <!-- Check results -->
            <apply>
                <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert"/>
                <apply>
                    <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/accessor">IS_FUNCTION</csymbol>
                    <ci>swap</ci>
                </apply>
            </apply>
            <apply>
                <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert"/>
                <apply><eq/>
                    <ci>one</ci>
                    <cn>1</cn>
                </apply>
            </apply>
            <apply>
                <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert"/>
                <apply><eq/>
                    <ci>two</ci>
                    <cn>2</cn>
                </apply>
            </apply>
            
            <!-- Test nested functions and scoping -->
            <apply><eq/>
                <ci>nested_scopes</ci>
                <lambda>
                    <apply>
                        <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/statementList"/>
                        <!-- Nested function -->
                        <apply><eq/>
                            <ci>nested_fn</ci>
                            <lambda>
                                <bvar><ci>input</ci></bvar>
                                <apply><plus/>
                                    <ci>input</ci>
                                    <ci>outer_var</ci>
                                </apply>
                            </lambda>
                        </apply>
                        <!-- Variable that should be accessible -->
                        <apply><eq/>
                            <ci>outer_var</ci>
                            <cn>1</cn>
                        </apply>
                        <!-- Call nested function & check result -->
                        <apply>
                            <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert"/>
                            <apply><eq/>
                                <apply><ci>nested_fn</ci>
                                    <cn>1</cn>
                                </apply>
                                <cn>2</cn>
                            </apply>
                        </apply>
                    </apply>
                </lambda>
            </apply>
        </apply>
    </post-processing>
</protocol>